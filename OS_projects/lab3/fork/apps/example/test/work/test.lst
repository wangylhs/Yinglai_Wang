 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 548
    4                      ; Text size: 4576
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  0a0a7465	.ascii "\n\ntest for fork starts (%d)=======================\n\000"
   82  00003004  73742066	
   82  00003008  6f722066	
   82  0000300c  6f726b20	
   82  00003010  73746172	
   82  00003014  74732028	
   82  00003018  2564293d	
   82  0000301c  3d3d3d3d	
   82  00003020  3d3d3d3d	
   82  00003024  3d3d3d3d	
   82  00003028  3d3d3d3d	
   82  0000302c  3d3d3d3d	
   82  00003030  3d3d0a00	
   83  00003034          	.align 2
   84  00003034          	LC1_LF0:
   85  00003034  74657374	.ascii "test for fork (%d): Before fork  was=%d\n\000"
   85  00003038  20666f72	
   85  0000303c  20666f72	
   85  00003040  6b202825	
   85  00003044  64293a20	
   85  00003048  4265666f	
   85  0000304c  72652066	
   85  00003050  6f726b20	
   85  00003054  20776173	
   85  00003058  3d25640a	
   85  0000305c  00      	
   86  0000305d          	.align 2
   87  00003060          	LC2_LF0:
   88  00003060  5049443d	.ascii "PID=%d: forking child process\n\000"
   88  00003064  25643a20	
   88  00003068  666f726b	
   88  0000306c  696e6720	
   88  00003070  6368696c	
   88  00003074  64207072	
   88  00003078  6f636573	
   88  0000307c  730a00  	
   89  0000307f          	.align 2
   90  00003080          	LC3_LF0:
   91  00003080  74657374	.ascii "test for fork (%d): This is parent process\n\000"
   91  00003084  20666f72	
   91  00003088  20666f72	
   91  0000308c  6b202825	
   91  00003090  64293a20	
   91  00003094  54686973	
   91  00003098  20697320	
   91  0000309c  70617265	
   91  000030a0  6e742070	
   91  000030a4  726f6365	
   91  000030a8  73730a00	
   92  000030ac          	.align 2
   93  000030ac          	LC4_LF0:
   94  000030ac  74657374	.ascii "test for fork (%d): After fork, was=%d child_pid=%d\n\000"
   94  000030b0  20666f72	
   94  000030b4  20666f72	
   94  000030b8  6b202825	
   94  000030bc  64293a20	
   94  000030c0  41667465	
   94  000030c4  7220666f	
   94  000030c8  726b2c20	
   94  000030cc  7761733d	
   94  000030d0  25642063	
   94  000030d4  68696c64	
   94  000030d8  5f706964	
   94  000030dc  3d25640a	
   94  000030e0  00      	
   95  000030e1          	.align 2
   96  000030e4          	LC5_LF0:
   97  000030e4  50617265	.ascii "Parent process try to change the value of was\n\000"
   97  000030e8  6e742070	
   97  000030ec  726f6365	
   97  000030f0  73732074	
   97  000030f4  72792074	
   97  000030f8  6f206368	
   97  000030fc  616e6765	
   97  00003100  20746865	
   97  00003104  2076616c	
   97  00003108  7565206f	
   97  0000310c  66207761	
   97  00003110  730a00  	
   98  00003113          	.align 2
   99  00003114          	LC6_LF0:
  100  00003114  74657374	.ascii "test for fork (%d): This is parent process, was=%d\n\000"
  100  00003118  20666f72	
  100  0000311c  20666f72	
  100  00003120  6b202825	
  100  00003124  64293a20	
  100  00003128  54686973	
  100  0000312c  20697320	
  100  00003130  70617265	
  100  00003134  6e742070	
  100  00003138  726f6365	
  100  0000313c  73732c20	
  100  00003140  7761733d	
  100  00003144  25640a00	
  101  00003148          	.align 2
  102  00003148          	LC7_LF0:
  103  00003148  74657374	.ascii "test for fork (%d): This is child process\n\000"
  103  0000314c  20666f72	
  103  00003150  20666f72	
  103  00003154  6b202825	
  103  00003158  64293a20	
  103  0000315c  54686973	
  103  00003160  20697320	
  103  00003164  6368696c	
  103  00003168  64207072	
  103  0000316c  6f636573	
  103  00003170  730a00  	
  104  00003173          	.align 2
  105  00003174          	LC8_LF0:
  106  00003174  74657374	.ascii "test for fork (%d): After fork, was=%d cpid=%d\n\000"
  106  00003178  20666f72	
  106  0000317c  20666f72	
  106  00003180  6b202825	
  106  00003184  64293a20	
  106  00003188  41667465	
  106  0000318c  7220666f	
  106  00003190  726b2c20	
  106  00003194  7761733d	
  106  00003198  25642063	
  106  0000319c  7069643d	
  106  000031a0  25640a00	
  107  000031a4          	.align 2
  108  000031a4          	LC9_LF0:
  109  000031a4  4368696c	.ascii "Child process try to change the value of was\n\000"
  109  000031a8  64207072	
  109  000031ac  6f636573	
  109  000031b0  73207472	
  109  000031b4  7920746f	
  109  000031b8  20636861	
  109  000031bc  6e676520	
  109  000031c0  74686520	
  109  000031c4  76616c75	
  109  000031c8  65206f66	
  109  000031cc  20776173	
  109  000031d0  0a00    	
  110  000031d2          	.align 2
  111  000031d4          	LC10_LF0:
  112  000031d4  74657374	.ascii "test for fork (%d): This is child process, was=%d\n\000"
  112  000031d8  20666f72	
  112  000031dc  20666f72	
  112  000031e0  6b202825	
  112  000031e4  64293a20	
  112  000031e8  54686973	
  112  000031ec  20697320	
  112  000031f0  6368696c	
  112  000031f4  64207072	
  112  000031f8  6f636573	
  112  000031fc  732c2077	
  112  00003200  61733d25	
  112  00003204  640a00  	
  113  00003207          	.align 2
  114  00003208          	LC11_LF0:
  115  00003208  74657374	.ascii "test for fork (%d):  Done!\n\000"
  115  0000320c  20666f72	
  115  00003210  20666f72	
  115  00003214  6b202825	
  115  00003218  64293a20	
  115  0000321c  20446f6e	
  115  00003220  65210a00	
  116  00003224          	.text
  117  000010d4          	.align 2
  118  000010d4          	.proc _main
  119  000010d4          	.global _main
  120  000010d4          	_main:
  121                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  122  000010d4  afbefffc	sw	-4(r29),r30; push fp
  123  000010d8  001df020	add	r30,r0,r29; fp = sp
  124  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  125  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  126  000010e4  0c0010f0	jal	___main
  127  000010e8  54000000	nop; not filled.
  128  000010ec  0c00022c	jal	_getpid
  129  000010f0  54000000	nop; not filled.
  130  000010f4  23bdfff8	addi	r29,r29,#-8
  131  000010f8  3c030000	lhi	r3,((LC0_LF0)>>16)&0xffff
  132  000010fc  24633000	addui	r3,r3,(LC0_LF0)&0xffff
  133  00001100  afa30000	sw	(r29),r3
  134  00001104  afa10004	sw	4(r29),r1
  135  00001108  0c000204	jal	_Printf
  136  0000110c  54000000	nop; not filled.
  137  00001110  0c000208	jal	_getpid
  138  00001114  54000000	nop; not filled.
  139  00001118  23bdfff8	addi	r29,r29,#-8
  140  0000111c  3c030000	lhi	r3,((LC1_LF0)>>16)&0xffff
  141  00001120  24633034	addui	r3,r3,(LC1_LF0)&0xffff
  142  00001124  afa30000	sw	(r29),r3
  143  00001128  afa10004	sw	4(r29),r1
  144  0000112c  2003012c	addi	r3,r0,#300
  145  00001130  afa30008	sw	8(r29),r3
  146  00001134  0c0001d8	jal	_Printf
  147  00001138  54000000	nop; not filled.
  148  0000113c  0c0001dc	jal	_getpid
  149  00001140  54000000	nop; not filled.
  150  00001144  3c030000	lhi	r3,((LC2_LF0)>>16)&0xffff
  151  00001148  24633060	addui	r3,r3,(LC2_LF0)&0xffff
  152  0000114c  afa30000	sw	(r29),r3
  153  00001150  afa10004	sw	4(r29),r1
  154  00001154  0c0001b8	jal	_Printf
  155  00001158  54000000	nop; not filled.
  156  0000115c  0c0002d4	jal	_fork
  157  00001160  54000000	nop; not filled.
  158  00001164  00011020	add	r2,r0,r1
  159  00001168  23bd0010	addi	r29,r29,#16
  160  0000116c  64410000	snei	r1,r2,#0
  161  00001170  10200090	beqz	r1,L14_LF0
  162  00001174  54000000	nop; not filled.
  163  00001178  0c0001a0	jal	_getpid
  164  0000117c  54000000	nop; not filled.
  165  00001180  23bdfff8	addi	r29,r29,#-8
  166  00001184  3c030000	lhi	r3,((LC3_LF0)>>16)&0xffff
  167  00001188  24633080	addui	r3,r3,(LC3_LF0)&0xffff
  168  0000118c  afa30000	sw	(r29),r3
  169  00001190  afa10004	sw	4(r29),r1
  170  00001194  0c000178	jal	_Printf
  171  00001198  54000000	nop; not filled.
  172  0000119c  0c00017c	jal	_getpid
  173  000011a0  54000000	nop; not filled.
  174  000011a4  23bdfff8	addi	r29,r29,#-8
  175  000011a8  3c030000	lhi	r3,((LC4_LF0)>>16)&0xffff
  176  000011ac  246330ac	addui	r3,r3,(LC4_LF0)&0xffff
  177  000011b0  afa30000	sw	(r29),r3
  178  000011b4  afa10004	sw	4(r29),r1
  179  000011b8  2003012c	addi	r3,r0,#300
  180  000011bc  afa30008	sw	8(r29),r3
  181  000011c0  afa2000c	sw	12(r29),r2
  182  000011c4  0c000148	jal	_Printf
  183  000011c8  54000000	nop; not filled.
  184  000011cc  3c030000	lhi	r3,((LC5_LF0)>>16)&0xffff
  185  000011d0  246330e4	addui	r3,r3,(LC5_LF0)&0xffff
  186  000011d4  afa30000	sw	(r29),r3
  187  000011d8  0c000134	jal	_Printf
  188  000011dc  54000000	nop; not filled.
  189  000011e0  0c000138	jal	_getpid
  190  000011e4  54000000	nop; not filled.
  191  000011e8  3c030000	lhi	r3,((LC6_LF0)>>16)&0xffff
  192  000011ec  24633114	addui	r3,r3,(LC6_LF0)&0xffff
  193  000011f0  afa30000	sw	(r29),r3
  194  000011f4  afa10004	sw	4(r29),r1
  195  000011f8  20030258	addi	r3,r0,#600
  196  000011fc  08000088	j	L16_LF0
  197  00001200  54000000	nop; not filled.
  198  00001204          	L14_LF0:
  199  00001204  0c000114	jal	_getpid
  200  00001208  54000000	nop; not filled.
  201  0000120c  23bdfff8	addi	r29,r29,#-8
  202  00001210  3c030000	lhi	r3,((LC7_LF0)>>16)&0xffff
  203  00001214  24633148	addui	r3,r3,(LC7_LF0)&0xffff
  204  00001218  afa30000	sw	(r29),r3
  205  0000121c  afa10004	sw	4(r29),r1
  206  00001220  0c0000ec	jal	_Printf
  207  00001224  54000000	nop; not filled.
  208  00001228  0c0000f0	jal	_getpid
  209  0000122c  54000000	nop; not filled.
  210  00001230  23bdfff8	addi	r29,r29,#-8
  211  00001234  3c030000	lhi	r3,((LC8_LF0)>>16)&0xffff
  212  00001238  24633174	addui	r3,r3,(LC8_LF0)&0xffff
  213  0000123c  afa30000	sw	(r29),r3
  214  00001240  afa10004	sw	4(r29),r1
  215  00001244  2003012c	addi	r3,r0,#300
  216  00001248  afa30008	sw	8(r29),r3
  217  0000124c  afa2000c	sw	12(r29),r2
  218  00001250  0c0000bc	jal	_Printf
  219  00001254  54000000	nop; not filled.
  220  00001258  3c030000	lhi	r3,((LC9_LF0)>>16)&0xffff
  221  0000125c  246331a4	addui	r3,r3,(LC9_LF0)&0xffff
  222  00001260  afa30000	sw	(r29),r3
  223  00001264  0c0000a8	jal	_Printf
  224  00001268  54000000	nop; not filled.
  225  0000126c  0c0000ac	jal	_getpid
  226  00001270  54000000	nop; not filled.
  227  00001274  3c030000	lhi	r3,((LC10_LF0)>>16)&0xffff
  228  00001278  246331d4	addui	r3,r3,(LC10_LF0)&0xffff
  229  0000127c  afa30000	sw	(r29),r3
  230  00001280  afa10004	sw	4(r29),r1
  231  00001284  20030384	addi	r3,r0,#900
  232  00001288          	L16_LF0:
  233  00001288  afa30008	sw	8(r29),r3
  234  0000128c  0c000080	jal	_Printf
  235  00001290  54000000	nop; not filled.
  236  00001294  23bd0010	addi	r29,r29,#16
  237  00001298  0c000080	jal	_getpid
  238  0000129c  54000000	nop; not filled.
  239  000012a0  23bdfff8	addi	r29,r29,#-8
  240  000012a4  3c030000	lhi	r3,((LC11_LF0)>>16)&0xffff
  241  000012a8  24633208	addui	r3,r3,(LC11_LF0)&0xffff
  242  000012ac  afa30000	sw	(r29),r3
  243  000012b0  afa10004	sw	4(r29),r1
  244  000012b4  0c000058	jal	_Printf
  245  000012b8  54000000	nop; not filled.
  246  000012bc  23bd0008	addi	r29,r29,#8
  247  000012c0  0c000f08	jal	_exit
  248  000012c4  54000000	nop
  249  000012c8          	.endproc _main
  250                      ;;;
  251                      ;;; Stub functions for DLX traps.
  252                      ;;;
  253                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  254                      ;;;
  255                      ;;; The traps such as Open and Close
  256                      ;;; (note the capital letters) are for use by user programs.  The traps
  257                      ;;; with names such as open and close (lower case) are for use by the OS.
  258                      ;;;
  261  000012c8          	.align 2
  263                      ;;; The following are the traps to be used by user-level programs
  264                      ;;;
  266  000012c8          	.align 2
  267  000012c8          	.proc _Open
  268  000012c8          	.global _Open
  269  000012c8          	_Open:
  270                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  271                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  272                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  273  000012c8  44000213	trap	#0x213
  274  000012cc  4be00000	jr	r31
  275  000012d0  54000000	nop
  276  000012d4          	.endproc _Open
  278  000012d4          	.proc _Close
  279  000012d4          	.global _Close
  280  000012d4          	_Close:
  281  000012d4  44000214	trap	#0x214
  282  000012d8  4be00000	jr	r31
  283  000012dc  54000000	nop
  284  000012e0          	.endproc _Close
  286  000012e0          	.proc _Read
  287  000012e0          	.global _Read
  288  000012e0          	_Read:
  289  000012e0  44000210	trap	#0x210
  290  000012e4  4be00000	jr	r31
  291  000012e8  54000000	nop
  292  000012ec          	.endproc _Read
  294  000012ec          	.proc _Write
  295  000012ec          	.global _Write
  296  000012ec          	_Write:
  297  000012ec  44000211	trap	#0x211
  298  000012f0  4be00000	jr	r31
  299  000012f4  54000000	nop
  300  000012f8          	.endproc _Write
  302  000012f8          	.proc _Lseek
  303  000012f8          	.global _Lseek
  304  000012f8          	_Lseek:
  305  000012f8  44000212	trap	#0x212
  306  000012fc  4be00000	jr	r31
  307  00001300  54000000	nop
  308  00001304          	.endproc _Lseek
  310  00001304          	.proc _Putchar
  311  00001304          	.global _Putchar
  312  00001304          	_Putchar:
  313  00001304  44000280	trap	#0x280
  314  00001308  4be00000	jr	r31
  315  0000130c  54000000	nop
  316  00001310          	.endproc _Putchar
  318  00001310          	.proc _Printf
  319  00001310          	.global _Printf
  320  00001310          	_Printf:
  321  00001310  44000201	trap	#0x201
  322  00001314  4be00000	jr	r31
  323  00001318  54000000	nop
  324  0000131c          	.endproc _Printf
  326  0000131c          	.proc _getpid
  327  0000131c          	.global _getpid
  328  0000131c          	_getpid:
  329  0000131c  44000431	trap	#0x431
  330  00001320  4be00000	jr	r31
  331  00001324  54000000	nop
  332  00001328          	.endproc _getpid
  334  00001328          	.proc _process_create
  335  00001328          	.global _process_create
  336  00001328          	_process_create:
  337  00001328  44000432	trap	#0x432
  338  0000132c  4be00000	jr	r31
  339  00001330  54000000	nop
  340  00001334          	.endproc _process_create
  342  00001334          	.proc _shmget
  343  00001334          	.global _shmget
  344  00001334          	_shmget:
  345  00001334  44000440	trap	#0x440
  346  00001338  4be00000	jr	r31
  347  0000133c  54000000	nop
  348  00001340          	.endproc _shmget
  350  00001340          	.proc _shmat
  351  00001340          	.global _shmat
  352  00001340          	_shmat:
  353  00001340  44000441	trap	#0x441
  354  00001344  4be00000	jr	r31
  355  00001348  54000000	nop
  356  0000134c          	.endproc _shmat
  358  0000134c          	.proc _sem_create
  359  0000134c          	.global _sem_create
  360  0000134c          	_sem_create:
  361  0000134c  44000450	trap	#0x450
  362  00001350  4be00000	jr	r31
  363  00001354  54000000	nop
  364  00001358          	.endproc _sem_create
  366  00001358          	.proc _sem_wait
  367  00001358          	.global _sem_wait
  368  00001358          	_sem_wait:
  369  00001358  44000451	trap	#0x451
  370  0000135c  4be00000	jr	r31
  371  00001360  54000000	nop
  372  00001364          	.endproc _sem_wait
  374  00001364          	.proc _sem_signal
  375  00001364          	.global _sem_signal
  376  00001364          	_sem_signal:
  377  00001364  44000452	trap	#0x452
  378  00001368  4be00000	jr	r31
  379  0000136c  54000000	nop
  380  00001370          	.endproc _sem_signal
  382  00001370          	.proc _lock_create
  383  00001370          	.global _lock_create
  384  00001370          	_lock_create:
  385  00001370  44000453	trap	#0x453
  386  00001374  4be00000	jr	r31
  387  00001378  54000000	nop
  388  0000137c          	.endproc _lock_create
  390  0000137c          	.proc _lock_acquire
  391  0000137c          	.global _lock_acquire
  392  0000137c          	_lock_acquire:
  393  0000137c  44000454	trap	#0x454
  394  00001380  4be00000	jr	r31
  395  00001384  54000000	nop
  396  00001388          	.endproc _lock_acquire
  398  00001388          	.proc _lock_release
  399  00001388          	.global _lock_release
  400  00001388          	_lock_release:
  401  00001388  44000455	trap	#0x455
  402  0000138c  4be00000	jr	r31
  403  00001390  54000000	nop
  404  00001394          	.endproc _lock_release
  406  00001394          	.proc _cond_create
  407  00001394          	.global _cond_create
  408  00001394          	_cond_create:
  409  00001394  44000456	trap	#0x456
  410  00001398  4be00000	jr	r31
  411  0000139c  54000000	nop
  412  000013a0          	.endproc _cond_create
  414  000013a0          	.proc _cond_wait
  415  000013a0          	.global _cond_wait
  416  000013a0          	_cond_wait:
  417  000013a0  44000457	trap	#0x457
  418  000013a4  4be00000	jr	r31
  419  000013a8  54000000	nop
  420  000013ac          	.endproc _cond_wait
  422  000013ac          	.proc _cond_signal
  423  000013ac          	.global _cond_signal
  424  000013ac          	_cond_signal:
  425  000013ac  44000458	trap	#0x458
  426  000013b0  4be00000	jr	r31
  427  000013b4  54000000	nop
  428  000013b8          	.endproc _cond_signal
  430  000013b8          	.proc _cond_broadcast
  431  000013b8          	.global _cond_broadcast
  432  000013b8          	_cond_broadcast:
  433  000013b8  44000459	trap	#0x459
  434  000013bc  4be00000	jr	r31
  435  000013c0  54000000	nop
  436  000013c4          	.endproc _cond_broadcast
  438  000013c4          	.proc _mbox_create
  439  000013c4          	.global _mbox_create
  440  000013c4          	_mbox_create:
  441  000013c4  44000460	trap	#0x460
  442  000013c8  4be00000	jr	r31
  443  000013cc  54000000	nop
  444  000013d0          	.endproc _mbox_create
  446  000013d0          	.proc _mbox_open
  447  000013d0          	.global _mbox_open
  448  000013d0          	_mbox_open:
  449  000013d0  44000461	trap	#0x461
  450  000013d4  4be00000	jr	r31
  451  000013d8  54000000	nop
  452  000013dc          	.endproc _mbox_open
  454  000013dc          	.proc _mbox_close
  455  000013dc          	.global _mbox_close
  456  000013dc          	_mbox_close:
  457  000013dc  44000462	trap	#0x462
  458  000013e0  4be00000	jr	r31
  459  000013e4  54000000	nop
  460  000013e8          	.endproc _mbox_close
  462  000013e8          	.proc _mbox_send
  463  000013e8          	.global _mbox_send
  464  000013e8          	_mbox_send:
  465  000013e8  44000463	trap	#0x463
  466  000013ec  4be00000	jr	r31
  467  000013f0  54000000	nop
  468  000013f4          	.endproc _mbox_send
  470  000013f4          	.proc _mbox_recv
  471  000013f4          	.global _mbox_recv
  472  000013f4          	_mbox_recv:
  473  000013f4  44000464	trap	#0x464
  474  000013f8  4be00000	jr	r31
  475  000013fc  54000000	nop
  476  00001400          	.endproc _mbox_recv
  478  00001400          	.proc _sleep
  479  00001400          	.global _sleep
  480  00001400          	_sleep:
  481  00001400  44000465	trap	#0x465
  482  00001404  4be00000	jr	r31
  483  00001408  54000000	nop
  484  0000140c          	.endproc _sleep
  486  0000140c          	.proc _yield
  487  0000140c          	.global _yield
  488  0000140c          	_yield:
  489  0000140c  44000466	trap	#0x466
  490  00001410  4be00000	jr	r31
  491  00001414  54000000	nop
  492  00001418          	.endproc _yield
  495  00001418          	.proc _Exit
  496  00001418          	.global _Exit
  497  00001418          	_Exit:
  498  00001418  44000500	trap	#0x500
  499  0000141c  4be00000	jr	r31
  500  00001420  54000000	nop
  501  00001424          	.endproc _Exit
  504  00001424          	.proc _malloc
  505  00001424          	.global _malloc
  506  00001424          	_malloc:
  507  00001424  44000467	trap	#0x467
  508  00001428  4be00000	jr	r31
  509  0000142c          	.endproc _malloc
  512  0000142c          	.proc _mfree
  513  0000142c          	.global _mfree
  514  0000142c          	_mfree:
  515  0000142c  44000468	trap	#0x468
  516  00001430  4be00000	jr	r31
  517  00001434          	.endproc _mfree
  519  00001434          	.proc _fork
  520  00001434          	.global _fork
  521  00001434          	_fork:
  522  00001434  44000430	trap	#0x430
  523  00001438  4be00000	jr	r31
  524  0000143c          	.endproc _fork
  525                      ; Compiled by GCC
  527  0000143c          	.align 2
  528  0000143c          	.proc _isspace
  529  0000143c          	.global _isspace
  530  0000143c          	_isspace:
  531                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  532  0000143c  afbefffc	sw	-4(r29),r30; push fp
  533  00001440  001df020	add	r30,r0,r29; fp = sp
  534  00001444  afbffff8	sw	-8(r29),r31; push ret addr
  535  00001448  2fbd0018	subui	r29,r29,#24; alloc local storage
  536  0000144c  afa20000	sw	0(r29),r2
  537  00001450  afa30004	sw	4(r29),r3
  538  00001454  afa40008	sw	8(r29),r4
  539  00001458  83c20003	lb	r2,3(r30)
  540  0000145c  20010000	addi	r1,r0,#0
  541  00001460  304300ff	andi	r3,r2,#0x00ff
  542  00001464  60640020	seqi	r4,r3,#32
  543  00001468  1480002c	bnez	r4,L3_LF2
  544  0000146c  54000000	nop; delay slot nop
  545  00001470  304300ff	andi	r3,r2,#0x00ff
  546  00001474  60640009	seqi	r4,r3,#9
  547  00001478  1480001c	bnez	r4,L3_LF2
  548  0000147c  54000000	nop; delay slot nop
  549  00001480  304300ff	andi	r3,r2,#0x00ff
  550  00001484  6064000a	seqi	r4,r3,#10
  551  00001488  1480000c	bnez	r4,L3_LF2
  552  0000148c  54000000	nop; delay slot nop
  553  00001490  08000008	j	L2_LF2
  554  00001494  54000000	nop; delay slot nop
  555  00001498          	L3_LF2:
  556  00001498  20010001	addi	r1,r0,#1
  557  0000149c          	L2_LF2:
  558  0000149c  08000004	j	L1_LF2
  559  000014a0  54000000	nop; delay slot nop
  560  000014a4          	L1_LF2:
  561  000014a4  8fa20000	lw	r2,0(r29)
  562  000014a8  8fa30004	lw	r3,4(r29)
  563  000014ac  8fa40008	lw	r4,8(r29)
  564  000014b0  8fdffff8	lw	r31,-8(r30)
  565  000014b4  001ee820	add	r29,r0,r30
  566  000014b8  8fdefffc	lw	r30,-4(r30)
  567  000014bc  4be00000	jr	r31
  568  000014c0  54000000	nop
  569  000014c4          	.endproc _isspace
  570  000014c4          	.align 2
  571  000014c4          	.proc _isxdigit
  572  000014c4          	.global _isxdigit
  573  000014c4          	_isxdigit:
  574                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  575  000014c4  afbefffc	sw	-4(r29),r30; push fp
  576  000014c8  001df020	add	r30,r0,r29; fp = sp
  577  000014cc  afbffff8	sw	-8(r29),r31; push ret addr
  578  000014d0  2fbd0018	subui	r29,r29,#24; alloc local storage
  579  000014d4  afa20000	sw	0(r29),r2
  580  000014d8  afa30004	sw	4(r29),r3
  581  000014dc  afa40008	sw	8(r29),r4
  582  000014e0  83c20003	lb	r2,3(r30)
  583  000014e4  20010000	addi	r1,r0,#0
  584  000014e8  304300ff	andi	r3,r2,#0x00ff
  585  000014ec  6c64002f	sgtui	r4,r3,#47
  586  000014f0  1080001c	beqz	r4,L7_LF2
  587  000014f4  54000000	nop; delay slot nop
  588  000014f8  304300ff	andi	r3,r2,#0x00ff
  589  000014fc  70640039	sleui	r4,r3,#57
  590  00001500  1480005c	bnez	r4,L6_LF2
  591  00001504  54000000	nop; delay slot nop
  592  00001508  08000004	j	L7_LF2
  593  0000150c  54000000	nop; delay slot nop
  594  00001510          	L7_LF2:
  595  00001510  304300ff	andi	r3,r2,#0x00ff
  596  00001514  6c640060	sgtui	r4,r3,#96
  597  00001518  1080001c	beqz	r4,L8_LF2
  598  0000151c  54000000	nop; delay slot nop
  599  00001520  304300ff	andi	r3,r2,#0x00ff
  600  00001524  70640066	sleui	r4,r3,#102
  601  00001528  14800034	bnez	r4,L6_LF2
  602  0000152c  54000000	nop; delay slot nop
  603  00001530  08000004	j	L8_LF2
  604  00001534  54000000	nop; delay slot nop
  605  00001538          	L8_LF2:
  606  00001538  304300ff	andi	r3,r2,#0x00ff
  607  0000153c  6c640040	sgtui	r4,r3,#64
  608  00001540  10800020	beqz	r4,L5_LF2
  609  00001544  54000000	nop; delay slot nop
  610  00001548  304300ff	andi	r3,r2,#0x00ff
  611  0000154c  70640041	sleui	r4,r3,#65
  612  00001550  1480000c	bnez	r4,L6_LF2
  613  00001554  54000000	nop; delay slot nop
  614  00001558  08000008	j	L5_LF2
  615  0000155c  54000000	nop; delay slot nop
  616  00001560          	L6_LF2:
  617  00001560  20010001	addi	r1,r0,#1
  618  00001564          	L5_LF2:
  619  00001564  08000004	j	L4_LF2
  620  00001568  54000000	nop; delay slot nop
  621  0000156c          	L4_LF2:
  622  0000156c  8fa20000	lw	r2,0(r29)
  623  00001570  8fa30004	lw	r3,4(r29)
  624  00001574  8fa40008	lw	r4,8(r29)
  625  00001578  8fdffff8	lw	r31,-8(r30)
  626  0000157c  001ee820	add	r29,r0,r30
  627  00001580  8fdefffc	lw	r30,-4(r30)
  628  00001584  4be00000	jr	r31
  629  00001588  54000000	nop
  630  0000158c          	.endproc _isxdigit
  631  0000158c          	.align 2
  632  0000158c          	.proc _dstrcpy
  633  0000158c          	.global _dstrcpy
  634  0000158c          	_dstrcpy:
  635                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  636  0000158c  afbefffc	sw	-4(r29),r30; push fp
  637  00001590  001df020	add	r30,r0,r29; fp = sp
  638  00001594  afbffff8	sw	-8(r29),r31; push ret addr
  639  00001598  2fbd0018	subui	r29,r29,#24; alloc local storage
  640  0000159c  afa20000	sw	0(r29),r2
  641  000015a0  afa30004	sw	4(r29),r3
  642  000015a4  8fc10000	lw	r1,(r30)
  643  000015a8  afc1fff4	sw	-12(r30),r1
  644  000015ac          	L10_LF2:
  645  000015ac  8fc10000	lw	r1,(r30)
  646  000015b0  20220001	addi	r2,r1,#1
  647  000015b4  afc20000	sw	(r30),r2
  648  000015b8  8fc20004	lw	r2,4(r30)
  649  000015bc  20430001	addi	r3,r2,#1
  650  000015c0  afc30004	sw	4(r30),r3
  651  000015c4  80420000	lb	r2,(r2)
  652  000015c8  a0220000	sb	(r1),r2
  653  000015cc  a3c2fff3	sb	-13(r30),r2
  654  000015d0          	L12_LF2:
  655  000015d0  93c1fff3	lbu	r1,-13(r30)
  656  000015d4  64220000	snei	r2,r1,#0
  657  000015d8  1440000c	bnez	r2,L13_LF2
  658  000015dc  54000000	nop; delay slot nop
  659  000015e0  0800000c	j	L11_LF2
  660  000015e4  54000000	nop; delay slot nop
  661  000015e8          	L13_LF2:
  662  000015e8  0bffffc0	j	L10_LF2
  663  000015ec  54000000	nop; delay slot nop
  664  000015f0          	L11_LF2:
  665  000015f0  8fc1fff4	lw	r1,-12(r30)
  666  000015f4  08000004	j	L9_LF2
  667  000015f8  54000000	nop; delay slot nop
  668  000015fc          	L9_LF2:
  669  000015fc  8fa20000	lw	r2,0(r29)
  670  00001600  8fa30004	lw	r3,4(r29)
  671  00001604  8fdffff8	lw	r31,-8(r30)
  672  00001608  001ee820	add	r29,r0,r30
  673  0000160c  8fdefffc	lw	r30,-4(r30)
  674  00001610  4be00000	jr	r31
  675  00001614  54000000	nop
  676  00001618          	.endproc _dstrcpy
  677  00001618          	.align 2
  678  00001618          	.proc _dstrncpy
  679  00001618          	.global _dstrncpy
  680  00001618          	_dstrncpy:
  681                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  682  00001618  afbefffc	sw	-4(r29),r30; push fp
  683  0000161c  001df020	add	r30,r0,r29; fp = sp
  684  00001620  afbffff8	sw	-8(r29),r31; push ret addr
  685  00001624  2fbd0018	subui	r29,r29,#24; alloc local storage
  686  00001628  afa20000	sw	0(r29),r2
  687  0000162c  afa30004	sw	4(r29),r3
  688  00001630  8fc10000	lw	r1,(r30)
  689  00001634  afc1fff4	sw	-12(r30),r1
  690  00001638          	L15_LF2:
  691  00001638  8fc10008	lw	r1,8(r30)
  692  0000163c  2022ffff	addi	r2,r1,#-1
  693  00001640  afc20008	sw	8(r30),r2
  694  00001644  70210000	slei	r1,r1,#0
  695  00001648  1020000c	beqz	r1,L18_LF2
  696  0000164c  54000000	nop; delay slot nop
  697  00001650  08000048	j	L16_LF2
  698  00001654  54000000	nop; delay slot nop
  699  00001658          	L18_LF2:
  700  00001658  8fc10000	lw	r1,(r30)
  701  0000165c  20220001	addi	r2,r1,#1
  702  00001660  afc20000	sw	(r30),r2
  703  00001664  8fc20004	lw	r2,4(r30)
  704  00001668  20430001	addi	r3,r2,#1
  705  0000166c  afc30004	sw	4(r30),r3
  706  00001670  80420000	lb	r2,(r2)
  707  00001674  a0220000	sb	(r1),r2
  708  00001678  a3c2fff3	sb	-13(r30),r2
  709  0000167c          	L17_LF2:
  710  0000167c  93c1fff3	lbu	r1,-13(r30)
  711  00001680  64220000	snei	r2,r1,#0
  712  00001684  1440000c	bnez	r2,L19_LF2
  713  00001688  54000000	nop; delay slot nop
  714  0000168c  0800000c	j	L16_LF2
  715  00001690  54000000	nop; delay slot nop
  716  00001694          	L19_LF2:
  717  00001694  0bffffa0	j	L15_LF2
  718  00001698  54000000	nop; delay slot nop
  719  0000169c          	L16_LF2:
  720  0000169c  8fc1fff4	lw	r1,-12(r30)
  721  000016a0  08000004	j	L14_LF2
  722  000016a4  54000000	nop; delay slot nop
  723  000016a8          	L14_LF2:
  724  000016a8  8fa20000	lw	r2,0(r29)
  725  000016ac  8fa30004	lw	r3,4(r29)
  726  000016b0  8fdffff8	lw	r31,-8(r30)
  727  000016b4  001ee820	add	r29,r0,r30
  728  000016b8  8fdefffc	lw	r30,-4(r30)
  729  000016bc  4be00000	jr	r31
  730  000016c0  54000000	nop
  731  000016c4          	.endproc _dstrncpy
  732  000016c4          	.align 2
  733  000016c4          	.proc _dstrcat
  734  000016c4          	.global _dstrcat
  735  000016c4          	_dstrcat:
  736                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  737  000016c4  afbefffc	sw	-4(r29),r30; push fp
  738  000016c8  001df020	add	r30,r0,r29; fp = sp
  739  000016cc  afbffff8	sw	-8(r29),r31; push ret addr
  740  000016d0  2fbd0018	subui	r29,r29,#24; alloc local storage
  741  000016d4  afa20000	sw	0(r29),r2
  742  000016d8  8fc10000	lw	r1,(r30)
  743  000016dc  afc1fff4	sw	-12(r30),r1
  744  000016e0          	L21_LF2:
  745  000016e0  8fc10000	lw	r1,(r30)
  746  000016e4  90220000	lbu	r2,(r1)
  747  000016e8  64410000	snei	r1,r2,#0
  748  000016ec  1420000c	bnez	r1,L23_LF2
  749  000016f0  54000000	nop; delay slot nop
  750  000016f4  0800001c	j	L22_LF2
  751  000016f8  54000000	nop; delay slot nop
  752  000016fc          	L23_LF2:
  753  000016fc  8fc20000	lw	r2,(r30)
  754  00001700  20410001	addi	r1,r2,#1
  755  00001704  00011020	add	r2,r0,r1
  756  00001708  afc20000	sw	(r30),r2
  757  0000170c  0bffffd0	j	L21_LF2
  758  00001710  54000000	nop; delay slot nop
  759  00001714          	L22_LF2:
  760  00001714  23bdfff8	addi	r29,r29,#-8
  761  00001718  001d0820	add	r1,r0,r29
  762  0000171c  8fc20000	lw	r2,(r30)
  763  00001720  ac220000	sw	(r1),r2
  764  00001724  8fc20004	lw	r2,4(r30)
  765  00001728  ac220004	sw	4(r1),r2
  766  0000172c  0ffffe5c	jal	_dstrcpy
  767  00001730  54000000	nop; delay slot nop
  768  00001734  23bd0008	addi	r29,r29,#8
  769  00001738  8fc1fff4	lw	r1,-12(r30)
  770  0000173c  08000004	j	L20_LF2
  771  00001740  54000000	nop; delay slot nop
  772  00001744          	L20_LF2:
  773  00001744  8fa20000	lw	r2,0(r29)
  774  00001748  8fdffff8	lw	r31,-8(r30)
  775  0000174c  001ee820	add	r29,r0,r30
  776  00001750  8fdefffc	lw	r30,-4(r30)
  777  00001754  4be00000	jr	r31
  778  00001758  54000000	nop
  779  0000175c          	.endproc _dstrcat
  780  0000175c          	.align 2
  781  0000175c          	.proc _dstrncmp
  782  0000175c          	.global _dstrncmp
  783  0000175c          	_dstrncmp:
  784                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  785  0000175c  afbefffc	sw	-4(r29),r30; push fp
  786  00001760  001df020	add	r30,r0,r29; fp = sp
  787  00001764  afbffff8	sw	-8(r29),r31; push ret addr
  788  00001768  2fbd0018	subui	r29,r29,#24; alloc local storage
  789  0000176c  afa20000	sw	0(r29),r2
  790  00001770  afa30004	sw	4(r29),r3
  791  00001774  54000000	nop
  792  00001778  20010000	addi	r1,r0,#0
  793  0000177c  afc1fff4	sw	-12(r30),r1
  794  00001780          	L25_LF2:
  795  00001780  8fc1fff4	lw	r1,-12(r30)
  796  00001784  8fc20008	lw	r2,8(r30)
  797  00001788  0022082a	slt	r1,r1,r2
  798  0000178c  1420000c	bnez	r1,L28_LF2
  799  00001790  54000000	nop; delay slot nop
  800  00001794  08000088	j	L26_LF2
  801  00001798  54000000	nop; delay slot nop
  802  0000179c          	L28_LF2:
  803  0000179c  8fc10004	lw	r1,4(r30)
  804  000017a0  90220000	lbu	r2,(r1)
  805  000017a4  64410000	snei	r1,r2,#0
  806  000017a8  14200018	bnez	r1,L29_LF2
  807  000017ac  54000000	nop; delay slot nop
  808  000017b0  20010000	addi	r1,r0,#0
  809  000017b4  080000d8	j	L24_LF2
  810  000017b8  54000000	nop; delay slot nop
  811  000017bc  08000028	j	L30_LF2
  812  000017c0  54000000	nop; delay slot nop
  813  000017c4          	L29_LF2:
  814  000017c4  8fc10000	lw	r1,(r30)
  815  000017c8  8fc20004	lw	r2,4(r30)
  816  000017cc  90210000	lbu	r1,(r1)
  817  000017d0  90420000	lbu	r2,(r2)
  818  000017d4  00220829	sne	r1,r1,r2
  819  000017d8  1020000c	beqz	r1,L30_LF2
  820  000017dc  54000000	nop; delay slot nop
  821  000017e0  0800003c	j	L26_LF2
  822  000017e4  54000000	nop; delay slot nop
  823  000017e8          	L31_LF2:
  824  000017e8          	L30_LF2:
  825  000017e8  8fc20000	lw	r2,(r30)
  826  000017ec  20410001	addi	r1,r2,#1
  827  000017f0  00011020	add	r2,r0,r1
  828  000017f4  afc20000	sw	(r30),r2
  829  000017f8  8fc20004	lw	r2,4(r30)
  830  000017fc  20410001	addi	r1,r2,#1
  831  00001800  00011020	add	r2,r0,r1
  832  00001804  afc20004	sw	4(r30),r2
  833  00001808          	L27_LF2:
  834  00001808  8fc2fff4	lw	r2,-12(r30)
  835  0000180c  20410001	addi	r1,r2,#1
  836  00001810  00011020	add	r2,r0,r1
  837  00001814  afc2fff4	sw	-12(r30),r2
  838  00001818  0bffff64	j	L25_LF2
  839  0000181c  54000000	nop; delay slot nop
  840  00001820          	L26_LF2:
  841  00001820  8fc1fff4	lw	r1,-12(r30)
  842  00001824  8fc20008	lw	r2,8(r30)
  843  00001828  00220828	seq	r1,r1,r2
  844  0000182c  10200018	beqz	r1,L32_LF2
  845  00001830  54000000	nop; delay slot nop
  846  00001834  20010000	addi	r1,r0,#0
  847  00001838  08000054	j	L24_LF2
  848  0000183c  54000000	nop; delay slot nop
  849  00001840  0800004c	j	L33_LF2
  850  00001844  54000000	nop; delay slot nop
  851  00001848          	L32_LF2:
  852  00001848  8fc20000	lw	r2,(r30)
  853  0000184c  90410000	lbu	r1,(r2)
  854  00001850  8fc20004	lw	r2,4(r30)
  855  00001854  90430000	lbu	r3,(r2)
  856  00001858  00230822	sub	r1,r1,r3
  857  0000185c  74220000	sgei	r2,r1,#0
  858  00001860  10400020	beqz	r2,L34_LF2
  859  00001864  54000000	nop; delay slot nop
  860  00001868  8fc10000	lw	r1,(r30)
  861  0000186c  8fc20004	lw	r2,4(r30)
  862  00001870  90210000	lbu	r1,(r1)
  863  00001874  90420000	lbu	r2,(r2)
  864  00001878  00220829	sne	r1,r1,r2
  865  0000187c  08000008	j	L35_LF2
  866  00001880  54000000	nop; delay slot nop
  867  00001884          	L34_LF2:
  868  00001884  2001ffff	addi	r1,r0,#-1
  869  00001888          	L35_LF2:
  870  00001888  08000004	j	L24_LF2
  871  0000188c  54000000	nop; delay slot nop
  872  00001890          	L33_LF2:
  873  00001890          	L24_LF2:
  874  00001890  8fa20000	lw	r2,0(r29)
  875  00001894  8fa30004	lw	r3,4(r29)
  876  00001898  8fdffff8	lw	r31,-8(r30)
  877  0000189c  001ee820	add	r29,r0,r30
  878  000018a0  8fdefffc	lw	r30,-4(r30)
  879  000018a4  4be00000	jr	r31
  880  000018a8  54000000	nop
  881  000018ac          	.endproc _dstrncmp
  882  000018ac          	.align 2
  883  000018ac          	.proc _dstrlen
  884  000018ac          	.global _dstrlen
  885  000018ac          	_dstrlen:
  886                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  887  000018ac  afbefffc	sw	-4(r29),r30; push fp
  888  000018b0  001df020	add	r30,r0,r29; fp = sp
  889  000018b4  afbffff8	sw	-8(r29),r31; push ret addr
  890  000018b8  2fbd0018	subui	r29,r29,#24; alloc local storage
  891  000018bc  afa20000	sw	0(r29),r2
  892  000018c0  20010000	addi	r1,r0,#0
  893  000018c4  afc1fff4	sw	-12(r30),r1
  894  000018c8          	L37_LF2:
  895  000018c8  8fc10000	lw	r1,(r30)
  896  000018cc  20220001	addi	r2,r1,#1
  897  000018d0  afc20000	sw	(r30),r2
  898  000018d4  90210000	lbu	r1,(r1)
  899  000018d8  64220000	snei	r2,r1,#0
  900  000018dc  1440000c	bnez	r2,L39_LF2
  901  000018e0  54000000	nop; delay slot nop
  902  000018e4  0800001c	j	L38_LF2
  903  000018e8  54000000	nop; delay slot nop
  904  000018ec          	L39_LF2:
  905  000018ec  8fc2fff4	lw	r2,-12(r30)
  906  000018f0  20410001	addi	r1,r2,#1
  907  000018f4  00011020	add	r2,r0,r1
  908  000018f8  afc2fff4	sw	-12(r30),r2
  909  000018fc  0bffffc8	j	L37_LF2
  910  00001900  54000000	nop; delay slot nop
  911  00001904          	L38_LF2:
  912  00001904  8fc1fff4	lw	r1,-12(r30)
  913  00001908  08000004	j	L36_LF2
  914  0000190c  54000000	nop; delay slot nop
  915  00001910          	L36_LF2:
  916  00001910  8fa20000	lw	r2,0(r29)
  917  00001914  8fdffff8	lw	r31,-8(r30)
  918  00001918  001ee820	add	r29,r0,r30
  919  0000191c  8fdefffc	lw	r30,-4(r30)
  920  00001920  4be00000	jr	r31
  921  00001924  54000000	nop
  922  00001928          	.endproc _dstrlen
  923  00001928          	.align 2
  924  00001928          	.proc _dstrstr
  925  00001928          	.global _dstrstr
  926  00001928          	_dstrstr:
  927                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  928  00001928  afbefffc	sw	-4(r29),r30; push fp
  929  0000192c  001df020	add	r30,r0,r29; fp = sp
  930  00001930  afbffff8	sw	-8(r29),r31; push ret addr
  931  00001934  2fbd0018	subui	r29,r29,#24; alloc local storage
  932  00001938  afa20000	sw	0(r29),r2
  933  0000193c  23bdfff8	addi	r29,r29,#-8
  934  00001940  001d0820	add	r1,r0,r29
  935  00001944  8fc20004	lw	r2,4(r30)
  936  00001948  ac220000	sw	(r1),r2
  937  0000194c  0fffff5c	jal	_dstrlen
  938  00001950  54000000	nop; delay slot nop
  939  00001954  23bd0008	addi	r29,r29,#8
  940  00001958  afc1fff4	sw	-12(r30),r1
  941  0000195c          	L41_LF2:
  942  0000195c  8fc10000	lw	r1,(r30)
  943  00001960  90220000	lbu	r2,(r1)
  944  00001964  64410000	snei	r1,r2,#0
  945  00001968  1420000c	bnez	r1,L43_LF2
  946  0000196c  54000000	nop; delay slot nop
  947  00001970  08000060	j	L42_LF2
  948  00001974  54000000	nop; delay slot nop
  949  00001978          	L43_LF2:
  950  00001978  23bdfff0	addi	r29,r29,#-16
  951  0000197c  001d0820	add	r1,r0,r29
  952  00001980  8fc20000	lw	r2,(r30)
  953  00001984  ac220000	sw	(r1),r2
  954  00001988  8fc20004	lw	r2,4(r30)
  955  0000198c  ac220004	sw	4(r1),r2
  956  00001990  8fc2fff4	lw	r2,-12(r30)
  957  00001994  ac220008	sw	8(r1),r2
  958  00001998  0ffffdc0	jal	_dstrncmp
  959  0000199c  54000000	nop; delay slot nop
  960  000019a0  23bd0010	addi	r29,r29,#16
  961  000019a4  64220000	snei	r2,r1,#0
  962  000019a8  14400010	bnez	r2,L44_LF2
  963  000019ac  54000000	nop; delay slot nop
  964  000019b0  8fc10000	lw	r1,(r30)
  965  000019b4  08000028	j	L40_LF2
  966  000019b8  54000000	nop; delay slot nop
  967  000019bc          	L44_LF2:
  968  000019bc  8fc20000	lw	r2,(r30)
  969  000019c0  20410001	addi	r1,r2,#1
  970  000019c4  00011020	add	r2,r0,r1
  971  000019c8  afc20000	sw	(r30),r2
  972  000019cc  0bffff8c	j	L41_LF2
  973  000019d0  54000000	nop; delay slot nop
  974  000019d4          	L42_LF2:
  975  000019d4  20010000	addi	r1,r0,#0
  976  000019d8  08000004	j	L40_LF2
  977  000019dc  54000000	nop; delay slot nop
  978  000019e0          	L40_LF2:
  979  000019e0  8fa20000	lw	r2,0(r29)
  980  000019e4  8fdffff8	lw	r31,-8(r30)
  981  000019e8  001ee820	add	r29,r0,r30
  982  000019ec  8fdefffc	lw	r30,-4(r30)
  983  000019f0  4be00000	jr	r31
  984  000019f4  54000000	nop
  985  000019f8          	.endproc _dstrstr
  986  000019f8          	.align 2
  987  000019f8          	.proc _dmindex
  988  000019f8          	.global _dmindex
  989  000019f8          	_dmindex:
  990                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  991  000019f8  afbefffc	sw	-4(r29),r30; push fp
  992  000019fc  001df020	add	r30,r0,r29; fp = sp
  993  00001a00  afbffff8	sw	-8(r29),r31; push ret addr
  994  00001a04  2fbd0018	subui	r29,r29,#24; alloc local storage
  995  00001a08  afa20000	sw	0(r29),r2
  996  00001a0c  54000000	nop
  997  00001a10          	L46_LF2:
  998  00001a10  8fc10000	lw	r1,(r30)
  999  00001a14  90220000	lbu	r2,(r1)
 1000  00001a18  64410000	snei	r1,r2,#0
 1001  00001a1c  1420000c	bnez	r1,L48_LF2
 1002  00001a20  54000000	nop; delay slot nop
 1003  00001a24  08000070	j	L47_LF2
 1004  00001a28  54000000	nop; delay slot nop
 1005  00001a2c          	L48_LF2:
 1006  00001a2c  8fc10004	lw	r1,4(r30)
 1007  00001a30  afc1fff4	sw	-12(r30),r1
 1008  00001a34          	L49_LF2:
 1009  00001a34  8fc1fff4	lw	r1,-12(r30)
 1010  00001a38  90220000	lbu	r2,(r1)
 1011  00001a3c  64410000	snei	r1,r2,#0
 1012  00001a40  1420000c	bnez	r1,L52_LF2
 1013  00001a44  54000000	nop; delay slot nop
 1014  00001a48  08000044	j	L50_LF2
 1015  00001a4c  54000000	nop; delay slot nop
 1016  00001a50          	L52_LF2:
 1017  00001a50  8fc10000	lw	r1,(r30)
 1018  00001a54  8fc2fff4	lw	r2,-12(r30)
 1019  00001a58  90210000	lbu	r1,(r1)
 1020  00001a5c  90420000	lbu	r2,(r2)
 1021  00001a60  00220828	seq	r1,r1,r2
 1022  00001a64  10200010	beqz	r1,L51_LF2
 1023  00001a68  54000000	nop; delay slot nop
 1024  00001a6c  8fc10000	lw	r1,(r30)
 1025  00001a70  08000030	j	L45_LF2
 1026  00001a74  54000000	nop; delay slot nop
 1027  00001a78          	L53_LF2:
 1028  00001a78          	L51_LF2:
 1029  00001a78  8fc2fff4	lw	r2,-12(r30)
 1030  00001a7c  20410001	addi	r1,r2,#1
 1031  00001a80  00011020	add	r2,r0,r1
 1032  00001a84  afc2fff4	sw	-12(r30),r2
 1033  00001a88  0bffffa8	j	L49_LF2
 1034  00001a8c  54000000	nop; delay slot nop
 1035  00001a90          	L50_LF2:
 1036  00001a90  0bffff7c	j	L46_LF2
 1037  00001a94  54000000	nop; delay slot nop
 1038  00001a98          	L47_LF2:
 1039  00001a98  20010000	addi	r1,r0,#0
 1040  00001a9c  08000004	j	L45_LF2
 1041  00001aa0  54000000	nop; delay slot nop
 1042  00001aa4          	L45_LF2:
 1043  00001aa4  8fa20000	lw	r2,0(r29)
 1044  00001aa8  8fdffff8	lw	r31,-8(r30)
 1045  00001aac  001ee820	add	r29,r0,r30
 1046  00001ab0  8fdefffc	lw	r30,-4(r30)
 1047  00001ab4  4be00000	jr	r31
 1048  00001ab8  54000000	nop
 1049  00001abc          	.endproc _dmindex
 1050  00001abc          	.align 2
 1051  00001abc          	.proc _dindex
 1052  00001abc          	.global _dindex
 1053  00001abc          	_dindex:
 1054                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1055  00001abc  afbefffc	sw	-4(r29),r30; push fp
 1056  00001ac0  001df020	add	r30,r0,r29; fp = sp
 1057  00001ac4  afbffff8	sw	-8(r29),r31; push ret addr
 1058  00001ac8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1059  00001acc  afa20000	sw	0(r29),r2
 1060  00001ad0  54000000	nop
 1061  00001ad4          	L55_LF2:
 1062  00001ad4  8fc10000	lw	r1,(r30)
 1063  00001ad8  90220000	lbu	r2,(r1)
 1064  00001adc  64410000	snei	r1,r2,#0
 1065  00001ae0  1420000c	bnez	r1,L57_LF2
 1066  00001ae4  54000000	nop; delay slot nop
 1067  00001ae8  08000040	j	L56_LF2
 1068  00001aec  54000000	nop; delay slot nop
 1069  00001af0          	L57_LF2:
 1070  00001af0  8fc10000	lw	r1,(r30)
 1071  00001af4  90220000	lbu	r2,(r1)
 1072  00001af8  8fc10004	lw	r1,4(r30)
 1073  00001afc  00411028	seq	r2,r2,r1
 1074  00001b00  10400010	beqz	r2,L58_LF2
 1075  00001b04  54000000	nop; delay slot nop
 1076  00001b08  8fc10000	lw	r1,(r30)
 1077  00001b0c  08000028	j	L54_LF2
 1078  00001b10  54000000	nop; delay slot nop
 1079  00001b14          	L58_LF2:
 1080  00001b14  8fc20000	lw	r2,(r30)
 1081  00001b18  20410001	addi	r1,r2,#1
 1082  00001b1c  00011020	add	r2,r0,r1
 1083  00001b20  afc20000	sw	(r30),r2
 1084  00001b24  0bffffac	j	L55_LF2
 1085  00001b28  54000000	nop; delay slot nop
 1086  00001b2c          	L56_LF2:
 1087  00001b2c  20010000	addi	r1,r0,#0
 1088  00001b30  08000004	j	L54_LF2
 1089  00001b34  54000000	nop; delay slot nop
 1090  00001b38          	L54_LF2:
 1091  00001b38  8fa20000	lw	r2,0(r29)
 1092  00001b3c  8fdffff8	lw	r31,-8(r30)
 1093  00001b40  001ee820	add	r29,r0,r30
 1094  00001b44  8fdefffc	lw	r30,-4(r30)
 1095  00001b48  4be00000	jr	r31
 1096  00001b4c  54000000	nop
 1097  00001b50          	.endproc _dindex
 1098  00001b50          	.align 2
 1099  00001b50          	.proc _ditoa
 1100  00001b50          	.global _ditoa
 1101  00001b50          	_ditoa:
 1102                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1103  00001b50  afbefffc	sw	-4(r29),r30; push fp
 1104  00001b54  001df020	add	r30,r0,r29; fp = sp
 1105  00001b58  afbffff8	sw	-8(r29),r31; push ret addr
 1106  00001b5c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1107  00001b60  afa20000	sw	0(r29),r2
 1108  00001b64  afa30004	sw	4(r29),r3
 1109  00001b68  8fc10000	lw	r1,(r30)
 1110  00001b6c  68220000	slti	r2,r1,#0
 1111  00001b70  1040002c	beqz	r2,L60_LF2
 1112  00001b74  54000000	nop; delay slot nop
 1113  00001b78  8fc10004	lw	r1,4(r30)
 1114  00001b7c  20220001	addi	r2,r1,#1
 1115  00001b80  afc20004	sw	4(r30),r2
 1116  00001b84  2002002d	addi	r2,r0,(#0x2d)&0xff
 1117  00001b88  a0220000	sb	(r1),r2
 1118  00001b8c  8fc10000	lw	r1,(r30)
 1119  00001b90  00011022	sub	r2,r0,r1
 1120  00001b94  afc20000	sw	(r30),r2
 1121  00001b98  08000118	j	L61_LF2
 1122  00001b9c  54000000	nop; delay slot nop
 1123  00001ba0          	L60_LF2:
 1124  00001ba0  8fc10000	lw	r1,(r30)
 1125  00001ba4  64220000	snei	r2,r1,#0
 1126  00001ba8  14400020	bnez	r2,L62_LF2
 1127  00001bac  54000000	nop; delay slot nop
 1128  00001bb0  8fc10004	lw	r1,4(r30)
 1129  00001bb4  20220001	addi	r2,r1,#1
 1130  00001bb8  afc20004	sw	4(r30),r2
 1131  00001bbc  20020030	addi	r2,r0,(#0x30)&0xff
 1132  00001bc0  a0220000	sb	(r1),r2
 1133  00001bc4  080000ec	j	L61_LF2
 1134  00001bc8  54000000	nop; delay slot nop
 1135  00001bcc          	L62_LF2:
 1136  00001bcc  20010001	addi	r1,r0,#1
 1137  00001bd0  afc1fff4	sw	-12(r30),r1
 1138  00001bd4          	L64_LF2:
 1139  00001bd4  8fc1fff4	lw	r1,-12(r30)
 1140  00001bd8  8fc20000	lw	r2,(r30)
 1141  00001bdc  0022082c	sle	r1,r1,r2
 1142  00001be0  1420000c	bnez	r1,L66_LF2
 1143  00001be4  54000000	nop; delay slot nop
 1144  00001be8  08000024	j	L65_LF2
 1145  00001bec  54000000	nop; delay slot nop
 1146  00001bf0          	L67_LF2:
 1147  00001bf0          	L66_LF2:
 1148  00001bf0  8fc1fff4	lw	r1,-12(r30)
 1149  00001bf4  00011820	add	r3,r0,r1
 1150  00001bf8  50620002	slli	r2,r3,#0x2
 1151  00001bfc  00411020	add	r2,r2,r1
 1152  00001c00  50410001	slli	r1,r2,#0x1
 1153  00001c04  afc1fff4	sw	-12(r30),r1
 1154  00001c08  0bffffc8	j	L64_LF2
 1155  00001c0c  54000000	nop; delay slot nop
 1156  00001c10          	L65_LF2:
 1157  00001c10  54000000	nop
 1158  00001c14          	L68_LF2:
 1159  00001c14  8fc1fff4	lw	r1,-12(r30)
 1160  00001c18  2002000a	addi	r2,r0,#10
 1161  00001c1c  00200035	movi2fp	f0,r1
 1162  00001c20  00400835	movi2fp	f1,r2
 1163  00001c24  0401000f	div	f0,f0,f1
 1164  00001c28  00000834	movfp2i	r1,f0
 1165  00001c2c  afc1fff4	sw	-12(r30),r1
 1166  00001c30  8fc10004	lw	r1,4(r30)
 1167  00001c34  20220001	addi	r2,r1,#1
 1168  00001c38  afc20004	sw	4(r30),r2
 1169  00001c3c  8fc20000	lw	r2,(r30)
 1170  00001c40  8fc3fff4	lw	r3,-12(r30)
 1171  00001c44  00400035	movi2fp	f0,r2
 1172  00001c48  00600835	movi2fp	f1,r3
 1173  00001c4c  0401000f	div	f0,f0,f1
 1174  00001c50  00001034	movfp2i	r2,f0
 1175  00001c54  00021820	add	r3,r0,r2
 1176  00001c58  20620030	addi	r2,r3,#48
 1177  00001c5c  a0220000	sb	(r1),r2
 1178  00001c60  8fc10000	lw	r1,(r30)
 1179  00001c64  8fc3fff4	lw	r3,-12(r30)
 1180  00001c68  00200035	movi2fp	f0,r1
 1181  00001c6c  00600835	movi2fp	f1,r3
 1182  00001c70  0401000f	div	f0,f0,f1
 1183  00001c74  00001034	movfp2i	r2,f0
 1184  00001c78  8fc3fff4	lw	r3,-12(r30)
 1185  00001c7c  00400035	movi2fp	f0,r2
 1186  00001c80  00600835	movi2fp	f1,r3
 1187  00001c84  0401000e	mult	f0,f0,f1
 1188  00001c88  00001034	movfp2i	r2,f0
 1189  00001c8c  00220822	sub	r1,r1,r2
 1190  00001c90  afc10000	sw	(r30),r1
 1191  00001c94          	L70_LF2:
 1192  00001c94  8fc1fff4	lw	r1,-12(r30)
 1193  00001c98  6c220001	sgti	r2,r1,#1
 1194  00001c9c  1440000c	bnez	r2,L71_LF2
 1195  00001ca0  54000000	nop; delay slot nop
 1196  00001ca4  0800000c	j	L61_LF2
 1197  00001ca8  54000000	nop; delay slot nop
 1198  00001cac          	L71_LF2:
 1199  00001cac  0bffff64	j	L68_LF2
 1200  00001cb0  54000000	nop; delay slot nop
 1201  00001cb4          	L69_LF2:
 1202  00001cb4          	L63_LF2:
 1203  00001cb4          	L61_LF2:
 1204  00001cb4  8fc10004	lw	r1,4(r30)
 1205  00001cb8  20020000	addi	r2,r0,(#0x0)&0xff
 1206  00001cbc  a0220000	sb	(r1),r2
 1207  00001cc0          	L59_LF2:
 1208  00001cc0  8fa20000	lw	r2,0(r29)
 1209  00001cc4  8fa30004	lw	r3,4(r29)
 1210  00001cc8  8fdffff8	lw	r31,-8(r30)
 1211  00001ccc  001ee820	add	r29,r0,r30
 1212  00001cd0  8fdefffc	lw	r30,-4(r30)
 1213  00001cd4  4be00000	jr	r31
 1214  00001cd8  54000000	nop
 1215  00001cdc          	.endproc _ditoa
 1216  00001cdc          	.align 2
 1217  00001cdc          	.proc _dstrtol
 1218  00001cdc          	.global _dstrtol
 1219  00001cdc          	_dstrtol:
 1220                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1221  00001cdc  afbefffc	sw	-4(r29),r30; push fp
 1222  00001ce0  001df020	add	r30,r0,r29; fp = sp
 1223  00001ce4  afbffff8	sw	-8(r29),r31; push ret addr
 1224  00001ce8  2fbd0020	subui	r29,r29,#32; alloc local storage
 1225  00001cec  afa20000	sw	0(r29),r2
 1226  00001cf0  20010000	addi	r1,r0,#0
 1227  00001cf4  afc1fff4	sw	-12(r30),r1
 1228  00001cf8          	L73_LF2:
 1229  00001cf8  8fc10000	lw	r1,(r30)
 1230  00001cfc  90220000	lbu	r2,(r1)
 1231  00001d00  60410020	seqi	r1,r2,#32
 1232  00001d04  14200034	bnez	r1,L75_LF2
 1233  00001d08  54000000	nop; delay slot nop
 1234  00001d0c  8fc10000	lw	r1,(r30)
 1235  00001d10  90220000	lbu	r2,(r1)
 1236  00001d14  60410009	seqi	r1,r2,#9
 1237  00001d18  14200020	bnez	r1,L75_LF2
 1238  00001d1c  54000000	nop; delay slot nop
 1239  00001d20  8fc10000	lw	r1,(r30)
 1240  00001d24  90220000	lbu	r2,(r1)
 1241  00001d28  6041000a	seqi	r1,r2,#10
 1242  00001d2c  1420000c	bnez	r1,L75_LF2
 1243  00001d30  54000000	nop; delay slot nop
 1244  00001d34  0800001c	j	L74_LF2
 1245  00001d38  54000000	nop; delay slot nop
 1246  00001d3c          	L75_LF2:
 1247  00001d3c  8fc20000	lw	r2,(r30)
 1248  00001d40  20410001	addi	r1,r2,#1
 1249  00001d44  00011020	add	r2,r0,r1
 1250  00001d48  afc20000	sw	(r30),r2
 1251  00001d4c  0bffffa8	j	L73_LF2
 1252  00001d50  54000000	nop; delay slot nop
 1253  00001d54          	L74_LF2:
 1254  00001d54  8fc10004	lw	r1,4(r30)
 1255  00001d58  64220000	snei	r2,r1,#0
 1256  00001d5c  10400010	beqz	r2,L76_LF2
 1257  00001d60  54000000	nop; delay slot nop
 1258  00001d64  8fc10004	lw	r1,4(r30)
 1259  00001d68  8fc20000	lw	r2,(r30)
 1260  00001d6c  ac220000	sw	(r1),r2
 1261  00001d70          	L76_LF2:
 1262  00001d70  8fc10000	lw	r1,(r30)
 1263  00001d74  90220000	lbu	r2,(r1)
 1264  00001d78  64410000	snei	r1,r2,#0
 1265  00001d7c  14200010	bnez	r1,L77_LF2
 1266  00001d80  54000000	nop; delay slot nop
 1267  00001d84  8fc1fff4	lw	r1,-12(r30)
 1268  00001d88  08000294	j	L72_LF2
 1269  00001d8c  54000000	nop; delay slot nop
 1270  00001d90          	L77_LF2:
 1271  00001d90  8fc10000	lw	r1,(r30)
 1272  00001d94  90220000	lbu	r2,(r1)
 1273  00001d98  6041002d	seqi	r1,r2,#45
 1274  00001d9c  10200024	beqz	r1,L78_LF2
 1275  00001da0  54000000	nop; delay slot nop
 1276  00001da4  2001ffff	addi	r1,r0,#-1
 1277  00001da8  afc1ffec	sw	-20(r30),r1
 1278  00001dac  8fc20000	lw	r2,(r30)
 1279  00001db0  20410001	addi	r1,r2,#1
 1280  00001db4  00011020	add	r2,r0,r1
 1281  00001db8  afc20000	sw	(r30),r2
 1282  00001dbc  0800000c	j	L79_LF2
 1283  00001dc0  54000000	nop; delay slot nop
 1284  00001dc4          	L78_LF2:
 1285  00001dc4  20010001	addi	r1,r0,#1
 1286  00001dc8  afc1ffec	sw	-20(r30),r1
 1287  00001dcc          	L79_LF2:
 1288  00001dcc  8fc10008	lw	r1,8(r30)
 1289  00001dd0  64220000	snei	r2,r1,#0
 1290  00001dd4  14400090	bnez	r2,L80_LF2
 1291  00001dd8  54000000	nop; delay slot nop
 1292  00001ddc  8fc10000	lw	r1,(r30)
 1293  00001de0  90220000	lbu	r2,(r1)
 1294  00001de4  60410030	seqi	r1,r2,#48
 1295  00001de8  10200074	beqz	r1,L81_LF2
 1296  00001dec  54000000	nop; delay slot nop
 1297  00001df0  8fc20000	lw	r2,(r30)
 1298  00001df4  20410001	addi	r1,r2,#1
 1299  00001df8  00011020	add	r2,r0,r1
 1300  00001dfc  afc20000	sw	(r30),r2
 1301  00001e00  8fc10000	lw	r1,(r30)
 1302  00001e04  90220000	lbu	r2,(r1)
 1303  00001e08  60410078	seqi	r1,r2,#120
 1304  00001e0c  14200020	bnez	r1,L83_LF2
 1305  00001e10  54000000	nop; delay slot nop
 1306  00001e14  8fc10000	lw	r1,(r30)
 1307  00001e18  90220000	lbu	r2,(r1)
 1308  00001e1c  60410058	seqi	r1,r2,#88
 1309  00001e20  1420000c	bnez	r1,L83_LF2
 1310  00001e24  54000000	nop; delay slot nop
 1311  00001e28  08000024	j	L82_LF2
 1312  00001e2c  54000000	nop; delay slot nop
 1313  00001e30          	L83_LF2:
 1314  00001e30  20010010	addi	r1,r0,#16
 1315  00001e34  afc10008	sw	8(r30),r1
 1316  00001e38  8fc20000	lw	r2,(r30)
 1317  00001e3c  20410001	addi	r1,r2,#1
 1318  00001e40  00011020	add	r2,r0,r1
 1319  00001e44  afc20000	sw	(r30),r2
 1320  00001e48  0800000c	j	L84_LF2
 1321  00001e4c  54000000	nop; delay slot nop
 1322  00001e50          	L82_LF2:
 1323  00001e50  20010008	addi	r1,r0,#8
 1324  00001e54  afc10008	sw	8(r30),r1
 1325  00001e58          	L84_LF2:
 1326  00001e58  0800000c	j	L80_LF2
 1327  00001e5c  54000000	nop; delay slot nop
 1328  00001e60          	L81_LF2:
 1329  00001e60  2001000a	addi	r1,r0,#10
 1330  00001e64  afc10008	sw	8(r30),r1
 1331  00001e68          	L85_LF2:
 1332  00001e68          	L80_LF2:
 1333  00001e68  8fc10008	lw	r1,8(r30)
 1334  00001e6c  70220000	slei	r2,r1,#0
 1335  00001e70  1440001c	bnez	r2,L87_LF2
 1336  00001e74  54000000	nop; delay slot nop
 1337  00001e78  8fc10008	lw	r1,8(r30)
 1338  00001e7c  6c220010	sgti	r2,r1,#16
 1339  00001e80  1440000c	bnez	r2,L87_LF2
 1340  00001e84  54000000	nop; delay slot nop
 1341  00001e88  08000010	j	L86_LF2
 1342  00001e8c  54000000	nop; delay slot nop
 1343  00001e90          	L87_LF2:
 1344  00001e90  8fc1fff4	lw	r1,-12(r30)
 1345  00001e94  08000188	j	L72_LF2
 1346  00001e98  54000000	nop; delay slot nop
 1347  00001e9c          	L86_LF2:
 1348  00001e9c  54000000	nop
 1349  00001ea0          	L88_LF2:
 1350  00001ea0  8fc10000	lw	r1,(r30)
 1351  00001ea4  90220000	lbu	r2,(r1)
 1352  00001ea8  6c41002f	sgtui	r1,r2,#47
 1353  00001eac  10200030	beqz	r1,L91_LF2
 1354  00001eb0  54000000	nop; delay slot nop
 1355  00001eb4  8fc10000	lw	r1,(r30)
 1356  00001eb8  90220000	lbu	r2,(r1)
 1357  00001ebc  70410039	sleui	r1,r2,#57
 1358  00001ec0  1020001c	beqz	r1,L91_LF2
 1359  00001ec4  54000000	nop; delay slot nop
 1360  00001ec8  8fc10000	lw	r1,(r30)
 1361  00001ecc  90220000	lbu	r2,(r1)
 1362  00001ed0  2041ffd0	addi	r1,r2,#-48
 1363  00001ed4  afc1fff0	sw	-16(r30),r1
 1364  00001ed8  0800008c	j	L92_LF2
 1365  00001edc  54000000	nop; delay slot nop
 1366  00001ee0          	L91_LF2:
 1367  00001ee0  8fc10000	lw	r1,(r30)
 1368  00001ee4  90220000	lbu	r2,(r1)
 1369  00001ee8  6c410060	sgtui	r1,r2,#96
 1370  00001eec  10200030	beqz	r1,L93_LF2
 1371  00001ef0  54000000	nop; delay slot nop
 1372  00001ef4  8fc10000	lw	r1,(r30)
 1373  00001ef8  90220000	lbu	r2,(r1)
 1374  00001efc  7041007a	sleui	r1,r2,#122
 1375  00001f00  1020001c	beqz	r1,L93_LF2
 1376  00001f04  54000000	nop; delay slot nop
 1377  00001f08  8fc10000	lw	r1,(r30)
 1378  00001f0c  90220000	lbu	r2,(r1)
 1379  00001f10  2041ffa9	addi	r1,r2,#-87
 1380  00001f14  afc1fff0	sw	-16(r30),r1
 1381  00001f18  0800004c	j	L92_LF2
 1382  00001f1c  54000000	nop; delay slot nop
 1383  00001f20          	L93_LF2:
 1384  00001f20  8fc10000	lw	r1,(r30)
 1385  00001f24  90220000	lbu	r2,(r1)
 1386  00001f28  6c410040	sgtui	r1,r2,#64
 1387  00001f2c  10200030	beqz	r1,L95_LF2
 1388  00001f30  54000000	nop; delay slot nop
 1389  00001f34  8fc10000	lw	r1,(r30)
 1390  00001f38  90220000	lbu	r2,(r1)
 1391  00001f3c  7041005a	sleui	r1,r2,#90
 1392  00001f40  1020001c	beqz	r1,L95_LF2
 1393  00001f44  54000000	nop; delay slot nop
 1394  00001f48  8fc10000	lw	r1,(r30)
 1395  00001f4c  90220000	lbu	r2,(r1)
 1396  00001f50  2041ffc9	addi	r1,r2,#-55
 1397  00001f54  afc1fff0	sw	-16(r30),r1
 1398  00001f58  0800000c	j	L92_LF2
 1399  00001f5c  54000000	nop; delay slot nop
 1400  00001f60          	L95_LF2:
 1401  00001f60  200103e8	addi	r1,r0,#1000
 1402  00001f64  afc1fff0	sw	-16(r30),r1
 1403  00001f68          	L96_LF2:
 1404  00001f68          	L94_LF2:
 1405  00001f68          	L92_LF2:
 1406  00001f68  8fc1fff0	lw	r1,-16(r30)
 1407  00001f6c  8fc20008	lw	r2,8(r30)
 1408  00001f70  0022082a	slt	r1,r1,r2
 1409  00001f74  10200040	beqz	r1,L90_LF2
 1410  00001f78  54000000	nop; delay slot nop
 1411  00001f7c  8fc1fff4	lw	r1,-12(r30)
 1412  00001f80  8fc20008	lw	r2,8(r30)
 1413  00001f84  00200035	movi2fp	f0,r1
 1414  00001f88  00400835	movi2fp	f1,r2
 1415  00001f8c  0401000e	mult	f0,f0,f1
 1416  00001f90  00000834	movfp2i	r1,f0
 1417  00001f94  afc1fff4	sw	-12(r30),r1
 1418  00001f98  8fc1fff4	lw	r1,-12(r30)
 1419  00001f9c  8fc2fff0	lw	r2,-16(r30)
 1420  00001fa0  00220820	add	r1,r1,r2
 1421  00001fa4  afc1fff4	sw	-12(r30),r1
 1422  00001fa8  8fc20000	lw	r2,(r30)
 1423  00001fac  20410001	addi	r1,r2,#1
 1424  00001fb0  00011020	add	r2,r0,r1
 1425  00001fb4  afc20000	sw	(r30),r2
 1426  00001fb8          	L97_LF2:
 1427  00001fb8          	L90_LF2:
 1428  00001fb8  8fc1fff0	lw	r1,-16(r30)
 1429  00001fbc  8fc20008	lw	r2,8(r30)
 1430  00001fc0  0022082a	slt	r1,r1,r2
 1431  00001fc4  1420000c	bnez	r1,L98_LF2
 1432  00001fc8  54000000	nop; delay slot nop
 1433  00001fcc  0800000c	j	L89_LF2
 1434  00001fd0  54000000	nop; delay slot nop
 1435  00001fd4          	L98_LF2:
 1436  00001fd4  0bfffec8	j	L88_LF2
 1437  00001fd8  54000000	nop; delay slot nop
 1438  00001fdc          	L89_LF2:
 1439  00001fdc  8fc10004	lw	r1,4(r30)
 1440  00001fe0  64220000	snei	r2,r1,#0
 1441  00001fe4  10400010	beqz	r2,L99_LF2
 1442  00001fe8  54000000	nop; delay slot nop
 1443  00001fec  8fc10004	lw	r1,4(r30)
 1444  00001ff0  8fc20000	lw	r2,(r30)
 1445  00001ff4  ac220000	sw	(r1),r2
 1446  00001ff8          	L99_LF2:
 1447  00001ff8  8fc1fff4	lw	r1,-12(r30)
 1448  00001ffc  8fc2ffec	lw	r2,-20(r30)
 1449  00002000  00200035	movi2fp	f0,r1
 1450  00002004  00400835	movi2fp	f1,r2
 1451  00002008  0401000e	mult	f0,f0,f1
 1452  0000200c  00000834	movfp2i	r1,f0
 1453  00002010  afc1fff4	sw	-12(r30),r1
 1454  00002014  8fc1fff4	lw	r1,-12(r30)
 1455  00002018  08000004	j	L72_LF2
 1456  0000201c  54000000	nop; delay slot nop
 1457  00002020          	L72_LF2:
 1458  00002020  8fa20000	lw	r2,0(r29)
 1459  00002024  8fdffff8	lw	r31,-8(r30)
 1460  00002028  001ee820	add	r29,r0,r30
 1461  0000202c  8fdefffc	lw	r30,-4(r30)
 1462  00002030  4be00000	jr	r31
 1463  00002034  54000000	nop
 1464  00002038          	.endproc _dstrtol
 1465  00002038          	.align 2
 1466  00002038          	.proc _bcopy
 1467  00002038          	.global _bcopy
 1468  00002038          	_bcopy:
 1469                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1470  00002038  afbefffc	sw	-4(r29),r30; push fp
 1471  0000203c  001df020	add	r30,r0,r29; fp = sp
 1472  00002040  afbffff8	sw	-8(r29),r31; push ret addr
 1473  00002044  2fbd0010	subui	r29,r29,#16; alloc local storage
 1474  00002048  afa20000	sw	0(r29),r2
 1475  0000204c  afa30004	sw	4(r29),r3
 1476  00002050  54000000	nop
 1477  00002054          	L101_LF2:
 1478  00002054  8fc10008	lw	r1,8(r30)
 1479  00002058  2022ffff	addi	r2,r1,#-1
 1480  0000205c  afc20008	sw	8(r30),r2
 1481  00002060  6c210000	sgti	r1,r1,#0
 1482  00002064  1420000c	bnez	r1,L103_LF2
 1483  00002068  54000000	nop; delay slot nop
 1484  0000206c  0800002c	j	L102_LF2
 1485  00002070  54000000	nop; delay slot nop
 1486  00002074          	L103_LF2:
 1487  00002074  8fc10004	lw	r1,4(r30)
 1488  00002078  20220001	addi	r2,r1,#1
 1489  0000207c  afc20004	sw	4(r30),r2
 1490  00002080  8fc20000	lw	r2,(r30)
 1491  00002084  20430001	addi	r3,r2,#1
 1492  00002088  afc30000	sw	(r30),r3
 1493  0000208c  80420000	lb	r2,(r2)
 1494  00002090  a0220000	sb	(r1),r2
 1495  00002094  0bffffbc	j	L101_LF2
 1496  00002098  54000000	nop; delay slot nop
 1497  0000209c          	L102_LF2:
 1498  0000209c          	L100_LF2:
 1499  0000209c  8fa20000	lw	r2,0(r29)
 1500  000020a0  8fa30004	lw	r3,4(r29)
 1501  000020a4  8fdffff8	lw	r31,-8(r30)
 1502  000020a8  001ee820	add	r29,r0,r30
 1503  000020ac  8fdefffc	lw	r30,-4(r30)
 1504  000020b0  4be00000	jr	r31
 1505  000020b4  54000000	nop
 1506  000020b8          	.endproc _bcopy
 1507  000020b8          	.align 2
 1508  000020b8          	.proc _bzero
 1509  000020b8          	.global _bzero
 1510  000020b8          	_bzero:
 1511                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1512  000020b8  afbefffc	sw	-4(r29),r30; push fp
 1513  000020bc  001df020	add	r30,r0,r29; fp = sp
 1514  000020c0  afbffff8	sw	-8(r29),r31; push ret addr
 1515  000020c4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1516  000020c8  afa20000	sw	0(r29),r2
 1517  000020cc  54000000	nop
 1518  000020d0          	L105_LF2:
 1519  000020d0  8fc10004	lw	r1,4(r30)
 1520  000020d4  2022ffff	addi	r2,r1,#-1
 1521  000020d8  afc20004	sw	4(r30),r2
 1522  000020dc  6c210000	sgti	r1,r1,#0
 1523  000020e0  1420000c	bnez	r1,L107_LF2
 1524  000020e4  54000000	nop; delay slot nop
 1525  000020e8  08000020	j	L106_LF2
 1526  000020ec  54000000	nop; delay slot nop
 1527  000020f0          	L107_LF2:
 1528  000020f0  8fc10000	lw	r1,(r30)
 1529  000020f4  20220001	addi	r2,r1,#1
 1530  000020f8  afc20000	sw	(r30),r2
 1531  000020fc  20020000	addi	r2,r0,(#0x0)&0xff
 1532  00002100  a0220000	sb	(r1),r2
 1533  00002104  0bffffc8	j	L105_LF2
 1534  00002108  54000000	nop; delay slot nop
 1535  0000210c          	L106_LF2:
 1536  0000210c          	L104_LF2:
 1537  0000210c  8fa20000	lw	r2,0(r29)
 1538  00002110  8fdffff8	lw	r31,-8(r30)
 1539  00002114  001ee820	add	r29,r0,r30
 1540  00002118  8fdefffc	lw	r30,-4(r30)
 1541  0000211c  4be00000	jr	r31
 1542  00002120  54000000	nop
 1543  00002124          	.endproc _bzero
 1544  00002124          	.align 2
 1545  00002124          	.proc _min
 1546  00002124          	.global _min
 1547  00002124          	_min:
 1548                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1549  00002124  afbefffc	sw	-4(r29),r30; push fp
 1550  00002128  001df020	add	r30,r0,r29; fp = sp
 1551  0000212c  afbffff8	sw	-8(r29),r31; push ret addr
 1552  00002130  2fbd0010	subui	r29,r29,#16; alloc local storage
 1553  00002134  afa20000	sw	0(r29),r2
 1554  00002138  afa30004	sw	4(r29),r3
 1555  0000213c  8fc10000	lw	r1,(r30)
 1556  00002140  8fc20004	lw	r2,4(r30)
 1557  00002144  0022182c	sle	r3,r1,r2
 1558  00002148  14600008	bnez	r3,L109_LF2
 1559  0000214c  54000000	nop; delay slot nop
 1560  00002150  8fc10004	lw	r1,4(r30)
 1561  00002154          	L109_LF2:
 1562  00002154  08000004	j	L108_LF2
 1563  00002158  54000000	nop; delay slot nop
 1564  0000215c          	L108_LF2:
 1565  0000215c  8fa20000	lw	r2,0(r29)
 1566  00002160  8fa30004	lw	r3,4(r29)
 1567  00002164  8fdffff8	lw	r31,-8(r30)
 1568  00002168  001ee820	add	r29,r0,r30
 1569  0000216c  8fdefffc	lw	r30,-4(r30)
 1570  00002170  4be00000	jr	r31
 1571  00002174  54000000	nop
 1572  00002178          	.endproc _min
 1573  00002178          	.align 2
 1574  00002178          	.proc _max
 1575  00002178          	.global _max
 1576  00002178          	_max:
 1577                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1578  00002178  afbefffc	sw	-4(r29),r30; push fp
 1579  0000217c  001df020	add	r30,r0,r29; fp = sp
 1580  00002180  afbffff8	sw	-8(r29),r31; push ret addr
 1581  00002184  2fbd0010	subui	r29,r29,#16; alloc local storage
 1582  00002188  afa20000	sw	0(r29),r2
 1583  0000218c  afa30004	sw	4(r29),r3
 1584  00002190  8fc10000	lw	r1,(r30)
 1585  00002194  8fc20004	lw	r2,4(r30)
 1586  00002198  0022182d	sge	r3,r1,r2
 1587  0000219c  14600008	bnez	r3,L111_LF2
 1588  000021a0  54000000	nop; delay slot nop
 1589  000021a4  8fc10004	lw	r1,4(r30)
 1590  000021a8          	L111_LF2:
 1591  000021a8  08000004	j	L110_LF2
 1592  000021ac  54000000	nop; delay slot nop
 1593  000021b0          	L110_LF2:
 1594  000021b0  8fa20000	lw	r2,0(r29)
 1595  000021b4  8fa30004	lw	r3,4(r29)
 1596  000021b8  8fdffff8	lw	r31,-8(r30)
 1597  000021bc  001ee820	add	r29,r0,r30
 1598  000021c0  8fdefffc	lw	r30,-4(r30)
 1599  000021c4  4be00000	jr	r31
 1600  000021c8  54000000	nop
 1601  000021cc          	.endproc _max
 1602                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1603                      ;;;
 1604                      ;;; Most of the traps are called in files from libtraps.
 1607  000021cc          	.align 2
 1608  000021cc          	.proc _exit
 1609  000021cc          	.global _exit
 1610  000021cc          	_exit:
 1611  000021cc  44000300	trap	#0x300
 1612  000021d0  4be00000	jr	r31
 1613  000021d4  54000000	nop
 1614  000021d8          	.endproc _exit
 1616                      ; for the benefit of gcc.
 1617  000021d8          	.proc ___main
 1618  000021d8          	.global ___main
 1619  000021d8          	___main:
 1620  000021d8  4be00000	jr	r31
 1621  000021dc  54000000	nop
 1622  000021e0          	.endproc ___main
 1623  000021e0          	.text
 1624  000021e0          	.global _etext
 1625  000021e0          	_etext:
 1626  000021e0          	.align 3
 1627  000021e0          	.data
 1628  00003224          	.global _edata
 1629  00003224          	_edata:
