 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 486
    4                      ; Text size: 4900
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: %s <number of hello world processes to create>\n\000"
   82  00003004  653a2025	
   82  00003008  73203c6e	
   82  0000300c  756d6265	
   82  00003010  72206f66	
   82  00003014  2068656c	
   82  00003018  6c6f2077	
   82  0000301c  6f726c64	
   82  00003020  2070726f	
   82  00003024  63657373	
   82  00003028  65732074	
   82  0000302c  6f206372	
   82  00003030  65617465	
   82  00003034  3e0a00  	
   83  00003037          	.align 2
   84  00003038          	LC1_LF0:
   85  00003038  6d616b65	.ascii "makeprocs (%d): Bad sem_create\n\000"
   85  0000303c  70726f63	
   85  00003040  73202825	
   85  00003044  64293a20	
   85  00003048  42616420	
   85  0000304c  73656d5f	
   85  00003050  63726561	
   85  00003054  74650a00	
   86  00003058          	.align 2
   87  00003058          	LC2_LF0:
   88  00003058  43726561	.ascii "Creating test program for 5\n\000"
   88  0000305c  74696e67	
   88  00003060  20746573	
   88  00003064  74207072	
   88  00003068  6f677261	
   88  0000306c  6d20666f	
   88  00003070  7220350a	
   88  00003074  00      	
   89  00003075          	.align 2
   90  00003078          	LC3_LF0:
   91  00003078  6d616b65	.ascii "makeprocs (%d): Creating hello world #%d\n\000"
   91  0000307c  70726f63	
   91  00003080  73202825	
   91  00003084  64293a20	
   91  00003088  43726561	
   91  0000308c  74696e67	
   91  00003090  2068656c	
   91  00003094  6c6f2077	
   91  00003098  6f726c64	
   91  0000309c  20232564	
   91  000030a0  0a00    	
   92  000030a2          	.align 2
   93  000030a4          	LC4_LF0:
   94  000030a4  68656c6c	.ascii "hello_world.dlx.obj\000"
   94  000030a8  6f5f776f	
   94  000030ac  726c642e	
   94  000030b0  646c782e	
   94  000030b4  6f626a00	
   95  000030b8          	.align 2
   96  000030b8          	LC5_LF0:
   97  000030b8  42616420	.ascii "Bad semaphore s_procs_completed (%d) in %s\n\000"
   97  000030bc  73656d61	
   97  000030c0  70686f72	
   97  000030c4  6520735f	
   97  000030c8  70726f63	
   97  000030cc  735f636f	
   97  000030d0  6d706c65	
   97  000030d4  74656420	
   97  000030d8  28256429	
   97  000030dc  20696e20	
   97  000030e0  25730a00	
   98  000030e4          	.align 2
   99  000030e4          	LC6_LF0:
  100  000030e4  43726561	.ascii "Creating test program for 6\n\000"
  100  000030e8  74696e67	
  100  000030ec  20746573	
  100  000030f0  74207072	
  100  000030f4  6f677261	
  100  000030f8  6d20666f	
  100  000030fc  7220360a	
  100  00003100  00      	
  101  00003101          	.align 2
  102  00003104          	LC7_LF0:
  103  00003104  6d616b65	.ascii "makeprocs (%d): Creating counting process #%d\n\000"
  103  00003108  70726f63	
  103  0000310c  73202825	
  103  00003110  64293a20	
  103  00003114  43726561	
  103  00003118  74696e67	
  103  0000311c  20636f75	
  103  00003120  6e74696e	
  103  00003124  67207072	
  103  00003128  6f636573	
  103  0000312c  73202325	
  103  00003130  640a00  	
  104  00003133          	.align 2
  105  00003134          	LC8_LF0:
  106  00003134  636f756e	.ascii "count_large.dlx.obj\000"
  106  00003138  745f6c61	
  106  0000313c  7267652e	
  106  00003140  646c782e	
  106  00003144  6f626a00	
  107  00003148          	.align 2
  108  00003148          	LC9_LF0:
  109  00003148  2d2d2d2d	.ascii "----------------------------------------------------------------------"
  109  0000314c  2d2d2d2d	
  109  00003150  2d2d2d2d	
  109  00003154  2d2d2d2d	
  109  00003158  2d2d2d2d	
  109  0000315c  2d2d2d2d	
  109  00003160  2d2d2d2d	
  109  00003164  2d2d2d2d	
  109  00003168  2d2d2d2d	
  109  0000316c  2d2d2d2d	
  109  00003170  2d2d2d2d	
  109  00003174  2d2d2d2d	
  109  00003178  2d2d2d2d	
  109  0000317c  2d2d2d2d	
  109  00003180  2d2d2d2d	
  109  00003184  2d2d2d2d	
  109  00003188  2d2d2d2d	
  109  0000318c  2d2d    	
  110  0000318e  2d2d2d2d	.ascii "---------------\n\000"
  110  00003192  2d2d2d2d	
  110  00003196  2d2d2d2d	
  110  0000319a  2d2d2d0a	
  110  0000319e  00      	
  111  0000319f          	.align 2
  112  000031a0          	LC10_LF0:
  113  000031a0  6d616b65	.ascii "makeprocs (%d): All other processes completed, exiting main process.\n"
  113  000031a4  70726f63	
  113  000031a8  73202825	
  113  000031ac  64293a20	
  113  000031b0  416c6c20	
  113  000031b4  6f746865	
  113  000031b8  72207072	
  113  000031bc  6f636573	
  113  000031c0  73657320	
  113  000031c4  636f6d70	
  113  000031c8  6c657465	
  113  000031cc  642c2065	
  113  000031d0  78697469	
  113  000031d4  6e67206d	
  113  000031d8  61696e20	
  113  000031dc  70726f63	
  113  000031e0  6573732e	
  113  000031e4  0a      	
  114  000031e5  00      	.ascii "\000"
  115  000031e6          	.text
  116  000010d4          	.align 2
  117  000010d4          	.proc _main
  118  000010d4          	.global _main
  119  000010d4          	_main:
  120                      ;  Function 'main'; 96 bytes of locals, 0 regs to save.
  121  000010d4  afbefffc	sw	-4(r29),r30; push fp
  122  000010d8  001df020	add	r30,r0,r29; fp = sp
  123  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  124  000010e0  2fbd0068	subui	r29,r29,#104; alloc local storage
  125  000010e4  8fc20000	lw	r2,(r30)
  126  000010e8  8fc50004	lw	r5,4(r30)
  127  000010ec  0c00122c	jal	___main
  128  000010f0  54000000	nop; not filled.
  129  000010f4  64410002	snei	r1,r2,#2
  130  000010f8  10200030	beqz	r1,L14_LF0
  131  000010fc  54000000	nop; not filled.
  132  00001100  23bdfff8	addi	r29,r29,#-8
  133  00001104  3c060000	lhi	r6,((LC0_LF0)>>16)&0xffff
  134  00001108  24c63000	addui	r6,r6,(LC0_LF0)&0xffff
  135  0000110c  afa60000	sw	(r29),r6
  136  00001110  8ca10000	lw	r1,(r5)
  137  00001114  afa10004	sw	4(r29),r1
  138  00001118  0c000340	jal	_Printf
  139  0000111c  54000000	nop; not filled.
  140  00001120  0c000440	jal	_Exit
  141  00001124  54000000	nop; not filled.
  142  00001128  23bd0008	addi	r29,r29,#8
  143  0000112c          	L14_LF0:
  144  0000112c  23bdfff0	addi	r29,r29,#-16
  145  00001130  8ca60004	lw	r6,4(r5)
  146  00001134  afa60000	sw	(r29),r6
  147  00001138  20060000	addi	r6,r0,#0
  148  0000113c  afa60004	sw	4(r29),r6
  149  00001140  2006000a	addi	r6,r0,#10
  150  00001144  afa60008	sw	8(r29),r6
  151  00001148  0c000cd4	jal	_dstrtol
  152  0000114c  54000000	nop; not filled.
  153  00001150  20060000	addi	r6,r0,#0
  154  00001154  afa60000	sw	(r29),r6
  155  00001158  0c00033c	jal	_sem_create
  156  0000115c  54000000	nop; not filled.
  157  00001160  00011020	add	r2,r0,r1
  158  00001164  23bd0010	addi	r29,r29,#16
  159  00001168  6041ffff	seqi	r1,r2,#-1
  160  0000116c  10200034	beqz	r1,L15_LF0
  161  00001170  54000000	nop; not filled.
  162  00001174  0c0002f0	jal	_getpid
  163  00001178  54000000	nop; not filled.
  164  0000117c  23bdfff8	addi	r29,r29,#-8
  165  00001180  3c060000	lhi	r6,((LC1_LF0)>>16)&0xffff
  166  00001184  24c63038	addui	r6,r6,(LC1_LF0)&0xffff
  167  00001188  afa60000	sw	(r29),r6
  168  0000118c  afa10004	sw	4(r29),r1
  169  00001190  0c0002c8	jal	_Printf
  170  00001194  54000000	nop; not filled.
  171  00001198  0c0003c8	jal	_Exit
  172  0000119c  54000000	nop; not filled.
  173  000011a0  23bd0008	addi	r29,r29,#8
  174  000011a4          	L15_LF0:
  175  000011a4  23bdfff8	addi	r29,r29,#-8
  176  000011a8  afa20000	sw	(r29),r2
  177  000011ac  23c1ffe8	addi	r1,r30,#-24
  178  000011b0  afa10004	sw	4(r29),r1
  179  000011b4  0c000adc	jal	_ditoa
  180  000011b8  54000000	nop; not filled.
  181  000011bc  3c060000	lhi	r6,((LC2_LF0)>>16)&0xffff
  182  000011c0  24c63058	addui	r6,r6,(LC2_LF0)&0xffff
  183  000011c4  afa60000	sw	(r29),r6
  184  000011c8  0c000290	jal	_Printf
  185  000011cc  54000000	nop; not filled.
  186  000011d0  20060000	addi	r6,r0,#0
  187  000011d4  afa60000	sw	(r29),r6
  188  000011d8  0c0002bc	jal	_sem_create
  189  000011dc  54000000	nop; not filled.
  190  000011e0  00012020	add	r4,r0,r1
  191  000011e4  23bd0008	addi	r29,r29,#8
  192  000011e8  6081ffff	seqi	r1,r4,#-1
  193  000011ec  10200034	beqz	r1,L16_LF0
  194  000011f0  54000000	nop; not filled.
  195  000011f4  0c000270	jal	_getpid
  196  000011f8  54000000	nop; not filled.
  197  000011fc  23bdfff8	addi	r29,r29,#-8
  198  00001200  3c060000	lhi	r6,((LC1_LF0)>>16)&0xffff
  199  00001204  24c63038	addui	r6,r6,(LC1_LF0)&0xffff
  200  00001208  afa60000	sw	(r29),r6
  201  0000120c  afa10004	sw	4(r29),r1
  202  00001210  0c000248	jal	_Printf
  203  00001214  54000000	nop; not filled.
  204  00001218  0c000348	jal	_Exit
  205  0000121c  54000000	nop; not filled.
  206  00001220  23bd0008	addi	r29,r29,#8
  207  00001224          	L16_LF0:
  208  00001224  23bdfff8	addi	r29,r29,#-8
  209  00001228  afa40000	sw	(r29),r4
  210  0000122c  23c2ffa8	addi	r2,r30,#-88
  211  00001230  afa20004	sw	4(r29),r2
  212  00001234  0c000a5c	jal	_ditoa
  213  00001238  54000000	nop; not filled.
  214  0000123c  20030000	addi	r3,r0,#0
  215  00001240  23bd0008	addi	r29,r29,#8
  216  00001244          	L20_LF0:
  217  00001244  0c000220	jal	_getpid
  218  00001248  54000000	nop; not filled.
  219  0000124c  23bdfff0	addi	r29,r29,#-16
  220  00001250  3c060000	lhi	r6,((LC3_LF0)>>16)&0xffff
  221  00001254  24c63078	addui	r6,r6,(LC3_LF0)&0xffff
  222  00001258  afa60000	sw	(r29),r6
  223  0000125c  afa10004	sw	4(r29),r1
  224  00001260  afa30008	sw	8(r29),r3
  225  00001264  0c0001f4	jal	_Printf
  226  00001268  54000000	nop; not filled.
  227  0000126c  3c060000	lhi	r6,((LC4_LF0)>>16)&0xffff
  228  00001270  24c630a4	addui	r6,r6,(LC4_LF0)&0xffff
  229  00001274  afa60000	sw	(r29),r6
  230  00001278  afa20004	sw	4(r29),r2
  231  0000127c  20060000	addi	r6,r0,#0
  232  00001280  afa60008	sw	8(r29),r6
  233  00001284  0c0001ec	jal	_process_create
  234  00001288  54000000	nop; not filled.
  235  0000128c  afa40000	sw	(r29),r4
  236  00001290  0c000210	jal	_sem_wait
  237  00001294  54000000	nop; not filled.
  238  00001298  23bd0010	addi	r29,r29,#16
  239  0000129c  64210001	snei	r1,r1,#1
  240  000012a0  10200034	beqz	r1,L19_LF0
  241  000012a4  54000000	nop; not filled.
  242  000012a8  23bdfff0	addi	r29,r29,#-16
  243  000012ac  3c060000	lhi	r6,((LC5_LF0)>>16)&0xffff
  244  000012b0  24c630b8	addui	r6,r6,(LC5_LF0)&0xffff
  245  000012b4  afa60000	sw	(r29),r6
  246  000012b8  afa40004	sw	4(r29),r4
  247  000012bc  8ca60000	lw	r6,(r5)
  248  000012c0  afa60008	sw	8(r29),r6
  249  000012c4  0c000194	jal	_Printf
  250  000012c8  54000000	nop; not filled.
  251  000012cc  0c000294	jal	_Exit
  252  000012d0  54000000	nop; not filled.
  253  000012d4  23bd0010	addi	r29,r29,#16
  254  000012d8          	L19_LF0:
  255  000012d8  20630001	addi	r3,r3,#1
  256  000012dc  70610063	slei	r1,r3,#99
  257  000012e0  1420ff60	bnez	r1,L20_LF0
  258  000012e4  54000000	nop; not filled.
  259  000012e8  23bdfff8	addi	r29,r29,#-8
  260  000012ec  3c060000	lhi	r6,((LC6_LF0)>>16)&0xffff
  261  000012f0  24c630e4	addui	r6,r6,(LC6_LF0)&0xffff
  262  000012f4  afa60000	sw	(r29),r6
  263  000012f8  0c000160	jal	_Printf
  264  000012fc  54000000	nop; not filled.
  265  00001300  20060000	addi	r6,r0,#0
  266  00001304  afa60000	sw	(r29),r6
  267  00001308  0c00018c	jal	_sem_create
  268  0000130c  54000000	nop; not filled.
  269  00001310  00011020	add	r2,r0,r1
  270  00001314  23bd0008	addi	r29,r29,#8
  271  00001318  6041ffff	seqi	r1,r2,#-1
  272  0000131c  10200034	beqz	r1,L23_LF0
  273  00001320  54000000	nop; not filled.
  274  00001324  0c000140	jal	_getpid
  275  00001328  54000000	nop; not filled.
  276  0000132c  23bdfff8	addi	r29,r29,#-8
  277  00001330  3c060000	lhi	r6,((LC1_LF0)>>16)&0xffff
  278  00001334  24c63038	addui	r6,r6,(LC1_LF0)&0xffff
  279  00001338  afa60000	sw	(r29),r6
  280  0000133c  afa10004	sw	4(r29),r1
  281  00001340  0c000118	jal	_Printf
  282  00001344  54000000	nop; not filled.
  283  00001348  0c000218	jal	_Exit
  284  0000134c  54000000	nop; not filled.
  285  00001350  23bd0008	addi	r29,r29,#8
  286  00001354          	L23_LF0:
  287  00001354  23bdfff8	addi	r29,r29,#-8
  288  00001358  afa20000	sw	(r29),r2
  289  0000135c  23c2ff98	addi	r2,r30,#-104
  290  00001360  afa20004	sw	4(r29),r2
  291  00001364  0c00092c	jal	_ditoa
  292  00001368  54000000	nop; not filled.
  293  0000136c  20030000	addi	r3,r0,#0
  294  00001370  23bd0008	addi	r29,r29,#8
  295  00001374          	L27_LF0:
  296  00001374  0c0000f0	jal	_getpid
  297  00001378  54000000	nop; not filled.
  298  0000137c  23bdfff0	addi	r29,r29,#-16
  299  00001380  3c060000	lhi	r6,((LC7_LF0)>>16)&0xffff
  300  00001384  24c63104	addui	r6,r6,(LC7_LF0)&0xffff
  301  00001388  afa60000	sw	(r29),r6
  302  0000138c  afa10004	sw	4(r29),r1
  303  00001390  afa30008	sw	8(r29),r3
  304  00001394  0c0000c4	jal	_Printf
  305  00001398  54000000	nop; not filled.
  306  0000139c  3c060000	lhi	r6,((LC8_LF0)>>16)&0xffff
  307  000013a0  24c63134	addui	r6,r6,(LC8_LF0)&0xffff
  308  000013a4  afa60000	sw	(r29),r6
  309  000013a8  afa20004	sw	4(r29),r2
  310  000013ac  20060000	addi	r6,r0,#0
  311  000013b0  afa60008	sw	8(r29),r6
  312  000013b4  0c0000bc	jal	_process_create
  313  000013b8  54000000	nop; not filled.
  314  000013bc  23bd0010	addi	r29,r29,#16
  315  000013c0  20630001	addi	r3,r3,#1
  316  000013c4  7061001d	slei	r1,r3,#29
  317  000013c8  1420ffa8	bnez	r1,L27_LF0
  318  000013cc  54000000	nop; not filled.
  319  000013d0  23bdfff8	addi	r29,r29,#-8
  320  000013d4  3c060000	lhi	r6,((LC9_LF0)>>16)&0xffff
  321  000013d8  24c63148	addui	r6,r6,(LC9_LF0)&0xffff
  322  000013dc  afa60000	sw	(r29),r6
  323  000013e0  0c000078	jal	_Printf
  324  000013e4  54000000	nop; not filled.
  325  000013e8  0c00007c	jal	_getpid
  326  000013ec  54000000	nop; not filled.
  327  000013f0  3c060000	lhi	r6,((LC10_LF0)>>16)&0xffff
  328  000013f4  24c631a0	addui	r6,r6,(LC10_LF0)&0xffff
  329  000013f8  afa60000	sw	(r29),r6
  330  000013fc  afa10004	sw	4(r29),r1
  331  00001400  0c000058	jal	_Printf
  332  00001404  54000000	nop; not filled.
  333  00001408  23bd0008	addi	r29,r29,#8
  334  0000140c  0c000f00	jal	_exit
  335  00001410  54000000	nop
  336  00001414          	.endproc _main
  337                      ;;;
  338                      ;;; Stub functions for DLX traps.
  339                      ;;;
  340                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  341                      ;;;
  342                      ;;; The traps such as Open and Close
  343                      ;;; (note the capital letters) are for use by user programs.  The traps
  344                      ;;; with names such as open and close (lower case) are for use by the OS.
  345                      ;;;
  348  00001414          	.align 2
  350                      ;;; The following are the traps to be used by user-level programs
  351                      ;;;
  353  00001414          	.align 2
  354  00001414          	.proc _Open
  355  00001414          	.global _Open
  356  00001414          	_Open:
  357                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  358                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  359                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  360  00001414  44000213	trap	#0x213
  361  00001418  4be00000	jr	r31
  362  0000141c  54000000	nop
  363  00001420          	.endproc _Open
  365  00001420          	.proc _Close
  366  00001420          	.global _Close
  367  00001420          	_Close:
  368  00001420  44000214	trap	#0x214
  369  00001424  4be00000	jr	r31
  370  00001428  54000000	nop
  371  0000142c          	.endproc _Close
  373  0000142c          	.proc _Read
  374  0000142c          	.global _Read
  375  0000142c          	_Read:
  376  0000142c  44000210	trap	#0x210
  377  00001430  4be00000	jr	r31
  378  00001434  54000000	nop
  379  00001438          	.endproc _Read
  381  00001438          	.proc _Write
  382  00001438          	.global _Write
  383  00001438          	_Write:
  384  00001438  44000211	trap	#0x211
  385  0000143c  4be00000	jr	r31
  386  00001440  54000000	nop
  387  00001444          	.endproc _Write
  389  00001444          	.proc _Lseek
  390  00001444          	.global _Lseek
  391  00001444          	_Lseek:
  392  00001444  44000212	trap	#0x212
  393  00001448  4be00000	jr	r31
  394  0000144c  54000000	nop
  395  00001450          	.endproc _Lseek
  397  00001450          	.proc _Putchar
  398  00001450          	.global _Putchar
  399  00001450          	_Putchar:
  400  00001450  44000280	trap	#0x280
  401  00001454  4be00000	jr	r31
  402  00001458  54000000	nop
  403  0000145c          	.endproc _Putchar
  405  0000145c          	.proc _Printf
  406  0000145c          	.global _Printf
  407  0000145c          	_Printf:
  408  0000145c  44000201	trap	#0x201
  409  00001460  4be00000	jr	r31
  410  00001464  54000000	nop
  411  00001468          	.endproc _Printf
  413  00001468          	.proc _getpid
  414  00001468          	.global _getpid
  415  00001468          	_getpid:
  416  00001468  44000431	trap	#0x431
  417  0000146c  4be00000	jr	r31
  418  00001470  54000000	nop
  419  00001474          	.endproc _getpid
  421  00001474          	.proc _process_create
  422  00001474          	.global _process_create
  423  00001474          	_process_create:
  424  00001474  44000432	trap	#0x432
  425  00001478  4be00000	jr	r31
  426  0000147c  54000000	nop
  427  00001480          	.endproc _process_create
  429  00001480          	.proc _shmget
  430  00001480          	.global _shmget
  431  00001480          	_shmget:
  432  00001480  44000440	trap	#0x440
  433  00001484  4be00000	jr	r31
  434  00001488  54000000	nop
  435  0000148c          	.endproc _shmget
  437  0000148c          	.proc _shmat
  438  0000148c          	.global _shmat
  439  0000148c          	_shmat:
  440  0000148c  44000441	trap	#0x441
  441  00001490  4be00000	jr	r31
  442  00001494  54000000	nop
  443  00001498          	.endproc _shmat
  445  00001498          	.proc _sem_create
  446  00001498          	.global _sem_create
  447  00001498          	_sem_create:
  448  00001498  44000450	trap	#0x450
  449  0000149c  4be00000	jr	r31
  450  000014a0  54000000	nop
  451  000014a4          	.endproc _sem_create
  453  000014a4          	.proc _sem_wait
  454  000014a4          	.global _sem_wait
  455  000014a4          	_sem_wait:
  456  000014a4  44000451	trap	#0x451
  457  000014a8  4be00000	jr	r31
  458  000014ac  54000000	nop
  459  000014b0          	.endproc _sem_wait
  461  000014b0          	.proc _sem_signal
  462  000014b0          	.global _sem_signal
  463  000014b0          	_sem_signal:
  464  000014b0  44000452	trap	#0x452
  465  000014b4  4be00000	jr	r31
  466  000014b8  54000000	nop
  467  000014bc          	.endproc _sem_signal
  469  000014bc          	.proc _lock_create
  470  000014bc          	.global _lock_create
  471  000014bc          	_lock_create:
  472  000014bc  44000453	trap	#0x453
  473  000014c0  4be00000	jr	r31
  474  000014c4  54000000	nop
  475  000014c8          	.endproc _lock_create
  477  000014c8          	.proc _lock_acquire
  478  000014c8          	.global _lock_acquire
  479  000014c8          	_lock_acquire:
  480  000014c8  44000454	trap	#0x454
  481  000014cc  4be00000	jr	r31
  482  000014d0  54000000	nop
  483  000014d4          	.endproc _lock_acquire
  485  000014d4          	.proc _lock_release
  486  000014d4          	.global _lock_release
  487  000014d4          	_lock_release:
  488  000014d4  44000455	trap	#0x455
  489  000014d8  4be00000	jr	r31
  490  000014dc  54000000	nop
  491  000014e0          	.endproc _lock_release
  493  000014e0          	.proc _cond_create
  494  000014e0          	.global _cond_create
  495  000014e0          	_cond_create:
  496  000014e0  44000456	trap	#0x456
  497  000014e4  4be00000	jr	r31
  498  000014e8  54000000	nop
  499  000014ec          	.endproc _cond_create
  501  000014ec          	.proc _cond_wait
  502  000014ec          	.global _cond_wait
  503  000014ec          	_cond_wait:
  504  000014ec  44000457	trap	#0x457
  505  000014f0  4be00000	jr	r31
  506  000014f4  54000000	nop
  507  000014f8          	.endproc _cond_wait
  509  000014f8          	.proc _cond_signal
  510  000014f8          	.global _cond_signal
  511  000014f8          	_cond_signal:
  512  000014f8  44000458	trap	#0x458
  513  000014fc  4be00000	jr	r31
  514  00001500  54000000	nop
  515  00001504          	.endproc _cond_signal
  517  00001504          	.proc _cond_broadcast
  518  00001504          	.global _cond_broadcast
  519  00001504          	_cond_broadcast:
  520  00001504  44000459	trap	#0x459
  521  00001508  4be00000	jr	r31
  522  0000150c  54000000	nop
  523  00001510          	.endproc _cond_broadcast
  525  00001510          	.proc _mbox_create
  526  00001510          	.global _mbox_create
  527  00001510          	_mbox_create:
  528  00001510  44000460	trap	#0x460
  529  00001514  4be00000	jr	r31
  530  00001518  54000000	nop
  531  0000151c          	.endproc _mbox_create
  533  0000151c          	.proc _mbox_open
  534  0000151c          	.global _mbox_open
  535  0000151c          	_mbox_open:
  536  0000151c  44000461	trap	#0x461
  537  00001520  4be00000	jr	r31
  538  00001524  54000000	nop
  539  00001528          	.endproc _mbox_open
  541  00001528          	.proc _mbox_close
  542  00001528          	.global _mbox_close
  543  00001528          	_mbox_close:
  544  00001528  44000462	trap	#0x462
  545  0000152c  4be00000	jr	r31
  546  00001530  54000000	nop
  547  00001534          	.endproc _mbox_close
  549  00001534          	.proc _mbox_send
  550  00001534          	.global _mbox_send
  551  00001534          	_mbox_send:
  552  00001534  44000463	trap	#0x463
  553  00001538  4be00000	jr	r31
  554  0000153c  54000000	nop
  555  00001540          	.endproc _mbox_send
  557  00001540          	.proc _mbox_recv
  558  00001540          	.global _mbox_recv
  559  00001540          	_mbox_recv:
  560  00001540  44000464	trap	#0x464
  561  00001544  4be00000	jr	r31
  562  00001548  54000000	nop
  563  0000154c          	.endproc _mbox_recv
  565  0000154c          	.proc _sleep
  566  0000154c          	.global _sleep
  567  0000154c          	_sleep:
  568  0000154c  44000465	trap	#0x465
  569  00001550  4be00000	jr	r31
  570  00001554  54000000	nop
  571  00001558          	.endproc _sleep
  573  00001558          	.proc _yield
  574  00001558          	.global _yield
  575  00001558          	_yield:
  576  00001558  44000466	trap	#0x466
  577  0000155c  4be00000	jr	r31
  578  00001560  54000000	nop
  579  00001564          	.endproc _yield
  582  00001564          	.proc _Exit
  583  00001564          	.global _Exit
  584  00001564          	_Exit:
  585  00001564  44000500	trap	#0x500
  586  00001568  4be00000	jr	r31
  587  0000156c  54000000	nop
  588  00001570          	.endproc _Exit
  591  00001570          	.proc _malloc
  592  00001570          	.global _malloc
  593  00001570          	_malloc:
  594  00001570  44000467	trap	#0x467
  595  00001574  4be00000	jr	r31
  596  00001578          	.endproc _malloc
  599  00001578          	.proc _mfree
  600  00001578          	.global _mfree
  601  00001578          	_mfree:
  602  00001578  44000468	trap	#0x468
  603  0000157c  4be00000	jr	r31
  604  00001580          	.endproc _mfree
  605                      ; Compiled by GCC
  607  00001580          	.align 2
  608  00001580          	.proc _isspace
  609  00001580          	.global _isspace
  610  00001580          	_isspace:
  611                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  612  00001580  afbefffc	sw	-4(r29),r30; push fp
  613  00001584  001df020	add	r30,r0,r29; fp = sp
  614  00001588  afbffff8	sw	-8(r29),r31; push ret addr
  615  0000158c  2fbd0018	subui	r29,r29,#24; alloc local storage
  616  00001590  afa20000	sw	0(r29),r2
  617  00001594  afa30004	sw	4(r29),r3
  618  00001598  afa40008	sw	8(r29),r4
  619  0000159c  83c20003	lb	r2,3(r30)
  620  000015a0  20010000	addi	r1,r0,#0
  621  000015a4  304300ff	andi	r3,r2,#0x00ff
  622  000015a8  60640020	seqi	r4,r3,#32
  623  000015ac  1480002c	bnez	r4,L3_LF2
  624  000015b0  54000000	nop; delay slot nop
  625  000015b4  304300ff	andi	r3,r2,#0x00ff
  626  000015b8  60640009	seqi	r4,r3,#9
  627  000015bc  1480001c	bnez	r4,L3_LF2
  628  000015c0  54000000	nop; delay slot nop
  629  000015c4  304300ff	andi	r3,r2,#0x00ff
  630  000015c8  6064000a	seqi	r4,r3,#10
  631  000015cc  1480000c	bnez	r4,L3_LF2
  632  000015d0  54000000	nop; delay slot nop
  633  000015d4  08000008	j	L2_LF2
  634  000015d8  54000000	nop; delay slot nop
  635  000015dc          	L3_LF2:
  636  000015dc  20010001	addi	r1,r0,#1
  637  000015e0          	L2_LF2:
  638  000015e0  08000004	j	L1_LF2
  639  000015e4  54000000	nop; delay slot nop
  640  000015e8          	L1_LF2:
  641  000015e8  8fa20000	lw	r2,0(r29)
  642  000015ec  8fa30004	lw	r3,4(r29)
  643  000015f0  8fa40008	lw	r4,8(r29)
  644  000015f4  8fdffff8	lw	r31,-8(r30)
  645  000015f8  001ee820	add	r29,r0,r30
  646  000015fc  8fdefffc	lw	r30,-4(r30)
  647  00001600  4be00000	jr	r31
  648  00001604  54000000	nop
  649  00001608          	.endproc _isspace
  650  00001608          	.align 2
  651  00001608          	.proc _isxdigit
  652  00001608          	.global _isxdigit
  653  00001608          	_isxdigit:
  654                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  655  00001608  afbefffc	sw	-4(r29),r30; push fp
  656  0000160c  001df020	add	r30,r0,r29; fp = sp
  657  00001610  afbffff8	sw	-8(r29),r31; push ret addr
  658  00001614  2fbd0018	subui	r29,r29,#24; alloc local storage
  659  00001618  afa20000	sw	0(r29),r2
  660  0000161c  afa30004	sw	4(r29),r3
  661  00001620  afa40008	sw	8(r29),r4
  662  00001624  83c20003	lb	r2,3(r30)
  663  00001628  20010000	addi	r1,r0,#0
  664  0000162c  304300ff	andi	r3,r2,#0x00ff
  665  00001630  6c64002f	sgtui	r4,r3,#47
  666  00001634  1080001c	beqz	r4,L7_LF2
  667  00001638  54000000	nop; delay slot nop
  668  0000163c  304300ff	andi	r3,r2,#0x00ff
  669  00001640  70640039	sleui	r4,r3,#57
  670  00001644  1480005c	bnez	r4,L6_LF2
  671  00001648  54000000	nop; delay slot nop
  672  0000164c  08000004	j	L7_LF2
  673  00001650  54000000	nop; delay slot nop
  674  00001654          	L7_LF2:
  675  00001654  304300ff	andi	r3,r2,#0x00ff
  676  00001658  6c640060	sgtui	r4,r3,#96
  677  0000165c  1080001c	beqz	r4,L8_LF2
  678  00001660  54000000	nop; delay slot nop
  679  00001664  304300ff	andi	r3,r2,#0x00ff
  680  00001668  70640066	sleui	r4,r3,#102
  681  0000166c  14800034	bnez	r4,L6_LF2
  682  00001670  54000000	nop; delay slot nop
  683  00001674  08000004	j	L8_LF2
  684  00001678  54000000	nop; delay slot nop
  685  0000167c          	L8_LF2:
  686  0000167c  304300ff	andi	r3,r2,#0x00ff
  687  00001680  6c640040	sgtui	r4,r3,#64
  688  00001684  10800020	beqz	r4,L5_LF2
  689  00001688  54000000	nop; delay slot nop
  690  0000168c  304300ff	andi	r3,r2,#0x00ff
  691  00001690  70640041	sleui	r4,r3,#65
  692  00001694  1480000c	bnez	r4,L6_LF2
  693  00001698  54000000	nop; delay slot nop
  694  0000169c  08000008	j	L5_LF2
  695  000016a0  54000000	nop; delay slot nop
  696  000016a4          	L6_LF2:
  697  000016a4  20010001	addi	r1,r0,#1
  698  000016a8          	L5_LF2:
  699  000016a8  08000004	j	L4_LF2
  700  000016ac  54000000	nop; delay slot nop
  701  000016b0          	L4_LF2:
  702  000016b0  8fa20000	lw	r2,0(r29)
  703  000016b4  8fa30004	lw	r3,4(r29)
  704  000016b8  8fa40008	lw	r4,8(r29)
  705  000016bc  8fdffff8	lw	r31,-8(r30)
  706  000016c0  001ee820	add	r29,r0,r30
  707  000016c4  8fdefffc	lw	r30,-4(r30)
  708  000016c8  4be00000	jr	r31
  709  000016cc  54000000	nop
  710  000016d0          	.endproc _isxdigit
  711  000016d0          	.align 2
  712  000016d0          	.proc _dstrcpy
  713  000016d0          	.global _dstrcpy
  714  000016d0          	_dstrcpy:
  715                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  716  000016d0  afbefffc	sw	-4(r29),r30; push fp
  717  000016d4  001df020	add	r30,r0,r29; fp = sp
  718  000016d8  afbffff8	sw	-8(r29),r31; push ret addr
  719  000016dc  2fbd0018	subui	r29,r29,#24; alloc local storage
  720  000016e0  afa20000	sw	0(r29),r2
  721  000016e4  afa30004	sw	4(r29),r3
  722  000016e8  8fc10000	lw	r1,(r30)
  723  000016ec  afc1fff4	sw	-12(r30),r1
  724  000016f0          	L10_LF2:
  725  000016f0  8fc10000	lw	r1,(r30)
  726  000016f4  20220001	addi	r2,r1,#1
  727  000016f8  afc20000	sw	(r30),r2
  728  000016fc  8fc20004	lw	r2,4(r30)
  729  00001700  20430001	addi	r3,r2,#1
  730  00001704  afc30004	sw	4(r30),r3
  731  00001708  80420000	lb	r2,(r2)
  732  0000170c  a0220000	sb	(r1),r2
  733  00001710  a3c2fff3	sb	-13(r30),r2
  734  00001714          	L12_LF2:
  735  00001714  93c1fff3	lbu	r1,-13(r30)
  736  00001718  64220000	snei	r2,r1,#0
  737  0000171c  1440000c	bnez	r2,L13_LF2
  738  00001720  54000000	nop; delay slot nop
  739  00001724  0800000c	j	L11_LF2
  740  00001728  54000000	nop; delay slot nop
  741  0000172c          	L13_LF2:
  742  0000172c  0bffffc0	j	L10_LF2
  743  00001730  54000000	nop; delay slot nop
  744  00001734          	L11_LF2:
  745  00001734  8fc1fff4	lw	r1,-12(r30)
  746  00001738  08000004	j	L9_LF2
  747  0000173c  54000000	nop; delay slot nop
  748  00001740          	L9_LF2:
  749  00001740  8fa20000	lw	r2,0(r29)
  750  00001744  8fa30004	lw	r3,4(r29)
  751  00001748  8fdffff8	lw	r31,-8(r30)
  752  0000174c  001ee820	add	r29,r0,r30
  753  00001750  8fdefffc	lw	r30,-4(r30)
  754  00001754  4be00000	jr	r31
  755  00001758  54000000	nop
  756  0000175c          	.endproc _dstrcpy
  757  0000175c          	.align 2
  758  0000175c          	.proc _dstrncpy
  759  0000175c          	.global _dstrncpy
  760  0000175c          	_dstrncpy:
  761                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  762  0000175c  afbefffc	sw	-4(r29),r30; push fp
  763  00001760  001df020	add	r30,r0,r29; fp = sp
  764  00001764  afbffff8	sw	-8(r29),r31; push ret addr
  765  00001768  2fbd0018	subui	r29,r29,#24; alloc local storage
  766  0000176c  afa20000	sw	0(r29),r2
  767  00001770  afa30004	sw	4(r29),r3
  768  00001774  8fc10000	lw	r1,(r30)
  769  00001778  afc1fff4	sw	-12(r30),r1
  770  0000177c          	L15_LF2:
  771  0000177c  8fc10008	lw	r1,8(r30)
  772  00001780  2022ffff	addi	r2,r1,#-1
  773  00001784  afc20008	sw	8(r30),r2
  774  00001788  70210000	slei	r1,r1,#0
  775  0000178c  1020000c	beqz	r1,L18_LF2
  776  00001790  54000000	nop; delay slot nop
  777  00001794  08000048	j	L16_LF2
  778  00001798  54000000	nop; delay slot nop
  779  0000179c          	L18_LF2:
  780  0000179c  8fc10000	lw	r1,(r30)
  781  000017a0  20220001	addi	r2,r1,#1
  782  000017a4  afc20000	sw	(r30),r2
  783  000017a8  8fc20004	lw	r2,4(r30)
  784  000017ac  20430001	addi	r3,r2,#1
  785  000017b0  afc30004	sw	4(r30),r3
  786  000017b4  80420000	lb	r2,(r2)
  787  000017b8  a0220000	sb	(r1),r2
  788  000017bc  a3c2fff3	sb	-13(r30),r2
  789  000017c0          	L17_LF2:
  790  000017c0  93c1fff3	lbu	r1,-13(r30)
  791  000017c4  64220000	snei	r2,r1,#0
  792  000017c8  1440000c	bnez	r2,L19_LF2
  793  000017cc  54000000	nop; delay slot nop
  794  000017d0  0800000c	j	L16_LF2
  795  000017d4  54000000	nop; delay slot nop
  796  000017d8          	L19_LF2:
  797  000017d8  0bffffa0	j	L15_LF2
  798  000017dc  54000000	nop; delay slot nop
  799  000017e0          	L16_LF2:
  800  000017e0  8fc1fff4	lw	r1,-12(r30)
  801  000017e4  08000004	j	L14_LF2
  802  000017e8  54000000	nop; delay slot nop
  803  000017ec          	L14_LF2:
  804  000017ec  8fa20000	lw	r2,0(r29)
  805  000017f0  8fa30004	lw	r3,4(r29)
  806  000017f4  8fdffff8	lw	r31,-8(r30)
  807  000017f8  001ee820	add	r29,r0,r30
  808  000017fc  8fdefffc	lw	r30,-4(r30)
  809  00001800  4be00000	jr	r31
  810  00001804  54000000	nop
  811  00001808          	.endproc _dstrncpy
  812  00001808          	.align 2
  813  00001808          	.proc _dstrcat
  814  00001808          	.global _dstrcat
  815  00001808          	_dstrcat:
  816                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  817  00001808  afbefffc	sw	-4(r29),r30; push fp
  818  0000180c  001df020	add	r30,r0,r29; fp = sp
  819  00001810  afbffff8	sw	-8(r29),r31; push ret addr
  820  00001814  2fbd0018	subui	r29,r29,#24; alloc local storage
  821  00001818  afa20000	sw	0(r29),r2
  822  0000181c  8fc10000	lw	r1,(r30)
  823  00001820  afc1fff4	sw	-12(r30),r1
  824  00001824          	L21_LF2:
  825  00001824  8fc10000	lw	r1,(r30)
  826  00001828  90220000	lbu	r2,(r1)
  827  0000182c  64410000	snei	r1,r2,#0
  828  00001830  1420000c	bnez	r1,L23_LF2
  829  00001834  54000000	nop; delay slot nop
  830  00001838  0800001c	j	L22_LF2
  831  0000183c  54000000	nop; delay slot nop
  832  00001840          	L23_LF2:
  833  00001840  8fc20000	lw	r2,(r30)
  834  00001844  20410001	addi	r1,r2,#1
  835  00001848  00011020	add	r2,r0,r1
  836  0000184c  afc20000	sw	(r30),r2
  837  00001850  0bffffd0	j	L21_LF2
  838  00001854  54000000	nop; delay slot nop
  839  00001858          	L22_LF2:
  840  00001858  23bdfff8	addi	r29,r29,#-8
  841  0000185c  001d0820	add	r1,r0,r29
  842  00001860  8fc20000	lw	r2,(r30)
  843  00001864  ac220000	sw	(r1),r2
  844  00001868  8fc20004	lw	r2,4(r30)
  845  0000186c  ac220004	sw	4(r1),r2
  846  00001870  0ffffe5c	jal	_dstrcpy
  847  00001874  54000000	nop; delay slot nop
  848  00001878  23bd0008	addi	r29,r29,#8
  849  0000187c  8fc1fff4	lw	r1,-12(r30)
  850  00001880  08000004	j	L20_LF2
  851  00001884  54000000	nop; delay slot nop
  852  00001888          	L20_LF2:
  853  00001888  8fa20000	lw	r2,0(r29)
  854  0000188c  8fdffff8	lw	r31,-8(r30)
  855  00001890  001ee820	add	r29,r0,r30
  856  00001894  8fdefffc	lw	r30,-4(r30)
  857  00001898  4be00000	jr	r31
  858  0000189c  54000000	nop
  859  000018a0          	.endproc _dstrcat
  860  000018a0          	.align 2
  861  000018a0          	.proc _dstrncmp
  862  000018a0          	.global _dstrncmp
  863  000018a0          	_dstrncmp:
  864                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  865  000018a0  afbefffc	sw	-4(r29),r30; push fp
  866  000018a4  001df020	add	r30,r0,r29; fp = sp
  867  000018a8  afbffff8	sw	-8(r29),r31; push ret addr
  868  000018ac  2fbd0018	subui	r29,r29,#24; alloc local storage
  869  000018b0  afa20000	sw	0(r29),r2
  870  000018b4  afa30004	sw	4(r29),r3
  871  000018b8  54000000	nop
  872  000018bc  20010000	addi	r1,r0,#0
  873  000018c0  afc1fff4	sw	-12(r30),r1
  874  000018c4          	L25_LF2:
  875  000018c4  8fc1fff4	lw	r1,-12(r30)
  876  000018c8  8fc20008	lw	r2,8(r30)
  877  000018cc  0022082a	slt	r1,r1,r2
  878  000018d0  1420000c	bnez	r1,L28_LF2
  879  000018d4  54000000	nop; delay slot nop
  880  000018d8  08000088	j	L26_LF2
  881  000018dc  54000000	nop; delay slot nop
  882  000018e0          	L28_LF2:
  883  000018e0  8fc10004	lw	r1,4(r30)
  884  000018e4  90220000	lbu	r2,(r1)
  885  000018e8  64410000	snei	r1,r2,#0
  886  000018ec  14200018	bnez	r1,L29_LF2
  887  000018f0  54000000	nop; delay slot nop
  888  000018f4  20010000	addi	r1,r0,#0
  889  000018f8  080000d8	j	L24_LF2
  890  000018fc  54000000	nop; delay slot nop
  891  00001900  08000028	j	L30_LF2
  892  00001904  54000000	nop; delay slot nop
  893  00001908          	L29_LF2:
  894  00001908  8fc10000	lw	r1,(r30)
  895  0000190c  8fc20004	lw	r2,4(r30)
  896  00001910  90210000	lbu	r1,(r1)
  897  00001914  90420000	lbu	r2,(r2)
  898  00001918  00220829	sne	r1,r1,r2
  899  0000191c  1020000c	beqz	r1,L30_LF2
  900  00001920  54000000	nop; delay slot nop
  901  00001924  0800003c	j	L26_LF2
  902  00001928  54000000	nop; delay slot nop
  903  0000192c          	L31_LF2:
  904  0000192c          	L30_LF2:
  905  0000192c  8fc20000	lw	r2,(r30)
  906  00001930  20410001	addi	r1,r2,#1
  907  00001934  00011020	add	r2,r0,r1
  908  00001938  afc20000	sw	(r30),r2
  909  0000193c  8fc20004	lw	r2,4(r30)
  910  00001940  20410001	addi	r1,r2,#1
  911  00001944  00011020	add	r2,r0,r1
  912  00001948  afc20004	sw	4(r30),r2
  913  0000194c          	L27_LF2:
  914  0000194c  8fc2fff4	lw	r2,-12(r30)
  915  00001950  20410001	addi	r1,r2,#1
  916  00001954  00011020	add	r2,r0,r1
  917  00001958  afc2fff4	sw	-12(r30),r2
  918  0000195c  0bffff64	j	L25_LF2
  919  00001960  54000000	nop; delay slot nop
  920  00001964          	L26_LF2:
  921  00001964  8fc1fff4	lw	r1,-12(r30)
  922  00001968  8fc20008	lw	r2,8(r30)
  923  0000196c  00220828	seq	r1,r1,r2
  924  00001970  10200018	beqz	r1,L32_LF2
  925  00001974  54000000	nop; delay slot nop
  926  00001978  20010000	addi	r1,r0,#0
  927  0000197c  08000054	j	L24_LF2
  928  00001980  54000000	nop; delay slot nop
  929  00001984  0800004c	j	L33_LF2
  930  00001988  54000000	nop; delay slot nop
  931  0000198c          	L32_LF2:
  932  0000198c  8fc20000	lw	r2,(r30)
  933  00001990  90410000	lbu	r1,(r2)
  934  00001994  8fc20004	lw	r2,4(r30)
  935  00001998  90430000	lbu	r3,(r2)
  936  0000199c  00230822	sub	r1,r1,r3
  937  000019a0  74220000	sgei	r2,r1,#0
  938  000019a4  10400020	beqz	r2,L34_LF2
  939  000019a8  54000000	nop; delay slot nop
  940  000019ac  8fc10000	lw	r1,(r30)
  941  000019b0  8fc20004	lw	r2,4(r30)
  942  000019b4  90210000	lbu	r1,(r1)
  943  000019b8  90420000	lbu	r2,(r2)
  944  000019bc  00220829	sne	r1,r1,r2
  945  000019c0  08000008	j	L35_LF2
  946  000019c4  54000000	nop; delay slot nop
  947  000019c8          	L34_LF2:
  948  000019c8  2001ffff	addi	r1,r0,#-1
  949  000019cc          	L35_LF2:
  950  000019cc  08000004	j	L24_LF2
  951  000019d0  54000000	nop; delay slot nop
  952  000019d4          	L33_LF2:
  953  000019d4          	L24_LF2:
  954  000019d4  8fa20000	lw	r2,0(r29)
  955  000019d8  8fa30004	lw	r3,4(r29)
  956  000019dc  8fdffff8	lw	r31,-8(r30)
  957  000019e0  001ee820	add	r29,r0,r30
  958  000019e4  8fdefffc	lw	r30,-4(r30)
  959  000019e8  4be00000	jr	r31
  960  000019ec  54000000	nop
  961  000019f0          	.endproc _dstrncmp
  962  000019f0          	.align 2
  963  000019f0          	.proc _dstrlen
  964  000019f0          	.global _dstrlen
  965  000019f0          	_dstrlen:
  966                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  967  000019f0  afbefffc	sw	-4(r29),r30; push fp
  968  000019f4  001df020	add	r30,r0,r29; fp = sp
  969  000019f8  afbffff8	sw	-8(r29),r31; push ret addr
  970  000019fc  2fbd0018	subui	r29,r29,#24; alloc local storage
  971  00001a00  afa20000	sw	0(r29),r2
  972  00001a04  20010000	addi	r1,r0,#0
  973  00001a08  afc1fff4	sw	-12(r30),r1
  974  00001a0c          	L37_LF2:
  975  00001a0c  8fc10000	lw	r1,(r30)
  976  00001a10  20220001	addi	r2,r1,#1
  977  00001a14  afc20000	sw	(r30),r2
  978  00001a18  90210000	lbu	r1,(r1)
  979  00001a1c  64220000	snei	r2,r1,#0
  980  00001a20  1440000c	bnez	r2,L39_LF2
  981  00001a24  54000000	nop; delay slot nop
  982  00001a28  0800001c	j	L38_LF2
  983  00001a2c  54000000	nop; delay slot nop
  984  00001a30          	L39_LF2:
  985  00001a30  8fc2fff4	lw	r2,-12(r30)
  986  00001a34  20410001	addi	r1,r2,#1
  987  00001a38  00011020	add	r2,r0,r1
  988  00001a3c  afc2fff4	sw	-12(r30),r2
  989  00001a40  0bffffc8	j	L37_LF2
  990  00001a44  54000000	nop; delay slot nop
  991  00001a48          	L38_LF2:
  992  00001a48  8fc1fff4	lw	r1,-12(r30)
  993  00001a4c  08000004	j	L36_LF2
  994  00001a50  54000000	nop; delay slot nop
  995  00001a54          	L36_LF2:
  996  00001a54  8fa20000	lw	r2,0(r29)
  997  00001a58  8fdffff8	lw	r31,-8(r30)
  998  00001a5c  001ee820	add	r29,r0,r30
  999  00001a60  8fdefffc	lw	r30,-4(r30)
 1000  00001a64  4be00000	jr	r31
 1001  00001a68  54000000	nop
 1002  00001a6c          	.endproc _dstrlen
 1003  00001a6c          	.align 2
 1004  00001a6c          	.proc _dstrstr
 1005  00001a6c          	.global _dstrstr
 1006  00001a6c          	_dstrstr:
 1007                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
 1008  00001a6c  afbefffc	sw	-4(r29),r30; push fp
 1009  00001a70  001df020	add	r30,r0,r29; fp = sp
 1010  00001a74  afbffff8	sw	-8(r29),r31; push ret addr
 1011  00001a78  2fbd0018	subui	r29,r29,#24; alloc local storage
 1012  00001a7c  afa20000	sw	0(r29),r2
 1013  00001a80  23bdfff8	addi	r29,r29,#-8
 1014  00001a84  001d0820	add	r1,r0,r29
 1015  00001a88  8fc20004	lw	r2,4(r30)
 1016  00001a8c  ac220000	sw	(r1),r2
 1017  00001a90  0fffff5c	jal	_dstrlen
 1018  00001a94  54000000	nop; delay slot nop
 1019  00001a98  23bd0008	addi	r29,r29,#8
 1020  00001a9c  afc1fff4	sw	-12(r30),r1
 1021  00001aa0          	L41_LF2:
 1022  00001aa0  8fc10000	lw	r1,(r30)
 1023  00001aa4  90220000	lbu	r2,(r1)
 1024  00001aa8  64410000	snei	r1,r2,#0
 1025  00001aac  1420000c	bnez	r1,L43_LF2
 1026  00001ab0  54000000	nop; delay slot nop
 1027  00001ab4  08000060	j	L42_LF2
 1028  00001ab8  54000000	nop; delay slot nop
 1029  00001abc          	L43_LF2:
 1030  00001abc  23bdfff0	addi	r29,r29,#-16
 1031  00001ac0  001d0820	add	r1,r0,r29
 1032  00001ac4  8fc20000	lw	r2,(r30)
 1033  00001ac8  ac220000	sw	(r1),r2
 1034  00001acc  8fc20004	lw	r2,4(r30)
 1035  00001ad0  ac220004	sw	4(r1),r2
 1036  00001ad4  8fc2fff4	lw	r2,-12(r30)
 1037  00001ad8  ac220008	sw	8(r1),r2
 1038  00001adc  0ffffdc0	jal	_dstrncmp
 1039  00001ae0  54000000	nop; delay slot nop
 1040  00001ae4  23bd0010	addi	r29,r29,#16
 1041  00001ae8  64220000	snei	r2,r1,#0
 1042  00001aec  14400010	bnez	r2,L44_LF2
 1043  00001af0  54000000	nop; delay slot nop
 1044  00001af4  8fc10000	lw	r1,(r30)
 1045  00001af8  08000028	j	L40_LF2
 1046  00001afc  54000000	nop; delay slot nop
 1047  00001b00          	L44_LF2:
 1048  00001b00  8fc20000	lw	r2,(r30)
 1049  00001b04  20410001	addi	r1,r2,#1
 1050  00001b08  00011020	add	r2,r0,r1
 1051  00001b0c  afc20000	sw	(r30),r2
 1052  00001b10  0bffff8c	j	L41_LF2
 1053  00001b14  54000000	nop; delay slot nop
 1054  00001b18          	L42_LF2:
 1055  00001b18  20010000	addi	r1,r0,#0
 1056  00001b1c  08000004	j	L40_LF2
 1057  00001b20  54000000	nop; delay slot nop
 1058  00001b24          	L40_LF2:
 1059  00001b24  8fa20000	lw	r2,0(r29)
 1060  00001b28  8fdffff8	lw	r31,-8(r30)
 1061  00001b2c  001ee820	add	r29,r0,r30
 1062  00001b30  8fdefffc	lw	r30,-4(r30)
 1063  00001b34  4be00000	jr	r31
 1064  00001b38  54000000	nop
 1065  00001b3c          	.endproc _dstrstr
 1066  00001b3c          	.align 2
 1067  00001b3c          	.proc _dmindex
 1068  00001b3c          	.global _dmindex
 1069  00001b3c          	_dmindex:
 1070                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1071  00001b3c  afbefffc	sw	-4(r29),r30; push fp
 1072  00001b40  001df020	add	r30,r0,r29; fp = sp
 1073  00001b44  afbffff8	sw	-8(r29),r31; push ret addr
 1074  00001b48  2fbd0018	subui	r29,r29,#24; alloc local storage
 1075  00001b4c  afa20000	sw	0(r29),r2
 1076  00001b50  54000000	nop
 1077  00001b54          	L46_LF2:
 1078  00001b54  8fc10000	lw	r1,(r30)
 1079  00001b58  90220000	lbu	r2,(r1)
 1080  00001b5c  64410000	snei	r1,r2,#0
 1081  00001b60  1420000c	bnez	r1,L48_LF2
 1082  00001b64  54000000	nop; delay slot nop
 1083  00001b68  08000070	j	L47_LF2
 1084  00001b6c  54000000	nop; delay slot nop
 1085  00001b70          	L48_LF2:
 1086  00001b70  8fc10004	lw	r1,4(r30)
 1087  00001b74  afc1fff4	sw	-12(r30),r1
 1088  00001b78          	L49_LF2:
 1089  00001b78  8fc1fff4	lw	r1,-12(r30)
 1090  00001b7c  90220000	lbu	r2,(r1)
 1091  00001b80  64410000	snei	r1,r2,#0
 1092  00001b84  1420000c	bnez	r1,L52_LF2
 1093  00001b88  54000000	nop; delay slot nop
 1094  00001b8c  08000044	j	L50_LF2
 1095  00001b90  54000000	nop; delay slot nop
 1096  00001b94          	L52_LF2:
 1097  00001b94  8fc10000	lw	r1,(r30)
 1098  00001b98  8fc2fff4	lw	r2,-12(r30)
 1099  00001b9c  90210000	lbu	r1,(r1)
 1100  00001ba0  90420000	lbu	r2,(r2)
 1101  00001ba4  00220828	seq	r1,r1,r2
 1102  00001ba8  10200010	beqz	r1,L51_LF2
 1103  00001bac  54000000	nop; delay slot nop
 1104  00001bb0  8fc10000	lw	r1,(r30)
 1105  00001bb4  08000030	j	L45_LF2
 1106  00001bb8  54000000	nop; delay slot nop
 1107  00001bbc          	L53_LF2:
 1108  00001bbc          	L51_LF2:
 1109  00001bbc  8fc2fff4	lw	r2,-12(r30)
 1110  00001bc0  20410001	addi	r1,r2,#1
 1111  00001bc4  00011020	add	r2,r0,r1
 1112  00001bc8  afc2fff4	sw	-12(r30),r2
 1113  00001bcc  0bffffa8	j	L49_LF2
 1114  00001bd0  54000000	nop; delay slot nop
 1115  00001bd4          	L50_LF2:
 1116  00001bd4  0bffff7c	j	L46_LF2
 1117  00001bd8  54000000	nop; delay slot nop
 1118  00001bdc          	L47_LF2:
 1119  00001bdc  20010000	addi	r1,r0,#0
 1120  00001be0  08000004	j	L45_LF2
 1121  00001be4  54000000	nop; delay slot nop
 1122  00001be8          	L45_LF2:
 1123  00001be8  8fa20000	lw	r2,0(r29)
 1124  00001bec  8fdffff8	lw	r31,-8(r30)
 1125  00001bf0  001ee820	add	r29,r0,r30
 1126  00001bf4  8fdefffc	lw	r30,-4(r30)
 1127  00001bf8  4be00000	jr	r31
 1128  00001bfc  54000000	nop
 1129  00001c00          	.endproc _dmindex
 1130  00001c00          	.align 2
 1131  00001c00          	.proc _dindex
 1132  00001c00          	.global _dindex
 1133  00001c00          	_dindex:
 1134                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1135  00001c00  afbefffc	sw	-4(r29),r30; push fp
 1136  00001c04  001df020	add	r30,r0,r29; fp = sp
 1137  00001c08  afbffff8	sw	-8(r29),r31; push ret addr
 1138  00001c0c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1139  00001c10  afa20000	sw	0(r29),r2
 1140  00001c14  54000000	nop
 1141  00001c18          	L55_LF2:
 1142  00001c18  8fc10000	lw	r1,(r30)
 1143  00001c1c  90220000	lbu	r2,(r1)
 1144  00001c20  64410000	snei	r1,r2,#0
 1145  00001c24  1420000c	bnez	r1,L57_LF2
 1146  00001c28  54000000	nop; delay slot nop
 1147  00001c2c  08000040	j	L56_LF2
 1148  00001c30  54000000	nop; delay slot nop
 1149  00001c34          	L57_LF2:
 1150  00001c34  8fc10000	lw	r1,(r30)
 1151  00001c38  90220000	lbu	r2,(r1)
 1152  00001c3c  8fc10004	lw	r1,4(r30)
 1153  00001c40  00411028	seq	r2,r2,r1
 1154  00001c44  10400010	beqz	r2,L58_LF2
 1155  00001c48  54000000	nop; delay slot nop
 1156  00001c4c  8fc10000	lw	r1,(r30)
 1157  00001c50  08000028	j	L54_LF2
 1158  00001c54  54000000	nop; delay slot nop
 1159  00001c58          	L58_LF2:
 1160  00001c58  8fc20000	lw	r2,(r30)
 1161  00001c5c  20410001	addi	r1,r2,#1
 1162  00001c60  00011020	add	r2,r0,r1
 1163  00001c64  afc20000	sw	(r30),r2
 1164  00001c68  0bffffac	j	L55_LF2
 1165  00001c6c  54000000	nop; delay slot nop
 1166  00001c70          	L56_LF2:
 1167  00001c70  20010000	addi	r1,r0,#0
 1168  00001c74  08000004	j	L54_LF2
 1169  00001c78  54000000	nop; delay slot nop
 1170  00001c7c          	L54_LF2:
 1171  00001c7c  8fa20000	lw	r2,0(r29)
 1172  00001c80  8fdffff8	lw	r31,-8(r30)
 1173  00001c84  001ee820	add	r29,r0,r30
 1174  00001c88  8fdefffc	lw	r30,-4(r30)
 1175  00001c8c  4be00000	jr	r31
 1176  00001c90  54000000	nop
 1177  00001c94          	.endproc _dindex
 1178  00001c94          	.align 2
 1179  00001c94          	.proc _ditoa
 1180  00001c94          	.global _ditoa
 1181  00001c94          	_ditoa:
 1182                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1183  00001c94  afbefffc	sw	-4(r29),r30; push fp
 1184  00001c98  001df020	add	r30,r0,r29; fp = sp
 1185  00001c9c  afbffff8	sw	-8(r29),r31; push ret addr
 1186  00001ca0  2fbd0018	subui	r29,r29,#24; alloc local storage
 1187  00001ca4  afa20000	sw	0(r29),r2
 1188  00001ca8  afa30004	sw	4(r29),r3
 1189  00001cac  8fc10000	lw	r1,(r30)
 1190  00001cb0  68220000	slti	r2,r1,#0
 1191  00001cb4  1040002c	beqz	r2,L60_LF2
 1192  00001cb8  54000000	nop; delay slot nop
 1193  00001cbc  8fc10004	lw	r1,4(r30)
 1194  00001cc0  20220001	addi	r2,r1,#1
 1195  00001cc4  afc20004	sw	4(r30),r2
 1196  00001cc8  2002002d	addi	r2,r0,(#0x2d)&0xff
 1197  00001ccc  a0220000	sb	(r1),r2
 1198  00001cd0  8fc10000	lw	r1,(r30)
 1199  00001cd4  00011022	sub	r2,r0,r1
 1200  00001cd8  afc20000	sw	(r30),r2
 1201  00001cdc  08000118	j	L61_LF2
 1202  00001ce0  54000000	nop; delay slot nop
 1203  00001ce4          	L60_LF2:
 1204  00001ce4  8fc10000	lw	r1,(r30)
 1205  00001ce8  64220000	snei	r2,r1,#0
 1206  00001cec  14400020	bnez	r2,L62_LF2
 1207  00001cf0  54000000	nop; delay slot nop
 1208  00001cf4  8fc10004	lw	r1,4(r30)
 1209  00001cf8  20220001	addi	r2,r1,#1
 1210  00001cfc  afc20004	sw	4(r30),r2
 1211  00001d00  20020030	addi	r2,r0,(#0x30)&0xff
 1212  00001d04  a0220000	sb	(r1),r2
 1213  00001d08  080000ec	j	L61_LF2
 1214  00001d0c  54000000	nop; delay slot nop
 1215  00001d10          	L62_LF2:
 1216  00001d10  20010001	addi	r1,r0,#1
 1217  00001d14  afc1fff4	sw	-12(r30),r1
 1218  00001d18          	L64_LF2:
 1219  00001d18  8fc1fff4	lw	r1,-12(r30)
 1220  00001d1c  8fc20000	lw	r2,(r30)
 1221  00001d20  0022082c	sle	r1,r1,r2
 1222  00001d24  1420000c	bnez	r1,L66_LF2
 1223  00001d28  54000000	nop; delay slot nop
 1224  00001d2c  08000024	j	L65_LF2
 1225  00001d30  54000000	nop; delay slot nop
 1226  00001d34          	L67_LF2:
 1227  00001d34          	L66_LF2:
 1228  00001d34  8fc1fff4	lw	r1,-12(r30)
 1229  00001d38  00011820	add	r3,r0,r1
 1230  00001d3c  50620002	slli	r2,r3,#0x2
 1231  00001d40  00411020	add	r2,r2,r1
 1232  00001d44  50410001	slli	r1,r2,#0x1
 1233  00001d48  afc1fff4	sw	-12(r30),r1
 1234  00001d4c  0bffffc8	j	L64_LF2
 1235  00001d50  54000000	nop; delay slot nop
 1236  00001d54          	L65_LF2:
 1237  00001d54  54000000	nop
 1238  00001d58          	L68_LF2:
 1239  00001d58  8fc1fff4	lw	r1,-12(r30)
 1240  00001d5c  2002000a	addi	r2,r0,#10
 1241  00001d60  00200035	movi2fp	f0,r1
 1242  00001d64  00400835	movi2fp	f1,r2
 1243  00001d68  0401000f	div	f0,f0,f1
 1244  00001d6c  00000834	movfp2i	r1,f0
 1245  00001d70  afc1fff4	sw	-12(r30),r1
 1246  00001d74  8fc10004	lw	r1,4(r30)
 1247  00001d78  20220001	addi	r2,r1,#1
 1248  00001d7c  afc20004	sw	4(r30),r2
 1249  00001d80  8fc20000	lw	r2,(r30)
 1250  00001d84  8fc3fff4	lw	r3,-12(r30)
 1251  00001d88  00400035	movi2fp	f0,r2
 1252  00001d8c  00600835	movi2fp	f1,r3
 1253  00001d90  0401000f	div	f0,f0,f1
 1254  00001d94  00001034	movfp2i	r2,f0
 1255  00001d98  00021820	add	r3,r0,r2
 1256  00001d9c  20620030	addi	r2,r3,#48
 1257  00001da0  a0220000	sb	(r1),r2
 1258  00001da4  8fc10000	lw	r1,(r30)
 1259  00001da8  8fc3fff4	lw	r3,-12(r30)
 1260  00001dac  00200035	movi2fp	f0,r1
 1261  00001db0  00600835	movi2fp	f1,r3
 1262  00001db4  0401000f	div	f0,f0,f1
 1263  00001db8  00001034	movfp2i	r2,f0
 1264  00001dbc  8fc3fff4	lw	r3,-12(r30)
 1265  00001dc0  00400035	movi2fp	f0,r2
 1266  00001dc4  00600835	movi2fp	f1,r3
 1267  00001dc8  0401000e	mult	f0,f0,f1
 1268  00001dcc  00001034	movfp2i	r2,f0
 1269  00001dd0  00220822	sub	r1,r1,r2
 1270  00001dd4  afc10000	sw	(r30),r1
 1271  00001dd8          	L70_LF2:
 1272  00001dd8  8fc1fff4	lw	r1,-12(r30)
 1273  00001ddc  6c220001	sgti	r2,r1,#1
 1274  00001de0  1440000c	bnez	r2,L71_LF2
 1275  00001de4  54000000	nop; delay slot nop
 1276  00001de8  0800000c	j	L61_LF2
 1277  00001dec  54000000	nop; delay slot nop
 1278  00001df0          	L71_LF2:
 1279  00001df0  0bffff64	j	L68_LF2
 1280  00001df4  54000000	nop; delay slot nop
 1281  00001df8          	L69_LF2:
 1282  00001df8          	L63_LF2:
 1283  00001df8          	L61_LF2:
 1284  00001df8  8fc10004	lw	r1,4(r30)
 1285  00001dfc  20020000	addi	r2,r0,(#0x0)&0xff
 1286  00001e00  a0220000	sb	(r1),r2
 1287  00001e04          	L59_LF2:
 1288  00001e04  8fa20000	lw	r2,0(r29)
 1289  00001e08  8fa30004	lw	r3,4(r29)
 1290  00001e0c  8fdffff8	lw	r31,-8(r30)
 1291  00001e10  001ee820	add	r29,r0,r30
 1292  00001e14  8fdefffc	lw	r30,-4(r30)
 1293  00001e18  4be00000	jr	r31
 1294  00001e1c  54000000	nop
 1295  00001e20          	.endproc _ditoa
 1296  00001e20          	.align 2
 1297  00001e20          	.proc _dstrtol
 1298  00001e20          	.global _dstrtol
 1299  00001e20          	_dstrtol:
 1300                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1301  00001e20  afbefffc	sw	-4(r29),r30; push fp
 1302  00001e24  001df020	add	r30,r0,r29; fp = sp
 1303  00001e28  afbffff8	sw	-8(r29),r31; push ret addr
 1304  00001e2c  2fbd0020	subui	r29,r29,#32; alloc local storage
 1305  00001e30  afa20000	sw	0(r29),r2
 1306  00001e34  20010000	addi	r1,r0,#0
 1307  00001e38  afc1fff4	sw	-12(r30),r1
 1308  00001e3c          	L73_LF2:
 1309  00001e3c  8fc10000	lw	r1,(r30)
 1310  00001e40  90220000	lbu	r2,(r1)
 1311  00001e44  60410020	seqi	r1,r2,#32
 1312  00001e48  14200034	bnez	r1,L75_LF2
 1313  00001e4c  54000000	nop; delay slot nop
 1314  00001e50  8fc10000	lw	r1,(r30)
 1315  00001e54  90220000	lbu	r2,(r1)
 1316  00001e58  60410009	seqi	r1,r2,#9
 1317  00001e5c  14200020	bnez	r1,L75_LF2
 1318  00001e60  54000000	nop; delay slot nop
 1319  00001e64  8fc10000	lw	r1,(r30)
 1320  00001e68  90220000	lbu	r2,(r1)
 1321  00001e6c  6041000a	seqi	r1,r2,#10
 1322  00001e70  1420000c	bnez	r1,L75_LF2
 1323  00001e74  54000000	nop; delay slot nop
 1324  00001e78  0800001c	j	L74_LF2
 1325  00001e7c  54000000	nop; delay slot nop
 1326  00001e80          	L75_LF2:
 1327  00001e80  8fc20000	lw	r2,(r30)
 1328  00001e84  20410001	addi	r1,r2,#1
 1329  00001e88  00011020	add	r2,r0,r1
 1330  00001e8c  afc20000	sw	(r30),r2
 1331  00001e90  0bffffa8	j	L73_LF2
 1332  00001e94  54000000	nop; delay slot nop
 1333  00001e98          	L74_LF2:
 1334  00001e98  8fc10004	lw	r1,4(r30)
 1335  00001e9c  64220000	snei	r2,r1,#0
 1336  00001ea0  10400010	beqz	r2,L76_LF2
 1337  00001ea4  54000000	nop; delay slot nop
 1338  00001ea8  8fc10004	lw	r1,4(r30)
 1339  00001eac  8fc20000	lw	r2,(r30)
 1340  00001eb0  ac220000	sw	(r1),r2
 1341  00001eb4          	L76_LF2:
 1342  00001eb4  8fc10000	lw	r1,(r30)
 1343  00001eb8  90220000	lbu	r2,(r1)
 1344  00001ebc  64410000	snei	r1,r2,#0
 1345  00001ec0  14200010	bnez	r1,L77_LF2
 1346  00001ec4  54000000	nop; delay slot nop
 1347  00001ec8  8fc1fff4	lw	r1,-12(r30)
 1348  00001ecc  08000294	j	L72_LF2
 1349  00001ed0  54000000	nop; delay slot nop
 1350  00001ed4          	L77_LF2:
 1351  00001ed4  8fc10000	lw	r1,(r30)
 1352  00001ed8  90220000	lbu	r2,(r1)
 1353  00001edc  6041002d	seqi	r1,r2,#45
 1354  00001ee0  10200024	beqz	r1,L78_LF2
 1355  00001ee4  54000000	nop; delay slot nop
 1356  00001ee8  2001ffff	addi	r1,r0,#-1
 1357  00001eec  afc1ffec	sw	-20(r30),r1
 1358  00001ef0  8fc20000	lw	r2,(r30)
 1359  00001ef4  20410001	addi	r1,r2,#1
 1360  00001ef8  00011020	add	r2,r0,r1
 1361  00001efc  afc20000	sw	(r30),r2
 1362  00001f00  0800000c	j	L79_LF2
 1363  00001f04  54000000	nop; delay slot nop
 1364  00001f08          	L78_LF2:
 1365  00001f08  20010001	addi	r1,r0,#1
 1366  00001f0c  afc1ffec	sw	-20(r30),r1
 1367  00001f10          	L79_LF2:
 1368  00001f10  8fc10008	lw	r1,8(r30)
 1369  00001f14  64220000	snei	r2,r1,#0
 1370  00001f18  14400090	bnez	r2,L80_LF2
 1371  00001f1c  54000000	nop; delay slot nop
 1372  00001f20  8fc10000	lw	r1,(r30)
 1373  00001f24  90220000	lbu	r2,(r1)
 1374  00001f28  60410030	seqi	r1,r2,#48
 1375  00001f2c  10200074	beqz	r1,L81_LF2
 1376  00001f30  54000000	nop; delay slot nop
 1377  00001f34  8fc20000	lw	r2,(r30)
 1378  00001f38  20410001	addi	r1,r2,#1
 1379  00001f3c  00011020	add	r2,r0,r1
 1380  00001f40  afc20000	sw	(r30),r2
 1381  00001f44  8fc10000	lw	r1,(r30)
 1382  00001f48  90220000	lbu	r2,(r1)
 1383  00001f4c  60410078	seqi	r1,r2,#120
 1384  00001f50  14200020	bnez	r1,L83_LF2
 1385  00001f54  54000000	nop; delay slot nop
 1386  00001f58  8fc10000	lw	r1,(r30)
 1387  00001f5c  90220000	lbu	r2,(r1)
 1388  00001f60  60410058	seqi	r1,r2,#88
 1389  00001f64  1420000c	bnez	r1,L83_LF2
 1390  00001f68  54000000	nop; delay slot nop
 1391  00001f6c  08000024	j	L82_LF2
 1392  00001f70  54000000	nop; delay slot nop
 1393  00001f74          	L83_LF2:
 1394  00001f74  20010010	addi	r1,r0,#16
 1395  00001f78  afc10008	sw	8(r30),r1
 1396  00001f7c  8fc20000	lw	r2,(r30)
 1397  00001f80  20410001	addi	r1,r2,#1
 1398  00001f84  00011020	add	r2,r0,r1
 1399  00001f88  afc20000	sw	(r30),r2
 1400  00001f8c  0800000c	j	L84_LF2
 1401  00001f90  54000000	nop; delay slot nop
 1402  00001f94          	L82_LF2:
 1403  00001f94  20010008	addi	r1,r0,#8
 1404  00001f98  afc10008	sw	8(r30),r1
 1405  00001f9c          	L84_LF2:
 1406  00001f9c  0800000c	j	L80_LF2
 1407  00001fa0  54000000	nop; delay slot nop
 1408  00001fa4          	L81_LF2:
 1409  00001fa4  2001000a	addi	r1,r0,#10
 1410  00001fa8  afc10008	sw	8(r30),r1
 1411  00001fac          	L85_LF2:
 1412  00001fac          	L80_LF2:
 1413  00001fac  8fc10008	lw	r1,8(r30)
 1414  00001fb0  70220000	slei	r2,r1,#0
 1415  00001fb4  1440001c	bnez	r2,L87_LF2
 1416  00001fb8  54000000	nop; delay slot nop
 1417  00001fbc  8fc10008	lw	r1,8(r30)
 1418  00001fc0  6c220010	sgti	r2,r1,#16
 1419  00001fc4  1440000c	bnez	r2,L87_LF2
 1420  00001fc8  54000000	nop; delay slot nop
 1421  00001fcc  08000010	j	L86_LF2
 1422  00001fd0  54000000	nop; delay slot nop
 1423  00001fd4          	L87_LF2:
 1424  00001fd4  8fc1fff4	lw	r1,-12(r30)
 1425  00001fd8  08000188	j	L72_LF2
 1426  00001fdc  54000000	nop; delay slot nop
 1427  00001fe0          	L86_LF2:
 1428  00001fe0  54000000	nop
 1429  00001fe4          	L88_LF2:
 1430  00001fe4  8fc10000	lw	r1,(r30)
 1431  00001fe8  90220000	lbu	r2,(r1)
 1432  00001fec  6c41002f	sgtui	r1,r2,#47
 1433  00001ff0  10200030	beqz	r1,L91_LF2
 1434  00001ff4  54000000	nop; delay slot nop
 1435  00001ff8  8fc10000	lw	r1,(r30)
 1436  00001ffc  90220000	lbu	r2,(r1)
 1437  00002000  70410039	sleui	r1,r2,#57
 1438  00002004  1020001c	beqz	r1,L91_LF2
 1439  00002008  54000000	nop; delay slot nop
 1440  0000200c  8fc10000	lw	r1,(r30)
 1441  00002010  90220000	lbu	r2,(r1)
 1442  00002014  2041ffd0	addi	r1,r2,#-48
 1443  00002018  afc1fff0	sw	-16(r30),r1
 1444  0000201c  0800008c	j	L92_LF2
 1445  00002020  54000000	nop; delay slot nop
 1446  00002024          	L91_LF2:
 1447  00002024  8fc10000	lw	r1,(r30)
 1448  00002028  90220000	lbu	r2,(r1)
 1449  0000202c  6c410060	sgtui	r1,r2,#96
 1450  00002030  10200030	beqz	r1,L93_LF2
 1451  00002034  54000000	nop; delay slot nop
 1452  00002038  8fc10000	lw	r1,(r30)
 1453  0000203c  90220000	lbu	r2,(r1)
 1454  00002040  7041007a	sleui	r1,r2,#122
 1455  00002044  1020001c	beqz	r1,L93_LF2
 1456  00002048  54000000	nop; delay slot nop
 1457  0000204c  8fc10000	lw	r1,(r30)
 1458  00002050  90220000	lbu	r2,(r1)
 1459  00002054  2041ffa9	addi	r1,r2,#-87
 1460  00002058  afc1fff0	sw	-16(r30),r1
 1461  0000205c  0800004c	j	L92_LF2
 1462  00002060  54000000	nop; delay slot nop
 1463  00002064          	L93_LF2:
 1464  00002064  8fc10000	lw	r1,(r30)
 1465  00002068  90220000	lbu	r2,(r1)
 1466  0000206c  6c410040	sgtui	r1,r2,#64
 1467  00002070  10200030	beqz	r1,L95_LF2
 1468  00002074  54000000	nop; delay slot nop
 1469  00002078  8fc10000	lw	r1,(r30)
 1470  0000207c  90220000	lbu	r2,(r1)
 1471  00002080  7041005a	sleui	r1,r2,#90
 1472  00002084  1020001c	beqz	r1,L95_LF2
 1473  00002088  54000000	nop; delay slot nop
 1474  0000208c  8fc10000	lw	r1,(r30)
 1475  00002090  90220000	lbu	r2,(r1)
 1476  00002094  2041ffc9	addi	r1,r2,#-55
 1477  00002098  afc1fff0	sw	-16(r30),r1
 1478  0000209c  0800000c	j	L92_LF2
 1479  000020a0  54000000	nop; delay slot nop
 1480  000020a4          	L95_LF2:
 1481  000020a4  200103e8	addi	r1,r0,#1000
 1482  000020a8  afc1fff0	sw	-16(r30),r1
 1483  000020ac          	L96_LF2:
 1484  000020ac          	L94_LF2:
 1485  000020ac          	L92_LF2:
 1486  000020ac  8fc1fff0	lw	r1,-16(r30)
 1487  000020b0  8fc20008	lw	r2,8(r30)
 1488  000020b4  0022082a	slt	r1,r1,r2
 1489  000020b8  10200040	beqz	r1,L90_LF2
 1490  000020bc  54000000	nop; delay slot nop
 1491  000020c0  8fc1fff4	lw	r1,-12(r30)
 1492  000020c4  8fc20008	lw	r2,8(r30)
 1493  000020c8  00200035	movi2fp	f0,r1
 1494  000020cc  00400835	movi2fp	f1,r2
 1495  000020d0  0401000e	mult	f0,f0,f1
 1496  000020d4  00000834	movfp2i	r1,f0
 1497  000020d8  afc1fff4	sw	-12(r30),r1
 1498  000020dc  8fc1fff4	lw	r1,-12(r30)
 1499  000020e0  8fc2fff0	lw	r2,-16(r30)
 1500  000020e4  00220820	add	r1,r1,r2
 1501  000020e8  afc1fff4	sw	-12(r30),r1
 1502  000020ec  8fc20000	lw	r2,(r30)
 1503  000020f0  20410001	addi	r1,r2,#1
 1504  000020f4  00011020	add	r2,r0,r1
 1505  000020f8  afc20000	sw	(r30),r2
 1506  000020fc          	L97_LF2:
 1507  000020fc          	L90_LF2:
 1508  000020fc  8fc1fff0	lw	r1,-16(r30)
 1509  00002100  8fc20008	lw	r2,8(r30)
 1510  00002104  0022082a	slt	r1,r1,r2
 1511  00002108  1420000c	bnez	r1,L98_LF2
 1512  0000210c  54000000	nop; delay slot nop
 1513  00002110  0800000c	j	L89_LF2
 1514  00002114  54000000	nop; delay slot nop
 1515  00002118          	L98_LF2:
 1516  00002118  0bfffec8	j	L88_LF2
 1517  0000211c  54000000	nop; delay slot nop
 1518  00002120          	L89_LF2:
 1519  00002120  8fc10004	lw	r1,4(r30)
 1520  00002124  64220000	snei	r2,r1,#0
 1521  00002128  10400010	beqz	r2,L99_LF2
 1522  0000212c  54000000	nop; delay slot nop
 1523  00002130  8fc10004	lw	r1,4(r30)
 1524  00002134  8fc20000	lw	r2,(r30)
 1525  00002138  ac220000	sw	(r1),r2
 1526  0000213c          	L99_LF2:
 1527  0000213c  8fc1fff4	lw	r1,-12(r30)
 1528  00002140  8fc2ffec	lw	r2,-20(r30)
 1529  00002144  00200035	movi2fp	f0,r1
 1530  00002148  00400835	movi2fp	f1,r2
 1531  0000214c  0401000e	mult	f0,f0,f1
 1532  00002150  00000834	movfp2i	r1,f0
 1533  00002154  afc1fff4	sw	-12(r30),r1
 1534  00002158  8fc1fff4	lw	r1,-12(r30)
 1535  0000215c  08000004	j	L72_LF2
 1536  00002160  54000000	nop; delay slot nop
 1537  00002164          	L72_LF2:
 1538  00002164  8fa20000	lw	r2,0(r29)
 1539  00002168  8fdffff8	lw	r31,-8(r30)
 1540  0000216c  001ee820	add	r29,r0,r30
 1541  00002170  8fdefffc	lw	r30,-4(r30)
 1542  00002174  4be00000	jr	r31
 1543  00002178  54000000	nop
 1544  0000217c          	.endproc _dstrtol
 1545  0000217c          	.align 2
 1546  0000217c          	.proc _bcopy
 1547  0000217c          	.global _bcopy
 1548  0000217c          	_bcopy:
 1549                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1550  0000217c  afbefffc	sw	-4(r29),r30; push fp
 1551  00002180  001df020	add	r30,r0,r29; fp = sp
 1552  00002184  afbffff8	sw	-8(r29),r31; push ret addr
 1553  00002188  2fbd0010	subui	r29,r29,#16; alloc local storage
 1554  0000218c  afa20000	sw	0(r29),r2
 1555  00002190  afa30004	sw	4(r29),r3
 1556  00002194  54000000	nop
 1557  00002198          	L101_LF2:
 1558  00002198  8fc10008	lw	r1,8(r30)
 1559  0000219c  2022ffff	addi	r2,r1,#-1
 1560  000021a0  afc20008	sw	8(r30),r2
 1561  000021a4  6c210000	sgti	r1,r1,#0
 1562  000021a8  1420000c	bnez	r1,L103_LF2
 1563  000021ac  54000000	nop; delay slot nop
 1564  000021b0  0800002c	j	L102_LF2
 1565  000021b4  54000000	nop; delay slot nop
 1566  000021b8          	L103_LF2:
 1567  000021b8  8fc10004	lw	r1,4(r30)
 1568  000021bc  20220001	addi	r2,r1,#1
 1569  000021c0  afc20004	sw	4(r30),r2
 1570  000021c4  8fc20000	lw	r2,(r30)
 1571  000021c8  20430001	addi	r3,r2,#1
 1572  000021cc  afc30000	sw	(r30),r3
 1573  000021d0  80420000	lb	r2,(r2)
 1574  000021d4  a0220000	sb	(r1),r2
 1575  000021d8  0bffffbc	j	L101_LF2
 1576  000021dc  54000000	nop; delay slot nop
 1577  000021e0          	L102_LF2:
 1578  000021e0          	L100_LF2:
 1579  000021e0  8fa20000	lw	r2,0(r29)
 1580  000021e4  8fa30004	lw	r3,4(r29)
 1581  000021e8  8fdffff8	lw	r31,-8(r30)
 1582  000021ec  001ee820	add	r29,r0,r30
 1583  000021f0  8fdefffc	lw	r30,-4(r30)
 1584  000021f4  4be00000	jr	r31
 1585  000021f8  54000000	nop
 1586  000021fc          	.endproc _bcopy
 1587  000021fc          	.align 2
 1588  000021fc          	.proc _bzero
 1589  000021fc          	.global _bzero
 1590  000021fc          	_bzero:
 1591                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1592  000021fc  afbefffc	sw	-4(r29),r30; push fp
 1593  00002200  001df020	add	r30,r0,r29; fp = sp
 1594  00002204  afbffff8	sw	-8(r29),r31; push ret addr
 1595  00002208  2fbd0010	subui	r29,r29,#16; alloc local storage
 1596  0000220c  afa20000	sw	0(r29),r2
 1597  00002210  54000000	nop
 1598  00002214          	L105_LF2:
 1599  00002214  8fc10004	lw	r1,4(r30)
 1600  00002218  2022ffff	addi	r2,r1,#-1
 1601  0000221c  afc20004	sw	4(r30),r2
 1602  00002220  6c210000	sgti	r1,r1,#0
 1603  00002224  1420000c	bnez	r1,L107_LF2
 1604  00002228  54000000	nop; delay slot nop
 1605  0000222c  08000020	j	L106_LF2
 1606  00002230  54000000	nop; delay slot nop
 1607  00002234          	L107_LF2:
 1608  00002234  8fc10000	lw	r1,(r30)
 1609  00002238  20220001	addi	r2,r1,#1
 1610  0000223c  afc20000	sw	(r30),r2
 1611  00002240  20020000	addi	r2,r0,(#0x0)&0xff
 1612  00002244  a0220000	sb	(r1),r2
 1613  00002248  0bffffc8	j	L105_LF2
 1614  0000224c  54000000	nop; delay slot nop
 1615  00002250          	L106_LF2:
 1616  00002250          	L104_LF2:
 1617  00002250  8fa20000	lw	r2,0(r29)
 1618  00002254  8fdffff8	lw	r31,-8(r30)
 1619  00002258  001ee820	add	r29,r0,r30
 1620  0000225c  8fdefffc	lw	r30,-4(r30)
 1621  00002260  4be00000	jr	r31
 1622  00002264  54000000	nop
 1623  00002268          	.endproc _bzero
 1624  00002268          	.align 2
 1625  00002268          	.proc _min
 1626  00002268          	.global _min
 1627  00002268          	_min:
 1628                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1629  00002268  afbefffc	sw	-4(r29),r30; push fp
 1630  0000226c  001df020	add	r30,r0,r29; fp = sp
 1631  00002270  afbffff8	sw	-8(r29),r31; push ret addr
 1632  00002274  2fbd0010	subui	r29,r29,#16; alloc local storage
 1633  00002278  afa20000	sw	0(r29),r2
 1634  0000227c  afa30004	sw	4(r29),r3
 1635  00002280  8fc10000	lw	r1,(r30)
 1636  00002284  8fc20004	lw	r2,4(r30)
 1637  00002288  0022182c	sle	r3,r1,r2
 1638  0000228c  14600008	bnez	r3,L109_LF2
 1639  00002290  54000000	nop; delay slot nop
 1640  00002294  8fc10004	lw	r1,4(r30)
 1641  00002298          	L109_LF2:
 1642  00002298  08000004	j	L108_LF2
 1643  0000229c  54000000	nop; delay slot nop
 1644  000022a0          	L108_LF2:
 1645  000022a0  8fa20000	lw	r2,0(r29)
 1646  000022a4  8fa30004	lw	r3,4(r29)
 1647  000022a8  8fdffff8	lw	r31,-8(r30)
 1648  000022ac  001ee820	add	r29,r0,r30
 1649  000022b0  8fdefffc	lw	r30,-4(r30)
 1650  000022b4  4be00000	jr	r31
 1651  000022b8  54000000	nop
 1652  000022bc          	.endproc _min
 1653  000022bc          	.align 2
 1654  000022bc          	.proc _max
 1655  000022bc          	.global _max
 1656  000022bc          	_max:
 1657                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1658  000022bc  afbefffc	sw	-4(r29),r30; push fp
 1659  000022c0  001df020	add	r30,r0,r29; fp = sp
 1660  000022c4  afbffff8	sw	-8(r29),r31; push ret addr
 1661  000022c8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1662  000022cc  afa20000	sw	0(r29),r2
 1663  000022d0  afa30004	sw	4(r29),r3
 1664  000022d4  8fc10000	lw	r1,(r30)
 1665  000022d8  8fc20004	lw	r2,4(r30)
 1666  000022dc  0022182d	sge	r3,r1,r2
 1667  000022e0  14600008	bnez	r3,L111_LF2
 1668  000022e4  54000000	nop; delay slot nop
 1669  000022e8  8fc10004	lw	r1,4(r30)
 1670  000022ec          	L111_LF2:
 1671  000022ec  08000004	j	L110_LF2
 1672  000022f0  54000000	nop; delay slot nop
 1673  000022f4          	L110_LF2:
 1674  000022f4  8fa20000	lw	r2,0(r29)
 1675  000022f8  8fa30004	lw	r3,4(r29)
 1676  000022fc  8fdffff8	lw	r31,-8(r30)
 1677  00002300  001ee820	add	r29,r0,r30
 1678  00002304  8fdefffc	lw	r30,-4(r30)
 1679  00002308  4be00000	jr	r31
 1680  0000230c  54000000	nop
 1681  00002310          	.endproc _max
 1682                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1683                      ;;;
 1684                      ;;; Most of the traps are called in files from libtraps.
 1687  00002310          	.align 2
 1688  00002310          	.proc _exit
 1689  00002310          	.global _exit
 1690  00002310          	_exit:
 1691  00002310  44000300	trap	#0x300
 1692  00002314  4be00000	jr	r31
 1693  00002318  54000000	nop
 1694  0000231c          	.endproc _exit
 1696                      ; for the benefit of gcc.
 1697  0000231c          	.proc ___main
 1698  0000231c          	.global ___main
 1699  0000231c          	___main:
 1700  0000231c  4be00000	jr	r31
 1701  00002320  54000000	nop
 1702  00002324          	.endproc ___main
 1703  00002324          	.text
 1704  00002324          	.global _etext
 1705  00002324          	_etext:
 1706  00002324          	.align 3
 1707  00002328          	.data
 1708  000031e6          	.global _edata
 1709  000031e6          	_edata:
