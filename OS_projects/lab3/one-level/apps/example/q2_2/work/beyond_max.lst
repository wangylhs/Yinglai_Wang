 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 212
    4                      ; Text size: 4364
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
   82  00003004  653a2025	
   82  00003008  73203c68	
   82  0000300c  616e646c	
   82  00003010  655f746f	
   82  00003014  5f70726f	
   82  00003018  63735f63	
   82  0000301c  6f6d706c	
   82  00003020  65746564	
   82  00003024  5f73656d	
   82  00003028  6170686f	
   82  0000302c  72653e0a	
   82  00003030  00      	
   83  00003031          	.align 2
   84  00003034          	LC1_LF0:
   85  00003034  6265796f	.ascii "beyond_max (%d): This program will access memory beyond max virtual ad"
   85  00003038  6e645f6d	
   85  0000303c  61782028	
   85  00003040  2564293a	
   85  00003044  20546869	
   85  00003048  73207072	
   85  0000304c  6f677261	
   85  00003050  6d207769	
   85  00003054  6c6c2061	
   85  00003058  63636573	
   85  0000305c  73206d65	
   85  00003060  6d6f7279	
   85  00003064  20626579	
   85  00003068  6f6e6420	
   85  0000306c  6d617820	
   85  00003070  76697274	
   85  00003074  75616c20	
   85  00003078  6164    	
   86  0000307a  64726573	.ascii "dress!\n\000"
   86  0000307e  73210a00	
   87  00003082          	.align 2
   88  00003084          	LC2_LF0:
   89  00003084  6265796f	.ascii "beyond_max (%d): Bad semaphore s_procs_completed (%d)!\n\000"
   89  00003088  6e645f6d	
   89  0000308c  61782028	
   89  00003090  2564293a	
   89  00003094  20426164	
   89  00003098  2073656d	
   89  0000309c  6170686f	
   89  000030a0  72652073	
   89  000030a4  5f70726f	
   89  000030a8  63735f63	
   89  000030ac  6f6d706c	
   89  000030b0  65746564	
   89  000030b4  20282564	
   89  000030b8  29210a00	
   90  000030bc          	.align 2
   91  000030bc          	LC3_LF0:
   92  000030bc  6265796f	.ascii "beyond_max (%d): Done!\n\000"
   92  000030c0  6e645f6d	
   92  000030c4  61782028	
   92  000030c8  2564293a	
   92  000030cc  20446f6e	
   92  000030d0  65210a00	
   93  000030d4          	.text
   94  000010d4          	.align 2
   95  000010d4          	.proc _main
   96  000010d4          	.global _main
   97  000010d4          	_main:
   98                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
   99  000010d4  afbefffc	sw	-4(r29),r30; push fp
  100  000010d8  001df020	add	r30,r0,r29; fp = sp
  101  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  102  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  103  000010e4  8fc20000	lw	r2,(r30)
  104  000010e8  8fc30004	lw	r3,4(r30)
  105  000010ec  0c001014	jal	___main
  106  000010f0  54000000	nop; not filled.
  107  000010f4  64410002	snei	r1,r2,#2
  108  000010f8  10200028	beqz	r1,L17_LF0
  109  000010fc  54000000	nop; not filled.
  110  00001100  23bdfff8	addi	r29,r29,#-8
  111  00001104  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  112  00001108  24843000	addui	r4,r4,(LC0_LF0)&0xffff
  113  0000110c  afa40000	sw	(r29),r4
  114  00001110  0c000130	jal	_Printf
  115  00001114  54000000	nop; not filled.
  116  00001118  0c000230	jal	_Exit
  117  0000111c  54000000	nop; not filled.
  118  00001120  23bd0008	addi	r29,r29,#8
  119  00001124          	L17_LF0:
  120  00001124  23bdfff0	addi	r29,r29,#-16
  121  00001128  8c630004	lw	r3,4(r3)
  122  0000112c  afa30000	sw	(r29),r3
  123  00001130  20040000	addi	r4,r0,#0
  124  00001134  afa40004	sw	4(r29),r4
  125  00001138  2004000a	addi	r4,r0,#10
  126  0000113c  afa40008	sw	8(r29),r4
  127  00001140  0c000ac4	jal	_dstrtol
  128  00001144  54000000	nop; not filled.
  129  00001148  00011020	add	r2,r0,r1
  130  0000114c  0c000100	jal	_getpid
  131  00001150  54000000	nop; not filled.
  132  00001154  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  133  00001158  24843034	addui	r4,r4,(LC1_LF0)&0xffff
  134  0000115c  afa40000	sw	(r29),r4
  135  00001160  afa10004	sw	4(r29),r1
  136  00001164  0c0000dc	jal	_Printf
  137  00001168  54000000	nop; not filled.
  138  0000116c  afa20000	sw	(r29),r2
  139  00001170  0c000124	jal	_sem_signal
  140  00001174  54000000	nop; not filled.
  141  00001178  23bd0010	addi	r29,r29,#16
  142  0000117c  64210001	snei	r1,r1,#1
  143  00001180  10200038	beqz	r1,L18_LF0
  144  00001184  54000000	nop; not filled.
  145  00001188  0c0000c4	jal	_getpid
  146  0000118c  54000000	nop; not filled.
  147  00001190  23bdfff0	addi	r29,r29,#-16
  148  00001194  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  149  00001198  24843084	addui	r4,r4,(LC2_LF0)&0xffff
  150  0000119c  afa40000	sw	(r29),r4
  151  000011a0  afa10004	sw	4(r29),r1
  152  000011a4  afa20008	sw	8(r29),r2
  153  000011a8  0c000098	jal	_Printf
  154  000011ac  54000000	nop; not filled.
  155  000011b0  0c000198	jal	_Exit
  156  000011b4  54000000	nop; not filled.
  157  000011b8  23bd0010	addi	r29,r29,#16
  158  000011bc          	L18_LF0:
  159  000011bc  3c01002f	lhi	r1,#47
  160  000011c0  2421ffff	addui	r1,r1,#65535
  161  000011c4  20040002	addi	r4,r0,(#0x2)&0xff
  162  000011c8  a0240000	sb	(r1),r4
  163  000011cc  0c000080	jal	_getpid
  164  000011d0  54000000	nop; not filled.
  165  000011d4  23bdfff8	addi	r29,r29,#-8
  166  000011d8  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  167  000011dc  248430bc	addui	r4,r4,(LC3_LF0)&0xffff
  168  000011e0  afa40000	sw	(r29),r4
  169  000011e4  afa10004	sw	4(r29),r1
  170  000011e8  0c000058	jal	_Printf
  171  000011ec  54000000	nop; not filled.
  172  000011f0  23bd0008	addi	r29,r29,#8
  173  000011f4  0c000f00	jal	_exit
  174  000011f8  54000000	nop
  175  000011fc          	.endproc _main
  176                      ;;;
  177                      ;;; Stub functions for DLX traps.
  178                      ;;;
  179                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  180                      ;;;
  181                      ;;; The traps such as Open and Close
  182                      ;;; (note the capital letters) are for use by user programs.  The traps
  183                      ;;; with names such as open and close (lower case) are for use by the OS.
  184                      ;;;
  187  000011fc          	.align 2
  189                      ;;; The following are the traps to be used by user-level programs
  190                      ;;;
  192  000011fc          	.align 2
  193  000011fc          	.proc _Open
  194  000011fc          	.global _Open
  195  000011fc          	_Open:
  196                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  197                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  198                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  199  000011fc  44000213	trap	#0x213
  200  00001200  4be00000	jr	r31
  201  00001204  54000000	nop
  202  00001208          	.endproc _Open
  204  00001208          	.proc _Close
  205  00001208          	.global _Close
  206  00001208          	_Close:
  207  00001208  44000214	trap	#0x214
  208  0000120c  4be00000	jr	r31
  209  00001210  54000000	nop
  210  00001214          	.endproc _Close
  212  00001214          	.proc _Read
  213  00001214          	.global _Read
  214  00001214          	_Read:
  215  00001214  44000210	trap	#0x210
  216  00001218  4be00000	jr	r31
  217  0000121c  54000000	nop
  218  00001220          	.endproc _Read
  220  00001220          	.proc _Write
  221  00001220          	.global _Write
  222  00001220          	_Write:
  223  00001220  44000211	trap	#0x211
  224  00001224  4be00000	jr	r31
  225  00001228  54000000	nop
  226  0000122c          	.endproc _Write
  228  0000122c          	.proc _Lseek
  229  0000122c          	.global _Lseek
  230  0000122c          	_Lseek:
  231  0000122c  44000212	trap	#0x212
  232  00001230  4be00000	jr	r31
  233  00001234  54000000	nop
  234  00001238          	.endproc _Lseek
  236  00001238          	.proc _Putchar
  237  00001238          	.global _Putchar
  238  00001238          	_Putchar:
  239  00001238  44000280	trap	#0x280
  240  0000123c  4be00000	jr	r31
  241  00001240  54000000	nop
  242  00001244          	.endproc _Putchar
  244  00001244          	.proc _Printf
  245  00001244          	.global _Printf
  246  00001244          	_Printf:
  247  00001244  44000201	trap	#0x201
  248  00001248  4be00000	jr	r31
  249  0000124c  54000000	nop
  250  00001250          	.endproc _Printf
  252  00001250          	.proc _getpid
  253  00001250          	.global _getpid
  254  00001250          	_getpid:
  255  00001250  44000431	trap	#0x431
  256  00001254  4be00000	jr	r31
  257  00001258  54000000	nop
  258  0000125c          	.endproc _getpid
  260  0000125c          	.proc _process_create
  261  0000125c          	.global _process_create
  262  0000125c          	_process_create:
  263  0000125c  44000432	trap	#0x432
  264  00001260  4be00000	jr	r31
  265  00001264  54000000	nop
  266  00001268          	.endproc _process_create
  268  00001268          	.proc _shmget
  269  00001268          	.global _shmget
  270  00001268          	_shmget:
  271  00001268  44000440	trap	#0x440
  272  0000126c  4be00000	jr	r31
  273  00001270  54000000	nop
  274  00001274          	.endproc _shmget
  276  00001274          	.proc _shmat
  277  00001274          	.global _shmat
  278  00001274          	_shmat:
  279  00001274  44000441	trap	#0x441
  280  00001278  4be00000	jr	r31
  281  0000127c  54000000	nop
  282  00001280          	.endproc _shmat
  284  00001280          	.proc _sem_create
  285  00001280          	.global _sem_create
  286  00001280          	_sem_create:
  287  00001280  44000450	trap	#0x450
  288  00001284  4be00000	jr	r31
  289  00001288  54000000	nop
  290  0000128c          	.endproc _sem_create
  292  0000128c          	.proc _sem_wait
  293  0000128c          	.global _sem_wait
  294  0000128c          	_sem_wait:
  295  0000128c  44000451	trap	#0x451
  296  00001290  4be00000	jr	r31
  297  00001294  54000000	nop
  298  00001298          	.endproc _sem_wait
  300  00001298          	.proc _sem_signal
  301  00001298          	.global _sem_signal
  302  00001298          	_sem_signal:
  303  00001298  44000452	trap	#0x452
  304  0000129c  4be00000	jr	r31
  305  000012a0  54000000	nop
  306  000012a4          	.endproc _sem_signal
  308  000012a4          	.proc _lock_create
  309  000012a4          	.global _lock_create
  310  000012a4          	_lock_create:
  311  000012a4  44000453	trap	#0x453
  312  000012a8  4be00000	jr	r31
  313  000012ac  54000000	nop
  314  000012b0          	.endproc _lock_create
  316  000012b0          	.proc _lock_acquire
  317  000012b0          	.global _lock_acquire
  318  000012b0          	_lock_acquire:
  319  000012b0  44000454	trap	#0x454
  320  000012b4  4be00000	jr	r31
  321  000012b8  54000000	nop
  322  000012bc          	.endproc _lock_acquire
  324  000012bc          	.proc _lock_release
  325  000012bc          	.global _lock_release
  326  000012bc          	_lock_release:
  327  000012bc  44000455	trap	#0x455
  328  000012c0  4be00000	jr	r31
  329  000012c4  54000000	nop
  330  000012c8          	.endproc _lock_release
  332  000012c8          	.proc _cond_create
  333  000012c8          	.global _cond_create
  334  000012c8          	_cond_create:
  335  000012c8  44000456	trap	#0x456
  336  000012cc  4be00000	jr	r31
  337  000012d0  54000000	nop
  338  000012d4          	.endproc _cond_create
  340  000012d4          	.proc _cond_wait
  341  000012d4          	.global _cond_wait
  342  000012d4          	_cond_wait:
  343  000012d4  44000457	trap	#0x457
  344  000012d8  4be00000	jr	r31
  345  000012dc  54000000	nop
  346  000012e0          	.endproc _cond_wait
  348  000012e0          	.proc _cond_signal
  349  000012e0          	.global _cond_signal
  350  000012e0          	_cond_signal:
  351  000012e0  44000458	trap	#0x458
  352  000012e4  4be00000	jr	r31
  353  000012e8  54000000	nop
  354  000012ec          	.endproc _cond_signal
  356  000012ec          	.proc _cond_broadcast
  357  000012ec          	.global _cond_broadcast
  358  000012ec          	_cond_broadcast:
  359  000012ec  44000459	trap	#0x459
  360  000012f0  4be00000	jr	r31
  361  000012f4  54000000	nop
  362  000012f8          	.endproc _cond_broadcast
  364  000012f8          	.proc _mbox_create
  365  000012f8          	.global _mbox_create
  366  000012f8          	_mbox_create:
  367  000012f8  44000460	trap	#0x460
  368  000012fc  4be00000	jr	r31
  369  00001300  54000000	nop
  370  00001304          	.endproc _mbox_create
  372  00001304          	.proc _mbox_open
  373  00001304          	.global _mbox_open
  374  00001304          	_mbox_open:
  375  00001304  44000461	trap	#0x461
  376  00001308  4be00000	jr	r31
  377  0000130c  54000000	nop
  378  00001310          	.endproc _mbox_open
  380  00001310          	.proc _mbox_close
  381  00001310          	.global _mbox_close
  382  00001310          	_mbox_close:
  383  00001310  44000462	trap	#0x462
  384  00001314  4be00000	jr	r31
  385  00001318  54000000	nop
  386  0000131c          	.endproc _mbox_close
  388  0000131c          	.proc _mbox_send
  389  0000131c          	.global _mbox_send
  390  0000131c          	_mbox_send:
  391  0000131c  44000463	trap	#0x463
  392  00001320  4be00000	jr	r31
  393  00001324  54000000	nop
  394  00001328          	.endproc _mbox_send
  396  00001328          	.proc _mbox_recv
  397  00001328          	.global _mbox_recv
  398  00001328          	_mbox_recv:
  399  00001328  44000464	trap	#0x464
  400  0000132c  4be00000	jr	r31
  401  00001330  54000000	nop
  402  00001334          	.endproc _mbox_recv
  404  00001334          	.proc _sleep
  405  00001334          	.global _sleep
  406  00001334          	_sleep:
  407  00001334  44000465	trap	#0x465
  408  00001338  4be00000	jr	r31
  409  0000133c  54000000	nop
  410  00001340          	.endproc _sleep
  412  00001340          	.proc _yield
  413  00001340          	.global _yield
  414  00001340          	_yield:
  415  00001340  44000466	trap	#0x466
  416  00001344  4be00000	jr	r31
  417  00001348  54000000	nop
  418  0000134c          	.endproc _yield
  421  0000134c          	.proc _Exit
  422  0000134c          	.global _Exit
  423  0000134c          	_Exit:
  424  0000134c  44000500	trap	#0x500
  425  00001350  4be00000	jr	r31
  426  00001354  54000000	nop
  427  00001358          	.endproc _Exit
  430  00001358          	.proc _malloc
  431  00001358          	.global _malloc
  432  00001358          	_malloc:
  433  00001358  44000467	trap	#0x467
  434  0000135c  4be00000	jr	r31
  435  00001360          	.endproc _malloc
  438  00001360          	.proc _mfree
  439  00001360          	.global _mfree
  440  00001360          	_mfree:
  441  00001360  44000468	trap	#0x468
  442  00001364  4be00000	jr	r31
  443  00001368          	.endproc _mfree
  444                      ; Compiled by GCC
  446  00001368          	.align 2
  447  00001368          	.proc _isspace
  448  00001368          	.global _isspace
  449  00001368          	_isspace:
  450                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  451  00001368  afbefffc	sw	-4(r29),r30; push fp
  452  0000136c  001df020	add	r30,r0,r29; fp = sp
  453  00001370  afbffff8	sw	-8(r29),r31; push ret addr
  454  00001374  2fbd0018	subui	r29,r29,#24; alloc local storage
  455  00001378  afa20000	sw	0(r29),r2
  456  0000137c  afa30004	sw	4(r29),r3
  457  00001380  afa40008	sw	8(r29),r4
  458  00001384  83c20003	lb	r2,3(r30)
  459  00001388  20010000	addi	r1,r0,#0
  460  0000138c  304300ff	andi	r3,r2,#0x00ff
  461  00001390  60640020	seqi	r4,r3,#32
  462  00001394  1480002c	bnez	r4,L3_LF2
  463  00001398  54000000	nop; delay slot nop
  464  0000139c  304300ff	andi	r3,r2,#0x00ff
  465  000013a0  60640009	seqi	r4,r3,#9
  466  000013a4  1480001c	bnez	r4,L3_LF2
  467  000013a8  54000000	nop; delay slot nop
  468  000013ac  304300ff	andi	r3,r2,#0x00ff
  469  000013b0  6064000a	seqi	r4,r3,#10
  470  000013b4  1480000c	bnez	r4,L3_LF2
  471  000013b8  54000000	nop; delay slot nop
  472  000013bc  08000008	j	L2_LF2
  473  000013c0  54000000	nop; delay slot nop
  474  000013c4          	L3_LF2:
  475  000013c4  20010001	addi	r1,r0,#1
  476  000013c8          	L2_LF2:
  477  000013c8  08000004	j	L1_LF2
  478  000013cc  54000000	nop; delay slot nop
  479  000013d0          	L1_LF2:
  480  000013d0  8fa20000	lw	r2,0(r29)
  481  000013d4  8fa30004	lw	r3,4(r29)
  482  000013d8  8fa40008	lw	r4,8(r29)
  483  000013dc  8fdffff8	lw	r31,-8(r30)
  484  000013e0  001ee820	add	r29,r0,r30
  485  000013e4  8fdefffc	lw	r30,-4(r30)
  486  000013e8  4be00000	jr	r31
  487  000013ec  54000000	nop
  488  000013f0          	.endproc _isspace
  489  000013f0          	.align 2
  490  000013f0          	.proc _isxdigit
  491  000013f0          	.global _isxdigit
  492  000013f0          	_isxdigit:
  493                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  494  000013f0  afbefffc	sw	-4(r29),r30; push fp
  495  000013f4  001df020	add	r30,r0,r29; fp = sp
  496  000013f8  afbffff8	sw	-8(r29),r31; push ret addr
  497  000013fc  2fbd0018	subui	r29,r29,#24; alloc local storage
  498  00001400  afa20000	sw	0(r29),r2
  499  00001404  afa30004	sw	4(r29),r3
  500  00001408  afa40008	sw	8(r29),r4
  501  0000140c  83c20003	lb	r2,3(r30)
  502  00001410  20010000	addi	r1,r0,#0
  503  00001414  304300ff	andi	r3,r2,#0x00ff
  504  00001418  6c64002f	sgtui	r4,r3,#47
  505  0000141c  1080001c	beqz	r4,L7_LF2
  506  00001420  54000000	nop; delay slot nop
  507  00001424  304300ff	andi	r3,r2,#0x00ff
  508  00001428  70640039	sleui	r4,r3,#57
  509  0000142c  1480005c	bnez	r4,L6_LF2
  510  00001430  54000000	nop; delay slot nop
  511  00001434  08000004	j	L7_LF2
  512  00001438  54000000	nop; delay slot nop
  513  0000143c          	L7_LF2:
  514  0000143c  304300ff	andi	r3,r2,#0x00ff
  515  00001440  6c640060	sgtui	r4,r3,#96
  516  00001444  1080001c	beqz	r4,L8_LF2
  517  00001448  54000000	nop; delay slot nop
  518  0000144c  304300ff	andi	r3,r2,#0x00ff
  519  00001450  70640066	sleui	r4,r3,#102
  520  00001454  14800034	bnez	r4,L6_LF2
  521  00001458  54000000	nop; delay slot nop
  522  0000145c  08000004	j	L8_LF2
  523  00001460  54000000	nop; delay slot nop
  524  00001464          	L8_LF2:
  525  00001464  304300ff	andi	r3,r2,#0x00ff
  526  00001468  6c640040	sgtui	r4,r3,#64
  527  0000146c  10800020	beqz	r4,L5_LF2
  528  00001470  54000000	nop; delay slot nop
  529  00001474  304300ff	andi	r3,r2,#0x00ff
  530  00001478  70640041	sleui	r4,r3,#65
  531  0000147c  1480000c	bnez	r4,L6_LF2
  532  00001480  54000000	nop; delay slot nop
  533  00001484  08000008	j	L5_LF2
  534  00001488  54000000	nop; delay slot nop
  535  0000148c          	L6_LF2:
  536  0000148c  20010001	addi	r1,r0,#1
  537  00001490          	L5_LF2:
  538  00001490  08000004	j	L4_LF2
  539  00001494  54000000	nop; delay slot nop
  540  00001498          	L4_LF2:
  541  00001498  8fa20000	lw	r2,0(r29)
  542  0000149c  8fa30004	lw	r3,4(r29)
  543  000014a0  8fa40008	lw	r4,8(r29)
  544  000014a4  8fdffff8	lw	r31,-8(r30)
  545  000014a8  001ee820	add	r29,r0,r30
  546  000014ac  8fdefffc	lw	r30,-4(r30)
  547  000014b0  4be00000	jr	r31
  548  000014b4  54000000	nop
  549  000014b8          	.endproc _isxdigit
  550  000014b8          	.align 2
  551  000014b8          	.proc _dstrcpy
  552  000014b8          	.global _dstrcpy
  553  000014b8          	_dstrcpy:
  554                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  555  000014b8  afbefffc	sw	-4(r29),r30; push fp
  556  000014bc  001df020	add	r30,r0,r29; fp = sp
  557  000014c0  afbffff8	sw	-8(r29),r31; push ret addr
  558  000014c4  2fbd0018	subui	r29,r29,#24; alloc local storage
  559  000014c8  afa20000	sw	0(r29),r2
  560  000014cc  afa30004	sw	4(r29),r3
  561  000014d0  8fc10000	lw	r1,(r30)
  562  000014d4  afc1fff4	sw	-12(r30),r1
  563  000014d8          	L10_LF2:
  564  000014d8  8fc10000	lw	r1,(r30)
  565  000014dc  20220001	addi	r2,r1,#1
  566  000014e0  afc20000	sw	(r30),r2
  567  000014e4  8fc20004	lw	r2,4(r30)
  568  000014e8  20430001	addi	r3,r2,#1
  569  000014ec  afc30004	sw	4(r30),r3
  570  000014f0  80420000	lb	r2,(r2)
  571  000014f4  a0220000	sb	(r1),r2
  572  000014f8  a3c2fff3	sb	-13(r30),r2
  573  000014fc          	L12_LF2:
  574  000014fc  93c1fff3	lbu	r1,-13(r30)
  575  00001500  64220000	snei	r2,r1,#0
  576  00001504  1440000c	bnez	r2,L13_LF2
  577  00001508  54000000	nop; delay slot nop
  578  0000150c  0800000c	j	L11_LF2
  579  00001510  54000000	nop; delay slot nop
  580  00001514          	L13_LF2:
  581  00001514  0bffffc0	j	L10_LF2
  582  00001518  54000000	nop; delay slot nop
  583  0000151c          	L11_LF2:
  584  0000151c  8fc1fff4	lw	r1,-12(r30)
  585  00001520  08000004	j	L9_LF2
  586  00001524  54000000	nop; delay slot nop
  587  00001528          	L9_LF2:
  588  00001528  8fa20000	lw	r2,0(r29)
  589  0000152c  8fa30004	lw	r3,4(r29)
  590  00001530  8fdffff8	lw	r31,-8(r30)
  591  00001534  001ee820	add	r29,r0,r30
  592  00001538  8fdefffc	lw	r30,-4(r30)
  593  0000153c  4be00000	jr	r31
  594  00001540  54000000	nop
  595  00001544          	.endproc _dstrcpy
  596  00001544          	.align 2
  597  00001544          	.proc _dstrncpy
  598  00001544          	.global _dstrncpy
  599  00001544          	_dstrncpy:
  600                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  601  00001544  afbefffc	sw	-4(r29),r30; push fp
  602  00001548  001df020	add	r30,r0,r29; fp = sp
  603  0000154c  afbffff8	sw	-8(r29),r31; push ret addr
  604  00001550  2fbd0018	subui	r29,r29,#24; alloc local storage
  605  00001554  afa20000	sw	0(r29),r2
  606  00001558  afa30004	sw	4(r29),r3
  607  0000155c  8fc10000	lw	r1,(r30)
  608  00001560  afc1fff4	sw	-12(r30),r1
  609  00001564          	L15_LF2:
  610  00001564  8fc10008	lw	r1,8(r30)
  611  00001568  2022ffff	addi	r2,r1,#-1
  612  0000156c  afc20008	sw	8(r30),r2
  613  00001570  70210000	slei	r1,r1,#0
  614  00001574  1020000c	beqz	r1,L18_LF2
  615  00001578  54000000	nop; delay slot nop
  616  0000157c  08000048	j	L16_LF2
  617  00001580  54000000	nop; delay slot nop
  618  00001584          	L18_LF2:
  619  00001584  8fc10000	lw	r1,(r30)
  620  00001588  20220001	addi	r2,r1,#1
  621  0000158c  afc20000	sw	(r30),r2
  622  00001590  8fc20004	lw	r2,4(r30)
  623  00001594  20430001	addi	r3,r2,#1
  624  00001598  afc30004	sw	4(r30),r3
  625  0000159c  80420000	lb	r2,(r2)
  626  000015a0  a0220000	sb	(r1),r2
  627  000015a4  a3c2fff3	sb	-13(r30),r2
  628  000015a8          	L17_LF2:
  629  000015a8  93c1fff3	lbu	r1,-13(r30)
  630  000015ac  64220000	snei	r2,r1,#0
  631  000015b0  1440000c	bnez	r2,L19_LF2
  632  000015b4  54000000	nop; delay slot nop
  633  000015b8  0800000c	j	L16_LF2
  634  000015bc  54000000	nop; delay slot nop
  635  000015c0          	L19_LF2:
  636  000015c0  0bffffa0	j	L15_LF2
  637  000015c4  54000000	nop; delay slot nop
  638  000015c8          	L16_LF2:
  639  000015c8  8fc1fff4	lw	r1,-12(r30)
  640  000015cc  08000004	j	L14_LF2
  641  000015d0  54000000	nop; delay slot nop
  642  000015d4          	L14_LF2:
  643  000015d4  8fa20000	lw	r2,0(r29)
  644  000015d8  8fa30004	lw	r3,4(r29)
  645  000015dc  8fdffff8	lw	r31,-8(r30)
  646  000015e0  001ee820	add	r29,r0,r30
  647  000015e4  8fdefffc	lw	r30,-4(r30)
  648  000015e8  4be00000	jr	r31
  649  000015ec  54000000	nop
  650  000015f0          	.endproc _dstrncpy
  651  000015f0          	.align 2
  652  000015f0          	.proc _dstrcat
  653  000015f0          	.global _dstrcat
  654  000015f0          	_dstrcat:
  655                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  656  000015f0  afbefffc	sw	-4(r29),r30; push fp
  657  000015f4  001df020	add	r30,r0,r29; fp = sp
  658  000015f8  afbffff8	sw	-8(r29),r31; push ret addr
  659  000015fc  2fbd0018	subui	r29,r29,#24; alloc local storage
  660  00001600  afa20000	sw	0(r29),r2
  661  00001604  8fc10000	lw	r1,(r30)
  662  00001608  afc1fff4	sw	-12(r30),r1
  663  0000160c          	L21_LF2:
  664  0000160c  8fc10000	lw	r1,(r30)
  665  00001610  90220000	lbu	r2,(r1)
  666  00001614  64410000	snei	r1,r2,#0
  667  00001618  1420000c	bnez	r1,L23_LF2
  668  0000161c  54000000	nop; delay slot nop
  669  00001620  0800001c	j	L22_LF2
  670  00001624  54000000	nop; delay slot nop
  671  00001628          	L23_LF2:
  672  00001628  8fc20000	lw	r2,(r30)
  673  0000162c  20410001	addi	r1,r2,#1
  674  00001630  00011020	add	r2,r0,r1
  675  00001634  afc20000	sw	(r30),r2
  676  00001638  0bffffd0	j	L21_LF2
  677  0000163c  54000000	nop; delay slot nop
  678  00001640          	L22_LF2:
  679  00001640  23bdfff8	addi	r29,r29,#-8
  680  00001644  001d0820	add	r1,r0,r29
  681  00001648  8fc20000	lw	r2,(r30)
  682  0000164c  ac220000	sw	(r1),r2
  683  00001650  8fc20004	lw	r2,4(r30)
  684  00001654  ac220004	sw	4(r1),r2
  685  00001658  0ffffe5c	jal	_dstrcpy
  686  0000165c  54000000	nop; delay slot nop
  687  00001660  23bd0008	addi	r29,r29,#8
  688  00001664  8fc1fff4	lw	r1,-12(r30)
  689  00001668  08000004	j	L20_LF2
  690  0000166c  54000000	nop; delay slot nop
  691  00001670          	L20_LF2:
  692  00001670  8fa20000	lw	r2,0(r29)
  693  00001674  8fdffff8	lw	r31,-8(r30)
  694  00001678  001ee820	add	r29,r0,r30
  695  0000167c  8fdefffc	lw	r30,-4(r30)
  696  00001680  4be00000	jr	r31
  697  00001684  54000000	nop
  698  00001688          	.endproc _dstrcat
  699  00001688          	.align 2
  700  00001688          	.proc _dstrncmp
  701  00001688          	.global _dstrncmp
  702  00001688          	_dstrncmp:
  703                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  704  00001688  afbefffc	sw	-4(r29),r30; push fp
  705  0000168c  001df020	add	r30,r0,r29; fp = sp
  706  00001690  afbffff8	sw	-8(r29),r31; push ret addr
  707  00001694  2fbd0018	subui	r29,r29,#24; alloc local storage
  708  00001698  afa20000	sw	0(r29),r2
  709  0000169c  afa30004	sw	4(r29),r3
  710  000016a0  54000000	nop
  711  000016a4  20010000	addi	r1,r0,#0
  712  000016a8  afc1fff4	sw	-12(r30),r1
  713  000016ac          	L25_LF2:
  714  000016ac  8fc1fff4	lw	r1,-12(r30)
  715  000016b0  8fc20008	lw	r2,8(r30)
  716  000016b4  0022082a	slt	r1,r1,r2
  717  000016b8  1420000c	bnez	r1,L28_LF2
  718  000016bc  54000000	nop; delay slot nop
  719  000016c0  08000088	j	L26_LF2
  720  000016c4  54000000	nop; delay slot nop
  721  000016c8          	L28_LF2:
  722  000016c8  8fc10004	lw	r1,4(r30)
  723  000016cc  90220000	lbu	r2,(r1)
  724  000016d0  64410000	snei	r1,r2,#0
  725  000016d4  14200018	bnez	r1,L29_LF2
  726  000016d8  54000000	nop; delay slot nop
  727  000016dc  20010000	addi	r1,r0,#0
  728  000016e0  080000d8	j	L24_LF2
  729  000016e4  54000000	nop; delay slot nop
  730  000016e8  08000028	j	L30_LF2
  731  000016ec  54000000	nop; delay slot nop
  732  000016f0          	L29_LF2:
  733  000016f0  8fc10000	lw	r1,(r30)
  734  000016f4  8fc20004	lw	r2,4(r30)
  735  000016f8  90210000	lbu	r1,(r1)
  736  000016fc  90420000	lbu	r2,(r2)
  737  00001700  00220829	sne	r1,r1,r2
  738  00001704  1020000c	beqz	r1,L30_LF2
  739  00001708  54000000	nop; delay slot nop
  740  0000170c  0800003c	j	L26_LF2
  741  00001710  54000000	nop; delay slot nop
  742  00001714          	L31_LF2:
  743  00001714          	L30_LF2:
  744  00001714  8fc20000	lw	r2,(r30)
  745  00001718  20410001	addi	r1,r2,#1
  746  0000171c  00011020	add	r2,r0,r1
  747  00001720  afc20000	sw	(r30),r2
  748  00001724  8fc20004	lw	r2,4(r30)
  749  00001728  20410001	addi	r1,r2,#1
  750  0000172c  00011020	add	r2,r0,r1
  751  00001730  afc20004	sw	4(r30),r2
  752  00001734          	L27_LF2:
  753  00001734  8fc2fff4	lw	r2,-12(r30)
  754  00001738  20410001	addi	r1,r2,#1
  755  0000173c  00011020	add	r2,r0,r1
  756  00001740  afc2fff4	sw	-12(r30),r2
  757  00001744  0bffff64	j	L25_LF2
  758  00001748  54000000	nop; delay slot nop
  759  0000174c          	L26_LF2:
  760  0000174c  8fc1fff4	lw	r1,-12(r30)
  761  00001750  8fc20008	lw	r2,8(r30)
  762  00001754  00220828	seq	r1,r1,r2
  763  00001758  10200018	beqz	r1,L32_LF2
  764  0000175c  54000000	nop; delay slot nop
  765  00001760  20010000	addi	r1,r0,#0
  766  00001764  08000054	j	L24_LF2
  767  00001768  54000000	nop; delay slot nop
  768  0000176c  0800004c	j	L33_LF2
  769  00001770  54000000	nop; delay slot nop
  770  00001774          	L32_LF2:
  771  00001774  8fc20000	lw	r2,(r30)
  772  00001778  90410000	lbu	r1,(r2)
  773  0000177c  8fc20004	lw	r2,4(r30)
  774  00001780  90430000	lbu	r3,(r2)
  775  00001784  00230822	sub	r1,r1,r3
  776  00001788  74220000	sgei	r2,r1,#0
  777  0000178c  10400020	beqz	r2,L34_LF2
  778  00001790  54000000	nop; delay slot nop
  779  00001794  8fc10000	lw	r1,(r30)
  780  00001798  8fc20004	lw	r2,4(r30)
  781  0000179c  90210000	lbu	r1,(r1)
  782  000017a0  90420000	lbu	r2,(r2)
  783  000017a4  00220829	sne	r1,r1,r2
  784  000017a8  08000008	j	L35_LF2
  785  000017ac  54000000	nop; delay slot nop
  786  000017b0          	L34_LF2:
  787  000017b0  2001ffff	addi	r1,r0,#-1
  788  000017b4          	L35_LF2:
  789  000017b4  08000004	j	L24_LF2
  790  000017b8  54000000	nop; delay slot nop
  791  000017bc          	L33_LF2:
  792  000017bc          	L24_LF2:
  793  000017bc  8fa20000	lw	r2,0(r29)
  794  000017c0  8fa30004	lw	r3,4(r29)
  795  000017c4  8fdffff8	lw	r31,-8(r30)
  796  000017c8  001ee820	add	r29,r0,r30
  797  000017cc  8fdefffc	lw	r30,-4(r30)
  798  000017d0  4be00000	jr	r31
  799  000017d4  54000000	nop
  800  000017d8          	.endproc _dstrncmp
  801  000017d8          	.align 2
  802  000017d8          	.proc _dstrlen
  803  000017d8          	.global _dstrlen
  804  000017d8          	_dstrlen:
  805                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  806  000017d8  afbefffc	sw	-4(r29),r30; push fp
  807  000017dc  001df020	add	r30,r0,r29; fp = sp
  808  000017e0  afbffff8	sw	-8(r29),r31; push ret addr
  809  000017e4  2fbd0018	subui	r29,r29,#24; alloc local storage
  810  000017e8  afa20000	sw	0(r29),r2
  811  000017ec  20010000	addi	r1,r0,#0
  812  000017f0  afc1fff4	sw	-12(r30),r1
  813  000017f4          	L37_LF2:
  814  000017f4  8fc10000	lw	r1,(r30)
  815  000017f8  20220001	addi	r2,r1,#1
  816  000017fc  afc20000	sw	(r30),r2
  817  00001800  90210000	lbu	r1,(r1)
  818  00001804  64220000	snei	r2,r1,#0
  819  00001808  1440000c	bnez	r2,L39_LF2
  820  0000180c  54000000	nop; delay slot nop
  821  00001810  0800001c	j	L38_LF2
  822  00001814  54000000	nop; delay slot nop
  823  00001818          	L39_LF2:
  824  00001818  8fc2fff4	lw	r2,-12(r30)
  825  0000181c  20410001	addi	r1,r2,#1
  826  00001820  00011020	add	r2,r0,r1
  827  00001824  afc2fff4	sw	-12(r30),r2
  828  00001828  0bffffc8	j	L37_LF2
  829  0000182c  54000000	nop; delay slot nop
  830  00001830          	L38_LF2:
  831  00001830  8fc1fff4	lw	r1,-12(r30)
  832  00001834  08000004	j	L36_LF2
  833  00001838  54000000	nop; delay slot nop
  834  0000183c          	L36_LF2:
  835  0000183c  8fa20000	lw	r2,0(r29)
  836  00001840  8fdffff8	lw	r31,-8(r30)
  837  00001844  001ee820	add	r29,r0,r30
  838  00001848  8fdefffc	lw	r30,-4(r30)
  839  0000184c  4be00000	jr	r31
  840  00001850  54000000	nop
  841  00001854          	.endproc _dstrlen
  842  00001854          	.align 2
  843  00001854          	.proc _dstrstr
  844  00001854          	.global _dstrstr
  845  00001854          	_dstrstr:
  846                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  847  00001854  afbefffc	sw	-4(r29),r30; push fp
  848  00001858  001df020	add	r30,r0,r29; fp = sp
  849  0000185c  afbffff8	sw	-8(r29),r31; push ret addr
  850  00001860  2fbd0018	subui	r29,r29,#24; alloc local storage
  851  00001864  afa20000	sw	0(r29),r2
  852  00001868  23bdfff8	addi	r29,r29,#-8
  853  0000186c  001d0820	add	r1,r0,r29
  854  00001870  8fc20004	lw	r2,4(r30)
  855  00001874  ac220000	sw	(r1),r2
  856  00001878  0fffff5c	jal	_dstrlen
  857  0000187c  54000000	nop; delay slot nop
  858  00001880  23bd0008	addi	r29,r29,#8
  859  00001884  afc1fff4	sw	-12(r30),r1
  860  00001888          	L41_LF2:
  861  00001888  8fc10000	lw	r1,(r30)
  862  0000188c  90220000	lbu	r2,(r1)
  863  00001890  64410000	snei	r1,r2,#0
  864  00001894  1420000c	bnez	r1,L43_LF2
  865  00001898  54000000	nop; delay slot nop
  866  0000189c  08000060	j	L42_LF2
  867  000018a0  54000000	nop; delay slot nop
  868  000018a4          	L43_LF2:
  869  000018a4  23bdfff0	addi	r29,r29,#-16
  870  000018a8  001d0820	add	r1,r0,r29
  871  000018ac  8fc20000	lw	r2,(r30)
  872  000018b0  ac220000	sw	(r1),r2
  873  000018b4  8fc20004	lw	r2,4(r30)
  874  000018b8  ac220004	sw	4(r1),r2
  875  000018bc  8fc2fff4	lw	r2,-12(r30)
  876  000018c0  ac220008	sw	8(r1),r2
  877  000018c4  0ffffdc0	jal	_dstrncmp
  878  000018c8  54000000	nop; delay slot nop
  879  000018cc  23bd0010	addi	r29,r29,#16
  880  000018d0  64220000	snei	r2,r1,#0
  881  000018d4  14400010	bnez	r2,L44_LF2
  882  000018d8  54000000	nop; delay slot nop
  883  000018dc  8fc10000	lw	r1,(r30)
  884  000018e0  08000028	j	L40_LF2
  885  000018e4  54000000	nop; delay slot nop
  886  000018e8          	L44_LF2:
  887  000018e8  8fc20000	lw	r2,(r30)
  888  000018ec  20410001	addi	r1,r2,#1
  889  000018f0  00011020	add	r2,r0,r1
  890  000018f4  afc20000	sw	(r30),r2
  891  000018f8  0bffff8c	j	L41_LF2
  892  000018fc  54000000	nop; delay slot nop
  893  00001900          	L42_LF2:
  894  00001900  20010000	addi	r1,r0,#0
  895  00001904  08000004	j	L40_LF2
  896  00001908  54000000	nop; delay slot nop
  897  0000190c          	L40_LF2:
  898  0000190c  8fa20000	lw	r2,0(r29)
  899  00001910  8fdffff8	lw	r31,-8(r30)
  900  00001914  001ee820	add	r29,r0,r30
  901  00001918  8fdefffc	lw	r30,-4(r30)
  902  0000191c  4be00000	jr	r31
  903  00001920  54000000	nop
  904  00001924          	.endproc _dstrstr
  905  00001924          	.align 2
  906  00001924          	.proc _dmindex
  907  00001924          	.global _dmindex
  908  00001924          	_dmindex:
  909                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  910  00001924  afbefffc	sw	-4(r29),r30; push fp
  911  00001928  001df020	add	r30,r0,r29; fp = sp
  912  0000192c  afbffff8	sw	-8(r29),r31; push ret addr
  913  00001930  2fbd0018	subui	r29,r29,#24; alloc local storage
  914  00001934  afa20000	sw	0(r29),r2
  915  00001938  54000000	nop
  916  0000193c          	L46_LF2:
  917  0000193c  8fc10000	lw	r1,(r30)
  918  00001940  90220000	lbu	r2,(r1)
  919  00001944  64410000	snei	r1,r2,#0
  920  00001948  1420000c	bnez	r1,L48_LF2
  921  0000194c  54000000	nop; delay slot nop
  922  00001950  08000070	j	L47_LF2
  923  00001954  54000000	nop; delay slot nop
  924  00001958          	L48_LF2:
  925  00001958  8fc10004	lw	r1,4(r30)
  926  0000195c  afc1fff4	sw	-12(r30),r1
  927  00001960          	L49_LF2:
  928  00001960  8fc1fff4	lw	r1,-12(r30)
  929  00001964  90220000	lbu	r2,(r1)
  930  00001968  64410000	snei	r1,r2,#0
  931  0000196c  1420000c	bnez	r1,L52_LF2
  932  00001970  54000000	nop; delay slot nop
  933  00001974  08000044	j	L50_LF2
  934  00001978  54000000	nop; delay slot nop
  935  0000197c          	L52_LF2:
  936  0000197c  8fc10000	lw	r1,(r30)
  937  00001980  8fc2fff4	lw	r2,-12(r30)
  938  00001984  90210000	lbu	r1,(r1)
  939  00001988  90420000	lbu	r2,(r2)
  940  0000198c  00220828	seq	r1,r1,r2
  941  00001990  10200010	beqz	r1,L51_LF2
  942  00001994  54000000	nop; delay slot nop
  943  00001998  8fc10000	lw	r1,(r30)
  944  0000199c  08000030	j	L45_LF2
  945  000019a0  54000000	nop; delay slot nop
  946  000019a4          	L53_LF2:
  947  000019a4          	L51_LF2:
  948  000019a4  8fc2fff4	lw	r2,-12(r30)
  949  000019a8  20410001	addi	r1,r2,#1
  950  000019ac  00011020	add	r2,r0,r1
  951  000019b0  afc2fff4	sw	-12(r30),r2
  952  000019b4  0bffffa8	j	L49_LF2
  953  000019b8  54000000	nop; delay slot nop
  954  000019bc          	L50_LF2:
  955  000019bc  0bffff7c	j	L46_LF2
  956  000019c0  54000000	nop; delay slot nop
  957  000019c4          	L47_LF2:
  958  000019c4  20010000	addi	r1,r0,#0
  959  000019c8  08000004	j	L45_LF2
  960  000019cc  54000000	nop; delay slot nop
  961  000019d0          	L45_LF2:
  962  000019d0  8fa20000	lw	r2,0(r29)
  963  000019d4  8fdffff8	lw	r31,-8(r30)
  964  000019d8  001ee820	add	r29,r0,r30
  965  000019dc  8fdefffc	lw	r30,-4(r30)
  966  000019e0  4be00000	jr	r31
  967  000019e4  54000000	nop
  968  000019e8          	.endproc _dmindex
  969  000019e8          	.align 2
  970  000019e8          	.proc _dindex
  971  000019e8          	.global _dindex
  972  000019e8          	_dindex:
  973                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  974  000019e8  afbefffc	sw	-4(r29),r30; push fp
  975  000019ec  001df020	add	r30,r0,r29; fp = sp
  976  000019f0  afbffff8	sw	-8(r29),r31; push ret addr
  977  000019f4  2fbd0010	subui	r29,r29,#16; alloc local storage
  978  000019f8  afa20000	sw	0(r29),r2
  979  000019fc  54000000	nop
  980  00001a00          	L55_LF2:
  981  00001a00  8fc10000	lw	r1,(r30)
  982  00001a04  90220000	lbu	r2,(r1)
  983  00001a08  64410000	snei	r1,r2,#0
  984  00001a0c  1420000c	bnez	r1,L57_LF2
  985  00001a10  54000000	nop; delay slot nop
  986  00001a14  08000040	j	L56_LF2
  987  00001a18  54000000	nop; delay slot nop
  988  00001a1c          	L57_LF2:
  989  00001a1c  8fc10000	lw	r1,(r30)
  990  00001a20  90220000	lbu	r2,(r1)
  991  00001a24  8fc10004	lw	r1,4(r30)
  992  00001a28  00411028	seq	r2,r2,r1
  993  00001a2c  10400010	beqz	r2,L58_LF2
  994  00001a30  54000000	nop; delay slot nop
  995  00001a34  8fc10000	lw	r1,(r30)
  996  00001a38  08000028	j	L54_LF2
  997  00001a3c  54000000	nop; delay slot nop
  998  00001a40          	L58_LF2:
  999  00001a40  8fc20000	lw	r2,(r30)
 1000  00001a44  20410001	addi	r1,r2,#1
 1001  00001a48  00011020	add	r2,r0,r1
 1002  00001a4c  afc20000	sw	(r30),r2
 1003  00001a50  0bffffac	j	L55_LF2
 1004  00001a54  54000000	nop; delay slot nop
 1005  00001a58          	L56_LF2:
 1006  00001a58  20010000	addi	r1,r0,#0
 1007  00001a5c  08000004	j	L54_LF2
 1008  00001a60  54000000	nop; delay slot nop
 1009  00001a64          	L54_LF2:
 1010  00001a64  8fa20000	lw	r2,0(r29)
 1011  00001a68  8fdffff8	lw	r31,-8(r30)
 1012  00001a6c  001ee820	add	r29,r0,r30
 1013  00001a70  8fdefffc	lw	r30,-4(r30)
 1014  00001a74  4be00000	jr	r31
 1015  00001a78  54000000	nop
 1016  00001a7c          	.endproc _dindex
 1017  00001a7c          	.align 2
 1018  00001a7c          	.proc _ditoa
 1019  00001a7c          	.global _ditoa
 1020  00001a7c          	_ditoa:
 1021                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1022  00001a7c  afbefffc	sw	-4(r29),r30; push fp
 1023  00001a80  001df020	add	r30,r0,r29; fp = sp
 1024  00001a84  afbffff8	sw	-8(r29),r31; push ret addr
 1025  00001a88  2fbd0018	subui	r29,r29,#24; alloc local storage
 1026  00001a8c  afa20000	sw	0(r29),r2
 1027  00001a90  afa30004	sw	4(r29),r3
 1028  00001a94  8fc10000	lw	r1,(r30)
 1029  00001a98  68220000	slti	r2,r1,#0
 1030  00001a9c  1040002c	beqz	r2,L60_LF2
 1031  00001aa0  54000000	nop; delay slot nop
 1032  00001aa4  8fc10004	lw	r1,4(r30)
 1033  00001aa8  20220001	addi	r2,r1,#1
 1034  00001aac  afc20004	sw	4(r30),r2
 1035  00001ab0  2002002d	addi	r2,r0,(#0x2d)&0xff
 1036  00001ab4  a0220000	sb	(r1),r2
 1037  00001ab8  8fc10000	lw	r1,(r30)
 1038  00001abc  00011022	sub	r2,r0,r1
 1039  00001ac0  afc20000	sw	(r30),r2
 1040  00001ac4  08000118	j	L61_LF2
 1041  00001ac8  54000000	nop; delay slot nop
 1042  00001acc          	L60_LF2:
 1043  00001acc  8fc10000	lw	r1,(r30)
 1044  00001ad0  64220000	snei	r2,r1,#0
 1045  00001ad4  14400020	bnez	r2,L62_LF2
 1046  00001ad8  54000000	nop; delay slot nop
 1047  00001adc  8fc10004	lw	r1,4(r30)
 1048  00001ae0  20220001	addi	r2,r1,#1
 1049  00001ae4  afc20004	sw	4(r30),r2
 1050  00001ae8  20020030	addi	r2,r0,(#0x30)&0xff
 1051  00001aec  a0220000	sb	(r1),r2
 1052  00001af0  080000ec	j	L61_LF2
 1053  00001af4  54000000	nop; delay slot nop
 1054  00001af8          	L62_LF2:
 1055  00001af8  20010001	addi	r1,r0,#1
 1056  00001afc  afc1fff4	sw	-12(r30),r1
 1057  00001b00          	L64_LF2:
 1058  00001b00  8fc1fff4	lw	r1,-12(r30)
 1059  00001b04  8fc20000	lw	r2,(r30)
 1060  00001b08  0022082c	sle	r1,r1,r2
 1061  00001b0c  1420000c	bnez	r1,L66_LF2
 1062  00001b10  54000000	nop; delay slot nop
 1063  00001b14  08000024	j	L65_LF2
 1064  00001b18  54000000	nop; delay slot nop
 1065  00001b1c          	L67_LF2:
 1066  00001b1c          	L66_LF2:
 1067  00001b1c  8fc1fff4	lw	r1,-12(r30)
 1068  00001b20  00011820	add	r3,r0,r1
 1069  00001b24  50620002	slli	r2,r3,#0x2
 1070  00001b28  00411020	add	r2,r2,r1
 1071  00001b2c  50410001	slli	r1,r2,#0x1
 1072  00001b30  afc1fff4	sw	-12(r30),r1
 1073  00001b34  0bffffc8	j	L64_LF2
 1074  00001b38  54000000	nop; delay slot nop
 1075  00001b3c          	L65_LF2:
 1076  00001b3c  54000000	nop
 1077  00001b40          	L68_LF2:
 1078  00001b40  8fc1fff4	lw	r1,-12(r30)
 1079  00001b44  2002000a	addi	r2,r0,#10
 1080  00001b48  00200035	movi2fp	f0,r1
 1081  00001b4c  00400835	movi2fp	f1,r2
 1082  00001b50  0401000f	div	f0,f0,f1
 1083  00001b54  00000834	movfp2i	r1,f0
 1084  00001b58  afc1fff4	sw	-12(r30),r1
 1085  00001b5c  8fc10004	lw	r1,4(r30)
 1086  00001b60  20220001	addi	r2,r1,#1
 1087  00001b64  afc20004	sw	4(r30),r2
 1088  00001b68  8fc20000	lw	r2,(r30)
 1089  00001b6c  8fc3fff4	lw	r3,-12(r30)
 1090  00001b70  00400035	movi2fp	f0,r2
 1091  00001b74  00600835	movi2fp	f1,r3
 1092  00001b78  0401000f	div	f0,f0,f1
 1093  00001b7c  00001034	movfp2i	r2,f0
 1094  00001b80  00021820	add	r3,r0,r2
 1095  00001b84  20620030	addi	r2,r3,#48
 1096  00001b88  a0220000	sb	(r1),r2
 1097  00001b8c  8fc10000	lw	r1,(r30)
 1098  00001b90  8fc3fff4	lw	r3,-12(r30)
 1099  00001b94  00200035	movi2fp	f0,r1
 1100  00001b98  00600835	movi2fp	f1,r3
 1101  00001b9c  0401000f	div	f0,f0,f1
 1102  00001ba0  00001034	movfp2i	r2,f0
 1103  00001ba4  8fc3fff4	lw	r3,-12(r30)
 1104  00001ba8  00400035	movi2fp	f0,r2
 1105  00001bac  00600835	movi2fp	f1,r3
 1106  00001bb0  0401000e	mult	f0,f0,f1
 1107  00001bb4  00001034	movfp2i	r2,f0
 1108  00001bb8  00220822	sub	r1,r1,r2
 1109  00001bbc  afc10000	sw	(r30),r1
 1110  00001bc0          	L70_LF2:
 1111  00001bc0  8fc1fff4	lw	r1,-12(r30)
 1112  00001bc4  6c220001	sgti	r2,r1,#1
 1113  00001bc8  1440000c	bnez	r2,L71_LF2
 1114  00001bcc  54000000	nop; delay slot nop
 1115  00001bd0  0800000c	j	L61_LF2
 1116  00001bd4  54000000	nop; delay slot nop
 1117  00001bd8          	L71_LF2:
 1118  00001bd8  0bffff64	j	L68_LF2
 1119  00001bdc  54000000	nop; delay slot nop
 1120  00001be0          	L69_LF2:
 1121  00001be0          	L63_LF2:
 1122  00001be0          	L61_LF2:
 1123  00001be0  8fc10004	lw	r1,4(r30)
 1124  00001be4  20020000	addi	r2,r0,(#0x0)&0xff
 1125  00001be8  a0220000	sb	(r1),r2
 1126  00001bec          	L59_LF2:
 1127  00001bec  8fa20000	lw	r2,0(r29)
 1128  00001bf0  8fa30004	lw	r3,4(r29)
 1129  00001bf4  8fdffff8	lw	r31,-8(r30)
 1130  00001bf8  001ee820	add	r29,r0,r30
 1131  00001bfc  8fdefffc	lw	r30,-4(r30)
 1132  00001c00  4be00000	jr	r31
 1133  00001c04  54000000	nop
 1134  00001c08          	.endproc _ditoa
 1135  00001c08          	.align 2
 1136  00001c08          	.proc _dstrtol
 1137  00001c08          	.global _dstrtol
 1138  00001c08          	_dstrtol:
 1139                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1140  00001c08  afbefffc	sw	-4(r29),r30; push fp
 1141  00001c0c  001df020	add	r30,r0,r29; fp = sp
 1142  00001c10  afbffff8	sw	-8(r29),r31; push ret addr
 1143  00001c14  2fbd0020	subui	r29,r29,#32; alloc local storage
 1144  00001c18  afa20000	sw	0(r29),r2
 1145  00001c1c  20010000	addi	r1,r0,#0
 1146  00001c20  afc1fff4	sw	-12(r30),r1
 1147  00001c24          	L73_LF2:
 1148  00001c24  8fc10000	lw	r1,(r30)
 1149  00001c28  90220000	lbu	r2,(r1)
 1150  00001c2c  60410020	seqi	r1,r2,#32
 1151  00001c30  14200034	bnez	r1,L75_LF2
 1152  00001c34  54000000	nop; delay slot nop
 1153  00001c38  8fc10000	lw	r1,(r30)
 1154  00001c3c  90220000	lbu	r2,(r1)
 1155  00001c40  60410009	seqi	r1,r2,#9
 1156  00001c44  14200020	bnez	r1,L75_LF2
 1157  00001c48  54000000	nop; delay slot nop
 1158  00001c4c  8fc10000	lw	r1,(r30)
 1159  00001c50  90220000	lbu	r2,(r1)
 1160  00001c54  6041000a	seqi	r1,r2,#10
 1161  00001c58  1420000c	bnez	r1,L75_LF2
 1162  00001c5c  54000000	nop; delay slot nop
 1163  00001c60  0800001c	j	L74_LF2
 1164  00001c64  54000000	nop; delay slot nop
 1165  00001c68          	L75_LF2:
 1166  00001c68  8fc20000	lw	r2,(r30)
 1167  00001c6c  20410001	addi	r1,r2,#1
 1168  00001c70  00011020	add	r2,r0,r1
 1169  00001c74  afc20000	sw	(r30),r2
 1170  00001c78  0bffffa8	j	L73_LF2
 1171  00001c7c  54000000	nop; delay slot nop
 1172  00001c80          	L74_LF2:
 1173  00001c80  8fc10004	lw	r1,4(r30)
 1174  00001c84  64220000	snei	r2,r1,#0
 1175  00001c88  10400010	beqz	r2,L76_LF2
 1176  00001c8c  54000000	nop; delay slot nop
 1177  00001c90  8fc10004	lw	r1,4(r30)
 1178  00001c94  8fc20000	lw	r2,(r30)
 1179  00001c98  ac220000	sw	(r1),r2
 1180  00001c9c          	L76_LF2:
 1181  00001c9c  8fc10000	lw	r1,(r30)
 1182  00001ca0  90220000	lbu	r2,(r1)
 1183  00001ca4  64410000	snei	r1,r2,#0
 1184  00001ca8  14200010	bnez	r1,L77_LF2
 1185  00001cac  54000000	nop; delay slot nop
 1186  00001cb0  8fc1fff4	lw	r1,-12(r30)
 1187  00001cb4  08000294	j	L72_LF2
 1188  00001cb8  54000000	nop; delay slot nop
 1189  00001cbc          	L77_LF2:
 1190  00001cbc  8fc10000	lw	r1,(r30)
 1191  00001cc0  90220000	lbu	r2,(r1)
 1192  00001cc4  6041002d	seqi	r1,r2,#45
 1193  00001cc8  10200024	beqz	r1,L78_LF2
 1194  00001ccc  54000000	nop; delay slot nop
 1195  00001cd0  2001ffff	addi	r1,r0,#-1
 1196  00001cd4  afc1ffec	sw	-20(r30),r1
 1197  00001cd8  8fc20000	lw	r2,(r30)
 1198  00001cdc  20410001	addi	r1,r2,#1
 1199  00001ce0  00011020	add	r2,r0,r1
 1200  00001ce4  afc20000	sw	(r30),r2
 1201  00001ce8  0800000c	j	L79_LF2
 1202  00001cec  54000000	nop; delay slot nop
 1203  00001cf0          	L78_LF2:
 1204  00001cf0  20010001	addi	r1,r0,#1
 1205  00001cf4  afc1ffec	sw	-20(r30),r1
 1206  00001cf8          	L79_LF2:
 1207  00001cf8  8fc10008	lw	r1,8(r30)
 1208  00001cfc  64220000	snei	r2,r1,#0
 1209  00001d00  14400090	bnez	r2,L80_LF2
 1210  00001d04  54000000	nop; delay slot nop
 1211  00001d08  8fc10000	lw	r1,(r30)
 1212  00001d0c  90220000	lbu	r2,(r1)
 1213  00001d10  60410030	seqi	r1,r2,#48
 1214  00001d14  10200074	beqz	r1,L81_LF2
 1215  00001d18  54000000	nop; delay slot nop
 1216  00001d1c  8fc20000	lw	r2,(r30)
 1217  00001d20  20410001	addi	r1,r2,#1
 1218  00001d24  00011020	add	r2,r0,r1
 1219  00001d28  afc20000	sw	(r30),r2
 1220  00001d2c  8fc10000	lw	r1,(r30)
 1221  00001d30  90220000	lbu	r2,(r1)
 1222  00001d34  60410078	seqi	r1,r2,#120
 1223  00001d38  14200020	bnez	r1,L83_LF2
 1224  00001d3c  54000000	nop; delay slot nop
 1225  00001d40  8fc10000	lw	r1,(r30)
 1226  00001d44  90220000	lbu	r2,(r1)
 1227  00001d48  60410058	seqi	r1,r2,#88
 1228  00001d4c  1420000c	bnez	r1,L83_LF2
 1229  00001d50  54000000	nop; delay slot nop
 1230  00001d54  08000024	j	L82_LF2
 1231  00001d58  54000000	nop; delay slot nop
 1232  00001d5c          	L83_LF2:
 1233  00001d5c  20010010	addi	r1,r0,#16
 1234  00001d60  afc10008	sw	8(r30),r1
 1235  00001d64  8fc20000	lw	r2,(r30)
 1236  00001d68  20410001	addi	r1,r2,#1
 1237  00001d6c  00011020	add	r2,r0,r1
 1238  00001d70  afc20000	sw	(r30),r2
 1239  00001d74  0800000c	j	L84_LF2
 1240  00001d78  54000000	nop; delay slot nop
 1241  00001d7c          	L82_LF2:
 1242  00001d7c  20010008	addi	r1,r0,#8
 1243  00001d80  afc10008	sw	8(r30),r1
 1244  00001d84          	L84_LF2:
 1245  00001d84  0800000c	j	L80_LF2
 1246  00001d88  54000000	nop; delay slot nop
 1247  00001d8c          	L81_LF2:
 1248  00001d8c  2001000a	addi	r1,r0,#10
 1249  00001d90  afc10008	sw	8(r30),r1
 1250  00001d94          	L85_LF2:
 1251  00001d94          	L80_LF2:
 1252  00001d94  8fc10008	lw	r1,8(r30)
 1253  00001d98  70220000	slei	r2,r1,#0
 1254  00001d9c  1440001c	bnez	r2,L87_LF2
 1255  00001da0  54000000	nop; delay slot nop
 1256  00001da4  8fc10008	lw	r1,8(r30)
 1257  00001da8  6c220010	sgti	r2,r1,#16
 1258  00001dac  1440000c	bnez	r2,L87_LF2
 1259  00001db0  54000000	nop; delay slot nop
 1260  00001db4  08000010	j	L86_LF2
 1261  00001db8  54000000	nop; delay slot nop
 1262  00001dbc          	L87_LF2:
 1263  00001dbc  8fc1fff4	lw	r1,-12(r30)
 1264  00001dc0  08000188	j	L72_LF2
 1265  00001dc4  54000000	nop; delay slot nop
 1266  00001dc8          	L86_LF2:
 1267  00001dc8  54000000	nop
 1268  00001dcc          	L88_LF2:
 1269  00001dcc  8fc10000	lw	r1,(r30)
 1270  00001dd0  90220000	lbu	r2,(r1)
 1271  00001dd4  6c41002f	sgtui	r1,r2,#47
 1272  00001dd8  10200030	beqz	r1,L91_LF2
 1273  00001ddc  54000000	nop; delay slot nop
 1274  00001de0  8fc10000	lw	r1,(r30)
 1275  00001de4  90220000	lbu	r2,(r1)
 1276  00001de8  70410039	sleui	r1,r2,#57
 1277  00001dec  1020001c	beqz	r1,L91_LF2
 1278  00001df0  54000000	nop; delay slot nop
 1279  00001df4  8fc10000	lw	r1,(r30)
 1280  00001df8  90220000	lbu	r2,(r1)
 1281  00001dfc  2041ffd0	addi	r1,r2,#-48
 1282  00001e00  afc1fff0	sw	-16(r30),r1
 1283  00001e04  0800008c	j	L92_LF2
 1284  00001e08  54000000	nop; delay slot nop
 1285  00001e0c          	L91_LF2:
 1286  00001e0c  8fc10000	lw	r1,(r30)
 1287  00001e10  90220000	lbu	r2,(r1)
 1288  00001e14  6c410060	sgtui	r1,r2,#96
 1289  00001e18  10200030	beqz	r1,L93_LF2
 1290  00001e1c  54000000	nop; delay slot nop
 1291  00001e20  8fc10000	lw	r1,(r30)
 1292  00001e24  90220000	lbu	r2,(r1)
 1293  00001e28  7041007a	sleui	r1,r2,#122
 1294  00001e2c  1020001c	beqz	r1,L93_LF2
 1295  00001e30  54000000	nop; delay slot nop
 1296  00001e34  8fc10000	lw	r1,(r30)
 1297  00001e38  90220000	lbu	r2,(r1)
 1298  00001e3c  2041ffa9	addi	r1,r2,#-87
 1299  00001e40  afc1fff0	sw	-16(r30),r1
 1300  00001e44  0800004c	j	L92_LF2
 1301  00001e48  54000000	nop; delay slot nop
 1302  00001e4c          	L93_LF2:
 1303  00001e4c  8fc10000	lw	r1,(r30)
 1304  00001e50  90220000	lbu	r2,(r1)
 1305  00001e54  6c410040	sgtui	r1,r2,#64
 1306  00001e58  10200030	beqz	r1,L95_LF2
 1307  00001e5c  54000000	nop; delay slot nop
 1308  00001e60  8fc10000	lw	r1,(r30)
 1309  00001e64  90220000	lbu	r2,(r1)
 1310  00001e68  7041005a	sleui	r1,r2,#90
 1311  00001e6c  1020001c	beqz	r1,L95_LF2
 1312  00001e70  54000000	nop; delay slot nop
 1313  00001e74  8fc10000	lw	r1,(r30)
 1314  00001e78  90220000	lbu	r2,(r1)
 1315  00001e7c  2041ffc9	addi	r1,r2,#-55
 1316  00001e80  afc1fff0	sw	-16(r30),r1
 1317  00001e84  0800000c	j	L92_LF2
 1318  00001e88  54000000	nop; delay slot nop
 1319  00001e8c          	L95_LF2:
 1320  00001e8c  200103e8	addi	r1,r0,#1000
 1321  00001e90  afc1fff0	sw	-16(r30),r1
 1322  00001e94          	L96_LF2:
 1323  00001e94          	L94_LF2:
 1324  00001e94          	L92_LF2:
 1325  00001e94  8fc1fff0	lw	r1,-16(r30)
 1326  00001e98  8fc20008	lw	r2,8(r30)
 1327  00001e9c  0022082a	slt	r1,r1,r2
 1328  00001ea0  10200040	beqz	r1,L90_LF2
 1329  00001ea4  54000000	nop; delay slot nop
 1330  00001ea8  8fc1fff4	lw	r1,-12(r30)
 1331  00001eac  8fc20008	lw	r2,8(r30)
 1332  00001eb0  00200035	movi2fp	f0,r1
 1333  00001eb4  00400835	movi2fp	f1,r2
 1334  00001eb8  0401000e	mult	f0,f0,f1
 1335  00001ebc  00000834	movfp2i	r1,f0
 1336  00001ec0  afc1fff4	sw	-12(r30),r1
 1337  00001ec4  8fc1fff4	lw	r1,-12(r30)
 1338  00001ec8  8fc2fff0	lw	r2,-16(r30)
 1339  00001ecc  00220820	add	r1,r1,r2
 1340  00001ed0  afc1fff4	sw	-12(r30),r1
 1341  00001ed4  8fc20000	lw	r2,(r30)
 1342  00001ed8  20410001	addi	r1,r2,#1
 1343  00001edc  00011020	add	r2,r0,r1
 1344  00001ee0  afc20000	sw	(r30),r2
 1345  00001ee4          	L97_LF2:
 1346  00001ee4          	L90_LF2:
 1347  00001ee4  8fc1fff0	lw	r1,-16(r30)
 1348  00001ee8  8fc20008	lw	r2,8(r30)
 1349  00001eec  0022082a	slt	r1,r1,r2
 1350  00001ef0  1420000c	bnez	r1,L98_LF2
 1351  00001ef4  54000000	nop; delay slot nop
 1352  00001ef8  0800000c	j	L89_LF2
 1353  00001efc  54000000	nop; delay slot nop
 1354  00001f00          	L98_LF2:
 1355  00001f00  0bfffec8	j	L88_LF2
 1356  00001f04  54000000	nop; delay slot nop
 1357  00001f08          	L89_LF2:
 1358  00001f08  8fc10004	lw	r1,4(r30)
 1359  00001f0c  64220000	snei	r2,r1,#0
 1360  00001f10  10400010	beqz	r2,L99_LF2
 1361  00001f14  54000000	nop; delay slot nop
 1362  00001f18  8fc10004	lw	r1,4(r30)
 1363  00001f1c  8fc20000	lw	r2,(r30)
 1364  00001f20  ac220000	sw	(r1),r2
 1365  00001f24          	L99_LF2:
 1366  00001f24  8fc1fff4	lw	r1,-12(r30)
 1367  00001f28  8fc2ffec	lw	r2,-20(r30)
 1368  00001f2c  00200035	movi2fp	f0,r1
 1369  00001f30  00400835	movi2fp	f1,r2
 1370  00001f34  0401000e	mult	f0,f0,f1
 1371  00001f38  00000834	movfp2i	r1,f0
 1372  00001f3c  afc1fff4	sw	-12(r30),r1
 1373  00001f40  8fc1fff4	lw	r1,-12(r30)
 1374  00001f44  08000004	j	L72_LF2
 1375  00001f48  54000000	nop; delay slot nop
 1376  00001f4c          	L72_LF2:
 1377  00001f4c  8fa20000	lw	r2,0(r29)
 1378  00001f50  8fdffff8	lw	r31,-8(r30)
 1379  00001f54  001ee820	add	r29,r0,r30
 1380  00001f58  8fdefffc	lw	r30,-4(r30)
 1381  00001f5c  4be00000	jr	r31
 1382  00001f60  54000000	nop
 1383  00001f64          	.endproc _dstrtol
 1384  00001f64          	.align 2
 1385  00001f64          	.proc _bcopy
 1386  00001f64          	.global _bcopy
 1387  00001f64          	_bcopy:
 1388                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1389  00001f64  afbefffc	sw	-4(r29),r30; push fp
 1390  00001f68  001df020	add	r30,r0,r29; fp = sp
 1391  00001f6c  afbffff8	sw	-8(r29),r31; push ret addr
 1392  00001f70  2fbd0010	subui	r29,r29,#16; alloc local storage
 1393  00001f74  afa20000	sw	0(r29),r2
 1394  00001f78  afa30004	sw	4(r29),r3
 1395  00001f7c  54000000	nop
 1396  00001f80          	L101_LF2:
 1397  00001f80  8fc10008	lw	r1,8(r30)
 1398  00001f84  2022ffff	addi	r2,r1,#-1
 1399  00001f88  afc20008	sw	8(r30),r2
 1400  00001f8c  6c210000	sgti	r1,r1,#0
 1401  00001f90  1420000c	bnez	r1,L103_LF2
 1402  00001f94  54000000	nop; delay slot nop
 1403  00001f98  0800002c	j	L102_LF2
 1404  00001f9c  54000000	nop; delay slot nop
 1405  00001fa0          	L103_LF2:
 1406  00001fa0  8fc10004	lw	r1,4(r30)
 1407  00001fa4  20220001	addi	r2,r1,#1
 1408  00001fa8  afc20004	sw	4(r30),r2
 1409  00001fac  8fc20000	lw	r2,(r30)
 1410  00001fb0  20430001	addi	r3,r2,#1
 1411  00001fb4  afc30000	sw	(r30),r3
 1412  00001fb8  80420000	lb	r2,(r2)
 1413  00001fbc  a0220000	sb	(r1),r2
 1414  00001fc0  0bffffbc	j	L101_LF2
 1415  00001fc4  54000000	nop; delay slot nop
 1416  00001fc8          	L102_LF2:
 1417  00001fc8          	L100_LF2:
 1418  00001fc8  8fa20000	lw	r2,0(r29)
 1419  00001fcc  8fa30004	lw	r3,4(r29)
 1420  00001fd0  8fdffff8	lw	r31,-8(r30)
 1421  00001fd4  001ee820	add	r29,r0,r30
 1422  00001fd8  8fdefffc	lw	r30,-4(r30)
 1423  00001fdc  4be00000	jr	r31
 1424  00001fe0  54000000	nop
 1425  00001fe4          	.endproc _bcopy
 1426  00001fe4          	.align 2
 1427  00001fe4          	.proc _bzero
 1428  00001fe4          	.global _bzero
 1429  00001fe4          	_bzero:
 1430                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1431  00001fe4  afbefffc	sw	-4(r29),r30; push fp
 1432  00001fe8  001df020	add	r30,r0,r29; fp = sp
 1433  00001fec  afbffff8	sw	-8(r29),r31; push ret addr
 1434  00001ff0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1435  00001ff4  afa20000	sw	0(r29),r2
 1436  00001ff8  54000000	nop
 1437  00001ffc          	L105_LF2:
 1438  00001ffc  8fc10004	lw	r1,4(r30)
 1439  00002000  2022ffff	addi	r2,r1,#-1
 1440  00002004  afc20004	sw	4(r30),r2
 1441  00002008  6c210000	sgti	r1,r1,#0
 1442  0000200c  1420000c	bnez	r1,L107_LF2
 1443  00002010  54000000	nop; delay slot nop
 1444  00002014  08000020	j	L106_LF2
 1445  00002018  54000000	nop; delay slot nop
 1446  0000201c          	L107_LF2:
 1447  0000201c  8fc10000	lw	r1,(r30)
 1448  00002020  20220001	addi	r2,r1,#1
 1449  00002024  afc20000	sw	(r30),r2
 1450  00002028  20020000	addi	r2,r0,(#0x0)&0xff
 1451  0000202c  a0220000	sb	(r1),r2
 1452  00002030  0bffffc8	j	L105_LF2
 1453  00002034  54000000	nop; delay slot nop
 1454  00002038          	L106_LF2:
 1455  00002038          	L104_LF2:
 1456  00002038  8fa20000	lw	r2,0(r29)
 1457  0000203c  8fdffff8	lw	r31,-8(r30)
 1458  00002040  001ee820	add	r29,r0,r30
 1459  00002044  8fdefffc	lw	r30,-4(r30)
 1460  00002048  4be00000	jr	r31
 1461  0000204c  54000000	nop
 1462  00002050          	.endproc _bzero
 1463  00002050          	.align 2
 1464  00002050          	.proc _min
 1465  00002050          	.global _min
 1466  00002050          	_min:
 1467                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1468  00002050  afbefffc	sw	-4(r29),r30; push fp
 1469  00002054  001df020	add	r30,r0,r29; fp = sp
 1470  00002058  afbffff8	sw	-8(r29),r31; push ret addr
 1471  0000205c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1472  00002060  afa20000	sw	0(r29),r2
 1473  00002064  afa30004	sw	4(r29),r3
 1474  00002068  8fc10000	lw	r1,(r30)
 1475  0000206c  8fc20004	lw	r2,4(r30)
 1476  00002070  0022182c	sle	r3,r1,r2
 1477  00002074  14600008	bnez	r3,L109_LF2
 1478  00002078  54000000	nop; delay slot nop
 1479  0000207c  8fc10004	lw	r1,4(r30)
 1480  00002080          	L109_LF2:
 1481  00002080  08000004	j	L108_LF2
 1482  00002084  54000000	nop; delay slot nop
 1483  00002088          	L108_LF2:
 1484  00002088  8fa20000	lw	r2,0(r29)
 1485  0000208c  8fa30004	lw	r3,4(r29)
 1486  00002090  8fdffff8	lw	r31,-8(r30)
 1487  00002094  001ee820	add	r29,r0,r30
 1488  00002098  8fdefffc	lw	r30,-4(r30)
 1489  0000209c  4be00000	jr	r31
 1490  000020a0  54000000	nop
 1491  000020a4          	.endproc _min
 1492  000020a4          	.align 2
 1493  000020a4          	.proc _max
 1494  000020a4          	.global _max
 1495  000020a4          	_max:
 1496                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1497  000020a4  afbefffc	sw	-4(r29),r30; push fp
 1498  000020a8  001df020	add	r30,r0,r29; fp = sp
 1499  000020ac  afbffff8	sw	-8(r29),r31; push ret addr
 1500  000020b0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1501  000020b4  afa20000	sw	0(r29),r2
 1502  000020b8  afa30004	sw	4(r29),r3
 1503  000020bc  8fc10000	lw	r1,(r30)
 1504  000020c0  8fc20004	lw	r2,4(r30)
 1505  000020c4  0022182d	sge	r3,r1,r2
 1506  000020c8  14600008	bnez	r3,L111_LF2
 1507  000020cc  54000000	nop; delay slot nop
 1508  000020d0  8fc10004	lw	r1,4(r30)
 1509  000020d4          	L111_LF2:
 1510  000020d4  08000004	j	L110_LF2
 1511  000020d8  54000000	nop; delay slot nop
 1512  000020dc          	L110_LF2:
 1513  000020dc  8fa20000	lw	r2,0(r29)
 1514  000020e0  8fa30004	lw	r3,4(r29)
 1515  000020e4  8fdffff8	lw	r31,-8(r30)
 1516  000020e8  001ee820	add	r29,r0,r30
 1517  000020ec  8fdefffc	lw	r30,-4(r30)
 1518  000020f0  4be00000	jr	r31
 1519  000020f4  54000000	nop
 1520  000020f8          	.endproc _max
 1521                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1522                      ;;;
 1523                      ;;; Most of the traps are called in files from libtraps.
 1526  000020f8          	.align 2
 1527  000020f8          	.proc _exit
 1528  000020f8          	.global _exit
 1529  000020f8          	_exit:
 1530  000020f8  44000300	trap	#0x300
 1531  000020fc  4be00000	jr	r31
 1532  00002100  54000000	nop
 1533  00002104          	.endproc _exit
 1535                      ; for the benefit of gcc.
 1536  00002104          	.proc ___main
 1537  00002104          	.global ___main
 1538  00002104          	___main:
 1539  00002104  4be00000	jr	r31
 1540  00002108  54000000	nop
 1541  0000210c          	.endproc ___main
 1542  0000210c          	.text
 1543  0000210c          	.global _etext
 1544  0000210c          	_etext:
 1545  0000210c          	.align 3
 1546  00002110          	.data
 1547  000030d4          	.global _edata
 1548  000030d4          	_edata:
