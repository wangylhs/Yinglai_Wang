 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 113
    4                      ; Text size: 4296
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
   82  00003004  653a2025	
   82  00003008  73203c68	
   82  0000300c  616e646c	
   82  00003010  655f746f	
   82  00003014  5f70726f	
   82  00003018  63735f63	
   82  0000301c  6f6d706c	
   82  00003020  65746564	
   82  00003024  5f73656d	
   82  00003028  6170686f	
   82  0000302c  72653e0a	
   82  00003030  00      	
   83  00003031          	.align 2
   84  00003034          	LC1_LF0:
   85  00003034  636f756e	.ascii "count_large (%d): Start counting!\n\000"
   85  00003038  745f6c61	
   85  0000303c  72676520	
   85  00003040  28256429	
   85  00003044  3a205374	
   85  00003048  61727420	
   85  0000304c  636f756e	
   85  00003050  74696e67	
   85  00003054  210a00  	
   86  00003057          	.align 2
   87  00003058          	LC2_LF0:
   88  00003058  636f756e	.ascii "count_large (%d): Done!\n\000"
   88  0000305c  745f6c61	
   88  00003060  72676520	
   88  00003064  28256429	
   88  00003068  3a20446f	
   88  0000306c  6e65210a	
   88  00003070  00      	
   89  00003071          	.text
   90  000010d4          	.align 2
   91  000010d4          	.proc _main
   92  000010d4          	.global _main
   93  000010d4          	_main:
   94                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
   95  000010d4  afbefffc	sw	-4(r29),r30; push fp
   96  000010d8  001df020	add	r30,r0,r29; fp = sp
   97  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
   98  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
   99  000010e4  8fc20000	lw	r2,(r30)
  100  000010e8  8fc30004	lw	r3,4(r30)
  101  000010ec  0c000fd0	jal	___main
  102  000010f0  54000000	nop; not filled.
  103  000010f4  3c040001	lhi	r4,#1
  104  000010f8  248486a0	addui	r4,r4,#34464
  105  000010fc  64410002	snei	r1,r2,#2
  106  00001100  10200028	beqz	r1,L21_LF0
  107  00001104  54000000	nop; not filled.
  108  00001108  23bdfff8	addi	r29,r29,#-8
  109  0000110c  3c050000	lhi	r5,((LC0_LF0)>>16)&0xffff
  110  00001110  24a53000	addui	r5,r5,(LC0_LF0)&0xffff
  111  00001114  afa50000	sw	(r29),r5
  112  00001118  0c0000e4	jal	_Printf
  113  0000111c  54000000	nop; not filled.
  114  00001120  0c0001e4	jal	_Exit
  115  00001124  54000000	nop; not filled.
  116  00001128  23bd0008	addi	r29,r29,#8
  117  0000112c          	L21_LF0:
  118  0000112c  23bdfff0	addi	r29,r29,#-16
  119  00001130  8c630004	lw	r3,4(r3)
  120  00001134  afa30000	sw	(r29),r3
  121  00001138  20050000	addi	r5,r0,#0
  122  0000113c  afa50004	sw	4(r29),r5
  123  00001140  2005000a	addi	r5,r0,#10
  124  00001144  afa50008	sw	8(r29),r5
  125  00001148  0c000a78	jal	_dstrtol
  126  0000114c  54000000	nop; not filled.
  127  00001150  0c0000b8	jal	_getpid
  128  00001154  54000000	nop; not filled.
  129  00001158  3c050000	lhi	r5,((LC1_LF0)>>16)&0xffff
  130  0000115c  24a53034	addui	r5,r5,(LC1_LF0)&0xffff
  131  00001160  afa50000	sw	(r29),r5
  132  00001164  afa10004	sw	4(r29),r1
  133  00001168  0c000094	jal	_Printf
  134  0000116c  54000000	nop; not filled.
  135  00001170  20020000	addi	r2,r0,#0
  136  00001174  23bd0010	addi	r29,r29,#16
  137  00001178          	L24_LF0:
  138  00001178  20420001	addi	r2,r2,#1
  139  0000117c  0044082a	slt	r1,r2,r4
  140  00001180  1420fff4	bnez	r1,L24_LF0
  141  00001184  54000000	nop; not filled.
  142  00001188  0c000080	jal	_getpid
  143  0000118c  54000000	nop; not filled.
  144  00001190  23bdfff8	addi	r29,r29,#-8
  145  00001194  3c050000	lhi	r5,((LC2_LF0)>>16)&0xffff
  146  00001198  24a53058	addui	r5,r5,(LC2_LF0)&0xffff
  147  0000119c  afa50000	sw	(r29),r5
  148  000011a0  afa10004	sw	4(r29),r1
  149  000011a4  0c000058	jal	_Printf
  150  000011a8  54000000	nop; not filled.
  151  000011ac  23bd0008	addi	r29,r29,#8
  152  000011b0  0c000f00	jal	_exit
  153  000011b4  54000000	nop
  154  000011b8          	.endproc _main
  155                      ;;;
  156                      ;;; Stub functions for DLX traps.
  157                      ;;;
  158                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  159                      ;;;
  160                      ;;; The traps such as Open and Close
  161                      ;;; (note the capital letters) are for use by user programs.  The traps
  162                      ;;; with names such as open and close (lower case) are for use by the OS.
  163                      ;;;
  166  000011b8          	.align 2
  168                      ;;; The following are the traps to be used by user-level programs
  169                      ;;;
  171  000011b8          	.align 2
  172  000011b8          	.proc _Open
  173  000011b8          	.global _Open
  174  000011b8          	_Open:
  175                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  176                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  177                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  178  000011b8  44000213	trap	#0x213
  179  000011bc  4be00000	jr	r31
  180  000011c0  54000000	nop
  181  000011c4          	.endproc _Open
  183  000011c4          	.proc _Close
  184  000011c4          	.global _Close
  185  000011c4          	_Close:
  186  000011c4  44000214	trap	#0x214
  187  000011c8  4be00000	jr	r31
  188  000011cc  54000000	nop
  189  000011d0          	.endproc _Close
  191  000011d0          	.proc _Read
  192  000011d0          	.global _Read
  193  000011d0          	_Read:
  194  000011d0  44000210	trap	#0x210
  195  000011d4  4be00000	jr	r31
  196  000011d8  54000000	nop
  197  000011dc          	.endproc _Read
  199  000011dc          	.proc _Write
  200  000011dc          	.global _Write
  201  000011dc          	_Write:
  202  000011dc  44000211	trap	#0x211
  203  000011e0  4be00000	jr	r31
  204  000011e4  54000000	nop
  205  000011e8          	.endproc _Write
  207  000011e8          	.proc _Lseek
  208  000011e8          	.global _Lseek
  209  000011e8          	_Lseek:
  210  000011e8  44000212	trap	#0x212
  211  000011ec  4be00000	jr	r31
  212  000011f0  54000000	nop
  213  000011f4          	.endproc _Lseek
  215  000011f4          	.proc _Putchar
  216  000011f4          	.global _Putchar
  217  000011f4          	_Putchar:
  218  000011f4  44000280	trap	#0x280
  219  000011f8  4be00000	jr	r31
  220  000011fc  54000000	nop
  221  00001200          	.endproc _Putchar
  223  00001200          	.proc _Printf
  224  00001200          	.global _Printf
  225  00001200          	_Printf:
  226  00001200  44000201	trap	#0x201
  227  00001204  4be00000	jr	r31
  228  00001208  54000000	nop
  229  0000120c          	.endproc _Printf
  231  0000120c          	.proc _getpid
  232  0000120c          	.global _getpid
  233  0000120c          	_getpid:
  234  0000120c  44000431	trap	#0x431
  235  00001210  4be00000	jr	r31
  236  00001214  54000000	nop
  237  00001218          	.endproc _getpid
  239  00001218          	.proc _process_create
  240  00001218          	.global _process_create
  241  00001218          	_process_create:
  242  00001218  44000432	trap	#0x432
  243  0000121c  4be00000	jr	r31
  244  00001220  54000000	nop
  245  00001224          	.endproc _process_create
  247  00001224          	.proc _shmget
  248  00001224          	.global _shmget
  249  00001224          	_shmget:
  250  00001224  44000440	trap	#0x440
  251  00001228  4be00000	jr	r31
  252  0000122c  54000000	nop
  253  00001230          	.endproc _shmget
  255  00001230          	.proc _shmat
  256  00001230          	.global _shmat
  257  00001230          	_shmat:
  258  00001230  44000441	trap	#0x441
  259  00001234  4be00000	jr	r31
  260  00001238  54000000	nop
  261  0000123c          	.endproc _shmat
  263  0000123c          	.proc _sem_create
  264  0000123c          	.global _sem_create
  265  0000123c          	_sem_create:
  266  0000123c  44000450	trap	#0x450
  267  00001240  4be00000	jr	r31
  268  00001244  54000000	nop
  269  00001248          	.endproc _sem_create
  271  00001248          	.proc _sem_wait
  272  00001248          	.global _sem_wait
  273  00001248          	_sem_wait:
  274  00001248  44000451	trap	#0x451
  275  0000124c  4be00000	jr	r31
  276  00001250  54000000	nop
  277  00001254          	.endproc _sem_wait
  279  00001254          	.proc _sem_signal
  280  00001254          	.global _sem_signal
  281  00001254          	_sem_signal:
  282  00001254  44000452	trap	#0x452
  283  00001258  4be00000	jr	r31
  284  0000125c  54000000	nop
  285  00001260          	.endproc _sem_signal
  287  00001260          	.proc _lock_create
  288  00001260          	.global _lock_create
  289  00001260          	_lock_create:
  290  00001260  44000453	trap	#0x453
  291  00001264  4be00000	jr	r31
  292  00001268  54000000	nop
  293  0000126c          	.endproc _lock_create
  295  0000126c          	.proc _lock_acquire
  296  0000126c          	.global _lock_acquire
  297  0000126c          	_lock_acquire:
  298  0000126c  44000454	trap	#0x454
  299  00001270  4be00000	jr	r31
  300  00001274  54000000	nop
  301  00001278          	.endproc _lock_acquire
  303  00001278          	.proc _lock_release
  304  00001278          	.global _lock_release
  305  00001278          	_lock_release:
  306  00001278  44000455	trap	#0x455
  307  0000127c  4be00000	jr	r31
  308  00001280  54000000	nop
  309  00001284          	.endproc _lock_release
  311  00001284          	.proc _cond_create
  312  00001284          	.global _cond_create
  313  00001284          	_cond_create:
  314  00001284  44000456	trap	#0x456
  315  00001288  4be00000	jr	r31
  316  0000128c  54000000	nop
  317  00001290          	.endproc _cond_create
  319  00001290          	.proc _cond_wait
  320  00001290          	.global _cond_wait
  321  00001290          	_cond_wait:
  322  00001290  44000457	trap	#0x457
  323  00001294  4be00000	jr	r31
  324  00001298  54000000	nop
  325  0000129c          	.endproc _cond_wait
  327  0000129c          	.proc _cond_signal
  328  0000129c          	.global _cond_signal
  329  0000129c          	_cond_signal:
  330  0000129c  44000458	trap	#0x458
  331  000012a0  4be00000	jr	r31
  332  000012a4  54000000	nop
  333  000012a8          	.endproc _cond_signal
  335  000012a8          	.proc _cond_broadcast
  336  000012a8          	.global _cond_broadcast
  337  000012a8          	_cond_broadcast:
  338  000012a8  44000459	trap	#0x459
  339  000012ac  4be00000	jr	r31
  340  000012b0  54000000	nop
  341  000012b4          	.endproc _cond_broadcast
  343  000012b4          	.proc _mbox_create
  344  000012b4          	.global _mbox_create
  345  000012b4          	_mbox_create:
  346  000012b4  44000460	trap	#0x460
  347  000012b8  4be00000	jr	r31
  348  000012bc  54000000	nop
  349  000012c0          	.endproc _mbox_create
  351  000012c0          	.proc _mbox_open
  352  000012c0          	.global _mbox_open
  353  000012c0          	_mbox_open:
  354  000012c0  44000461	trap	#0x461
  355  000012c4  4be00000	jr	r31
  356  000012c8  54000000	nop
  357  000012cc          	.endproc _mbox_open
  359  000012cc          	.proc _mbox_close
  360  000012cc          	.global _mbox_close
  361  000012cc          	_mbox_close:
  362  000012cc  44000462	trap	#0x462
  363  000012d0  4be00000	jr	r31
  364  000012d4  54000000	nop
  365  000012d8          	.endproc _mbox_close
  367  000012d8          	.proc _mbox_send
  368  000012d8          	.global _mbox_send
  369  000012d8          	_mbox_send:
  370  000012d8  44000463	trap	#0x463
  371  000012dc  4be00000	jr	r31
  372  000012e0  54000000	nop
  373  000012e4          	.endproc _mbox_send
  375  000012e4          	.proc _mbox_recv
  376  000012e4          	.global _mbox_recv
  377  000012e4          	_mbox_recv:
  378  000012e4  44000464	trap	#0x464
  379  000012e8  4be00000	jr	r31
  380  000012ec  54000000	nop
  381  000012f0          	.endproc _mbox_recv
  383  000012f0          	.proc _sleep
  384  000012f0          	.global _sleep
  385  000012f0          	_sleep:
  386  000012f0  44000465	trap	#0x465
  387  000012f4  4be00000	jr	r31
  388  000012f8  54000000	nop
  389  000012fc          	.endproc _sleep
  391  000012fc          	.proc _yield
  392  000012fc          	.global _yield
  393  000012fc          	_yield:
  394  000012fc  44000466	trap	#0x466
  395  00001300  4be00000	jr	r31
  396  00001304  54000000	nop
  397  00001308          	.endproc _yield
  400  00001308          	.proc _Exit
  401  00001308          	.global _Exit
  402  00001308          	_Exit:
  403  00001308  44000500	trap	#0x500
  404  0000130c  4be00000	jr	r31
  405  00001310  54000000	nop
  406  00001314          	.endproc _Exit
  409  00001314          	.proc _malloc
  410  00001314          	.global _malloc
  411  00001314          	_malloc:
  412  00001314  44000467	trap	#0x467
  413  00001318  4be00000	jr	r31
  414  0000131c          	.endproc _malloc
  417  0000131c          	.proc _mfree
  418  0000131c          	.global _mfree
  419  0000131c          	_mfree:
  420  0000131c  44000468	trap	#0x468
  421  00001320  4be00000	jr	r31
  422  00001324          	.endproc _mfree
  423                      ; Compiled by GCC
  425  00001324          	.align 2
  426  00001324          	.proc _isspace
  427  00001324          	.global _isspace
  428  00001324          	_isspace:
  429                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  430  00001324  afbefffc	sw	-4(r29),r30; push fp
  431  00001328  001df020	add	r30,r0,r29; fp = sp
  432  0000132c  afbffff8	sw	-8(r29),r31; push ret addr
  433  00001330  2fbd0018	subui	r29,r29,#24; alloc local storage
  434  00001334  afa20000	sw	0(r29),r2
  435  00001338  afa30004	sw	4(r29),r3
  436  0000133c  afa40008	sw	8(r29),r4
  437  00001340  83c20003	lb	r2,3(r30)
  438  00001344  20010000	addi	r1,r0,#0
  439  00001348  304300ff	andi	r3,r2,#0x00ff
  440  0000134c  60640020	seqi	r4,r3,#32
  441  00001350  1480002c	bnez	r4,L3_LF2
  442  00001354  54000000	nop; delay slot nop
  443  00001358  304300ff	andi	r3,r2,#0x00ff
  444  0000135c  60640009	seqi	r4,r3,#9
  445  00001360  1480001c	bnez	r4,L3_LF2
  446  00001364  54000000	nop; delay slot nop
  447  00001368  304300ff	andi	r3,r2,#0x00ff
  448  0000136c  6064000a	seqi	r4,r3,#10
  449  00001370  1480000c	bnez	r4,L3_LF2
  450  00001374  54000000	nop; delay slot nop
  451  00001378  08000008	j	L2_LF2
  452  0000137c  54000000	nop; delay slot nop
  453  00001380          	L3_LF2:
  454  00001380  20010001	addi	r1,r0,#1
  455  00001384          	L2_LF2:
  456  00001384  08000004	j	L1_LF2
  457  00001388  54000000	nop; delay slot nop
  458  0000138c          	L1_LF2:
  459  0000138c  8fa20000	lw	r2,0(r29)
  460  00001390  8fa30004	lw	r3,4(r29)
  461  00001394  8fa40008	lw	r4,8(r29)
  462  00001398  8fdffff8	lw	r31,-8(r30)
  463  0000139c  001ee820	add	r29,r0,r30
  464  000013a0  8fdefffc	lw	r30,-4(r30)
  465  000013a4  4be00000	jr	r31
  466  000013a8  54000000	nop
  467  000013ac          	.endproc _isspace
  468  000013ac          	.align 2
  469  000013ac          	.proc _isxdigit
  470  000013ac          	.global _isxdigit
  471  000013ac          	_isxdigit:
  472                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  473  000013ac  afbefffc	sw	-4(r29),r30; push fp
  474  000013b0  001df020	add	r30,r0,r29; fp = sp
  475  000013b4  afbffff8	sw	-8(r29),r31; push ret addr
  476  000013b8  2fbd0018	subui	r29,r29,#24; alloc local storage
  477  000013bc  afa20000	sw	0(r29),r2
  478  000013c0  afa30004	sw	4(r29),r3
  479  000013c4  afa40008	sw	8(r29),r4
  480  000013c8  83c20003	lb	r2,3(r30)
  481  000013cc  20010000	addi	r1,r0,#0
  482  000013d0  304300ff	andi	r3,r2,#0x00ff
  483  000013d4  6c64002f	sgtui	r4,r3,#47
  484  000013d8  1080001c	beqz	r4,L7_LF2
  485  000013dc  54000000	nop; delay slot nop
  486  000013e0  304300ff	andi	r3,r2,#0x00ff
  487  000013e4  70640039	sleui	r4,r3,#57
  488  000013e8  1480005c	bnez	r4,L6_LF2
  489  000013ec  54000000	nop; delay slot nop
  490  000013f0  08000004	j	L7_LF2
  491  000013f4  54000000	nop; delay slot nop
  492  000013f8          	L7_LF2:
  493  000013f8  304300ff	andi	r3,r2,#0x00ff
  494  000013fc  6c640060	sgtui	r4,r3,#96
  495  00001400  1080001c	beqz	r4,L8_LF2
  496  00001404  54000000	nop; delay slot nop
  497  00001408  304300ff	andi	r3,r2,#0x00ff
  498  0000140c  70640066	sleui	r4,r3,#102
  499  00001410  14800034	bnez	r4,L6_LF2
  500  00001414  54000000	nop; delay slot nop
  501  00001418  08000004	j	L8_LF2
  502  0000141c  54000000	nop; delay slot nop
  503  00001420          	L8_LF2:
  504  00001420  304300ff	andi	r3,r2,#0x00ff
  505  00001424  6c640040	sgtui	r4,r3,#64
  506  00001428  10800020	beqz	r4,L5_LF2
  507  0000142c  54000000	nop; delay slot nop
  508  00001430  304300ff	andi	r3,r2,#0x00ff
  509  00001434  70640041	sleui	r4,r3,#65
  510  00001438  1480000c	bnez	r4,L6_LF2
  511  0000143c  54000000	nop; delay slot nop
  512  00001440  08000008	j	L5_LF2
  513  00001444  54000000	nop; delay slot nop
  514  00001448          	L6_LF2:
  515  00001448  20010001	addi	r1,r0,#1
  516  0000144c          	L5_LF2:
  517  0000144c  08000004	j	L4_LF2
  518  00001450  54000000	nop; delay slot nop
  519  00001454          	L4_LF2:
  520  00001454  8fa20000	lw	r2,0(r29)
  521  00001458  8fa30004	lw	r3,4(r29)
  522  0000145c  8fa40008	lw	r4,8(r29)
  523  00001460  8fdffff8	lw	r31,-8(r30)
  524  00001464  001ee820	add	r29,r0,r30
  525  00001468  8fdefffc	lw	r30,-4(r30)
  526  0000146c  4be00000	jr	r31
  527  00001470  54000000	nop
  528  00001474          	.endproc _isxdigit
  529  00001474          	.align 2
  530  00001474          	.proc _dstrcpy
  531  00001474          	.global _dstrcpy
  532  00001474          	_dstrcpy:
  533                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  534  00001474  afbefffc	sw	-4(r29),r30; push fp
  535  00001478  001df020	add	r30,r0,r29; fp = sp
  536  0000147c  afbffff8	sw	-8(r29),r31; push ret addr
  537  00001480  2fbd0018	subui	r29,r29,#24; alloc local storage
  538  00001484  afa20000	sw	0(r29),r2
  539  00001488  afa30004	sw	4(r29),r3
  540  0000148c  8fc10000	lw	r1,(r30)
  541  00001490  afc1fff4	sw	-12(r30),r1
  542  00001494          	L10_LF2:
  543  00001494  8fc10000	lw	r1,(r30)
  544  00001498  20220001	addi	r2,r1,#1
  545  0000149c  afc20000	sw	(r30),r2
  546  000014a0  8fc20004	lw	r2,4(r30)
  547  000014a4  20430001	addi	r3,r2,#1
  548  000014a8  afc30004	sw	4(r30),r3
  549  000014ac  80420000	lb	r2,(r2)
  550  000014b0  a0220000	sb	(r1),r2
  551  000014b4  a3c2fff3	sb	-13(r30),r2
  552  000014b8          	L12_LF2:
  553  000014b8  93c1fff3	lbu	r1,-13(r30)
  554  000014bc  64220000	snei	r2,r1,#0
  555  000014c0  1440000c	bnez	r2,L13_LF2
  556  000014c4  54000000	nop; delay slot nop
  557  000014c8  0800000c	j	L11_LF2
  558  000014cc  54000000	nop; delay slot nop
  559  000014d0          	L13_LF2:
  560  000014d0  0bffffc0	j	L10_LF2
  561  000014d4  54000000	nop; delay slot nop
  562  000014d8          	L11_LF2:
  563  000014d8  8fc1fff4	lw	r1,-12(r30)
  564  000014dc  08000004	j	L9_LF2
  565  000014e0  54000000	nop; delay slot nop
  566  000014e4          	L9_LF2:
  567  000014e4  8fa20000	lw	r2,0(r29)
  568  000014e8  8fa30004	lw	r3,4(r29)
  569  000014ec  8fdffff8	lw	r31,-8(r30)
  570  000014f0  001ee820	add	r29,r0,r30
  571  000014f4  8fdefffc	lw	r30,-4(r30)
  572  000014f8  4be00000	jr	r31
  573  000014fc  54000000	nop
  574  00001500          	.endproc _dstrcpy
  575  00001500          	.align 2
  576  00001500          	.proc _dstrncpy
  577  00001500          	.global _dstrncpy
  578  00001500          	_dstrncpy:
  579                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  580  00001500  afbefffc	sw	-4(r29),r30; push fp
  581  00001504  001df020	add	r30,r0,r29; fp = sp
  582  00001508  afbffff8	sw	-8(r29),r31; push ret addr
  583  0000150c  2fbd0018	subui	r29,r29,#24; alloc local storage
  584  00001510  afa20000	sw	0(r29),r2
  585  00001514  afa30004	sw	4(r29),r3
  586  00001518  8fc10000	lw	r1,(r30)
  587  0000151c  afc1fff4	sw	-12(r30),r1
  588  00001520          	L15_LF2:
  589  00001520  8fc10008	lw	r1,8(r30)
  590  00001524  2022ffff	addi	r2,r1,#-1
  591  00001528  afc20008	sw	8(r30),r2
  592  0000152c  70210000	slei	r1,r1,#0
  593  00001530  1020000c	beqz	r1,L18_LF2
  594  00001534  54000000	nop; delay slot nop
  595  00001538  08000048	j	L16_LF2
  596  0000153c  54000000	nop; delay slot nop
  597  00001540          	L18_LF2:
  598  00001540  8fc10000	lw	r1,(r30)
  599  00001544  20220001	addi	r2,r1,#1
  600  00001548  afc20000	sw	(r30),r2
  601  0000154c  8fc20004	lw	r2,4(r30)
  602  00001550  20430001	addi	r3,r2,#1
  603  00001554  afc30004	sw	4(r30),r3
  604  00001558  80420000	lb	r2,(r2)
  605  0000155c  a0220000	sb	(r1),r2
  606  00001560  a3c2fff3	sb	-13(r30),r2
  607  00001564          	L17_LF2:
  608  00001564  93c1fff3	lbu	r1,-13(r30)
  609  00001568  64220000	snei	r2,r1,#0
  610  0000156c  1440000c	bnez	r2,L19_LF2
  611  00001570  54000000	nop; delay slot nop
  612  00001574  0800000c	j	L16_LF2
  613  00001578  54000000	nop; delay slot nop
  614  0000157c          	L19_LF2:
  615  0000157c  0bffffa0	j	L15_LF2
  616  00001580  54000000	nop; delay slot nop
  617  00001584          	L16_LF2:
  618  00001584  8fc1fff4	lw	r1,-12(r30)
  619  00001588  08000004	j	L14_LF2
  620  0000158c  54000000	nop; delay slot nop
  621  00001590          	L14_LF2:
  622  00001590  8fa20000	lw	r2,0(r29)
  623  00001594  8fa30004	lw	r3,4(r29)
  624  00001598  8fdffff8	lw	r31,-8(r30)
  625  0000159c  001ee820	add	r29,r0,r30
  626  000015a0  8fdefffc	lw	r30,-4(r30)
  627  000015a4  4be00000	jr	r31
  628  000015a8  54000000	nop
  629  000015ac          	.endproc _dstrncpy
  630  000015ac          	.align 2
  631  000015ac          	.proc _dstrcat
  632  000015ac          	.global _dstrcat
  633  000015ac          	_dstrcat:
  634                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  635  000015ac  afbefffc	sw	-4(r29),r30; push fp
  636  000015b0  001df020	add	r30,r0,r29; fp = sp
  637  000015b4  afbffff8	sw	-8(r29),r31; push ret addr
  638  000015b8  2fbd0018	subui	r29,r29,#24; alloc local storage
  639  000015bc  afa20000	sw	0(r29),r2
  640  000015c0  8fc10000	lw	r1,(r30)
  641  000015c4  afc1fff4	sw	-12(r30),r1
  642  000015c8          	L21_LF2:
  643  000015c8  8fc10000	lw	r1,(r30)
  644  000015cc  90220000	lbu	r2,(r1)
  645  000015d0  64410000	snei	r1,r2,#0
  646  000015d4  1420000c	bnez	r1,L23_LF2
  647  000015d8  54000000	nop; delay slot nop
  648  000015dc  0800001c	j	L22_LF2
  649  000015e0  54000000	nop; delay slot nop
  650  000015e4          	L23_LF2:
  651  000015e4  8fc20000	lw	r2,(r30)
  652  000015e8  20410001	addi	r1,r2,#1
  653  000015ec  00011020	add	r2,r0,r1
  654  000015f0  afc20000	sw	(r30),r2
  655  000015f4  0bffffd0	j	L21_LF2
  656  000015f8  54000000	nop; delay slot nop
  657  000015fc          	L22_LF2:
  658  000015fc  23bdfff8	addi	r29,r29,#-8
  659  00001600  001d0820	add	r1,r0,r29
  660  00001604  8fc20000	lw	r2,(r30)
  661  00001608  ac220000	sw	(r1),r2
  662  0000160c  8fc20004	lw	r2,4(r30)
  663  00001610  ac220004	sw	4(r1),r2
  664  00001614  0ffffe5c	jal	_dstrcpy
  665  00001618  54000000	nop; delay slot nop
  666  0000161c  23bd0008	addi	r29,r29,#8
  667  00001620  8fc1fff4	lw	r1,-12(r30)
  668  00001624  08000004	j	L20_LF2
  669  00001628  54000000	nop; delay slot nop
  670  0000162c          	L20_LF2:
  671  0000162c  8fa20000	lw	r2,0(r29)
  672  00001630  8fdffff8	lw	r31,-8(r30)
  673  00001634  001ee820	add	r29,r0,r30
  674  00001638  8fdefffc	lw	r30,-4(r30)
  675  0000163c  4be00000	jr	r31
  676  00001640  54000000	nop
  677  00001644          	.endproc _dstrcat
  678  00001644          	.align 2
  679  00001644          	.proc _dstrncmp
  680  00001644          	.global _dstrncmp
  681  00001644          	_dstrncmp:
  682                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  683  00001644  afbefffc	sw	-4(r29),r30; push fp
  684  00001648  001df020	add	r30,r0,r29; fp = sp
  685  0000164c  afbffff8	sw	-8(r29),r31; push ret addr
  686  00001650  2fbd0018	subui	r29,r29,#24; alloc local storage
  687  00001654  afa20000	sw	0(r29),r2
  688  00001658  afa30004	sw	4(r29),r3
  689  0000165c  54000000	nop
  690  00001660  20010000	addi	r1,r0,#0
  691  00001664  afc1fff4	sw	-12(r30),r1
  692  00001668          	L25_LF2:
  693  00001668  8fc1fff4	lw	r1,-12(r30)
  694  0000166c  8fc20008	lw	r2,8(r30)
  695  00001670  0022082a	slt	r1,r1,r2
  696  00001674  1420000c	bnez	r1,L28_LF2
  697  00001678  54000000	nop; delay slot nop
  698  0000167c  08000088	j	L26_LF2
  699  00001680  54000000	nop; delay slot nop
  700  00001684          	L28_LF2:
  701  00001684  8fc10004	lw	r1,4(r30)
  702  00001688  90220000	lbu	r2,(r1)
  703  0000168c  64410000	snei	r1,r2,#0
  704  00001690  14200018	bnez	r1,L29_LF2
  705  00001694  54000000	nop; delay slot nop
  706  00001698  20010000	addi	r1,r0,#0
  707  0000169c  080000d8	j	L24_LF2
  708  000016a0  54000000	nop; delay slot nop
  709  000016a4  08000028	j	L30_LF2
  710  000016a8  54000000	nop; delay slot nop
  711  000016ac          	L29_LF2:
  712  000016ac  8fc10000	lw	r1,(r30)
  713  000016b0  8fc20004	lw	r2,4(r30)
  714  000016b4  90210000	lbu	r1,(r1)
  715  000016b8  90420000	lbu	r2,(r2)
  716  000016bc  00220829	sne	r1,r1,r2
  717  000016c0  1020000c	beqz	r1,L30_LF2
  718  000016c4  54000000	nop; delay slot nop
  719  000016c8  0800003c	j	L26_LF2
  720  000016cc  54000000	nop; delay slot nop
  721  000016d0          	L31_LF2:
  722  000016d0          	L30_LF2:
  723  000016d0  8fc20000	lw	r2,(r30)
  724  000016d4  20410001	addi	r1,r2,#1
  725  000016d8  00011020	add	r2,r0,r1
  726  000016dc  afc20000	sw	(r30),r2
  727  000016e0  8fc20004	lw	r2,4(r30)
  728  000016e4  20410001	addi	r1,r2,#1
  729  000016e8  00011020	add	r2,r0,r1
  730  000016ec  afc20004	sw	4(r30),r2
  731  000016f0          	L27_LF2:
  732  000016f0  8fc2fff4	lw	r2,-12(r30)
  733  000016f4  20410001	addi	r1,r2,#1
  734  000016f8  00011020	add	r2,r0,r1
  735  000016fc  afc2fff4	sw	-12(r30),r2
  736  00001700  0bffff64	j	L25_LF2
  737  00001704  54000000	nop; delay slot nop
  738  00001708          	L26_LF2:
  739  00001708  8fc1fff4	lw	r1,-12(r30)
  740  0000170c  8fc20008	lw	r2,8(r30)
  741  00001710  00220828	seq	r1,r1,r2
  742  00001714  10200018	beqz	r1,L32_LF2
  743  00001718  54000000	nop; delay slot nop
  744  0000171c  20010000	addi	r1,r0,#0
  745  00001720  08000054	j	L24_LF2
  746  00001724  54000000	nop; delay slot nop
  747  00001728  0800004c	j	L33_LF2
  748  0000172c  54000000	nop; delay slot nop
  749  00001730          	L32_LF2:
  750  00001730  8fc20000	lw	r2,(r30)
  751  00001734  90410000	lbu	r1,(r2)
  752  00001738  8fc20004	lw	r2,4(r30)
  753  0000173c  90430000	lbu	r3,(r2)
  754  00001740  00230822	sub	r1,r1,r3
  755  00001744  74220000	sgei	r2,r1,#0
  756  00001748  10400020	beqz	r2,L34_LF2
  757  0000174c  54000000	nop; delay slot nop
  758  00001750  8fc10000	lw	r1,(r30)
  759  00001754  8fc20004	lw	r2,4(r30)
  760  00001758  90210000	lbu	r1,(r1)
  761  0000175c  90420000	lbu	r2,(r2)
  762  00001760  00220829	sne	r1,r1,r2
  763  00001764  08000008	j	L35_LF2
  764  00001768  54000000	nop; delay slot nop
  765  0000176c          	L34_LF2:
  766  0000176c  2001ffff	addi	r1,r0,#-1
  767  00001770          	L35_LF2:
  768  00001770  08000004	j	L24_LF2
  769  00001774  54000000	nop; delay slot nop
  770  00001778          	L33_LF2:
  771  00001778          	L24_LF2:
  772  00001778  8fa20000	lw	r2,0(r29)
  773  0000177c  8fa30004	lw	r3,4(r29)
  774  00001780  8fdffff8	lw	r31,-8(r30)
  775  00001784  001ee820	add	r29,r0,r30
  776  00001788  8fdefffc	lw	r30,-4(r30)
  777  0000178c  4be00000	jr	r31
  778  00001790  54000000	nop
  779  00001794          	.endproc _dstrncmp
  780  00001794          	.align 2
  781  00001794          	.proc _dstrlen
  782  00001794          	.global _dstrlen
  783  00001794          	_dstrlen:
  784                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  785  00001794  afbefffc	sw	-4(r29),r30; push fp
  786  00001798  001df020	add	r30,r0,r29; fp = sp
  787  0000179c  afbffff8	sw	-8(r29),r31; push ret addr
  788  000017a0  2fbd0018	subui	r29,r29,#24; alloc local storage
  789  000017a4  afa20000	sw	0(r29),r2
  790  000017a8  20010000	addi	r1,r0,#0
  791  000017ac  afc1fff4	sw	-12(r30),r1
  792  000017b0          	L37_LF2:
  793  000017b0  8fc10000	lw	r1,(r30)
  794  000017b4  20220001	addi	r2,r1,#1
  795  000017b8  afc20000	sw	(r30),r2
  796  000017bc  90210000	lbu	r1,(r1)
  797  000017c0  64220000	snei	r2,r1,#0
  798  000017c4  1440000c	bnez	r2,L39_LF2
  799  000017c8  54000000	nop; delay slot nop
  800  000017cc  0800001c	j	L38_LF2
  801  000017d0  54000000	nop; delay slot nop
  802  000017d4          	L39_LF2:
  803  000017d4  8fc2fff4	lw	r2,-12(r30)
  804  000017d8  20410001	addi	r1,r2,#1
  805  000017dc  00011020	add	r2,r0,r1
  806  000017e0  afc2fff4	sw	-12(r30),r2
  807  000017e4  0bffffc8	j	L37_LF2
  808  000017e8  54000000	nop; delay slot nop
  809  000017ec          	L38_LF2:
  810  000017ec  8fc1fff4	lw	r1,-12(r30)
  811  000017f0  08000004	j	L36_LF2
  812  000017f4  54000000	nop; delay slot nop
  813  000017f8          	L36_LF2:
  814  000017f8  8fa20000	lw	r2,0(r29)
  815  000017fc  8fdffff8	lw	r31,-8(r30)
  816  00001800  001ee820	add	r29,r0,r30
  817  00001804  8fdefffc	lw	r30,-4(r30)
  818  00001808  4be00000	jr	r31
  819  0000180c  54000000	nop
  820  00001810          	.endproc _dstrlen
  821  00001810          	.align 2
  822  00001810          	.proc _dstrstr
  823  00001810          	.global _dstrstr
  824  00001810          	_dstrstr:
  825                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  826  00001810  afbefffc	sw	-4(r29),r30; push fp
  827  00001814  001df020	add	r30,r0,r29; fp = sp
  828  00001818  afbffff8	sw	-8(r29),r31; push ret addr
  829  0000181c  2fbd0018	subui	r29,r29,#24; alloc local storage
  830  00001820  afa20000	sw	0(r29),r2
  831  00001824  23bdfff8	addi	r29,r29,#-8
  832  00001828  001d0820	add	r1,r0,r29
  833  0000182c  8fc20004	lw	r2,4(r30)
  834  00001830  ac220000	sw	(r1),r2
  835  00001834  0fffff5c	jal	_dstrlen
  836  00001838  54000000	nop; delay slot nop
  837  0000183c  23bd0008	addi	r29,r29,#8
  838  00001840  afc1fff4	sw	-12(r30),r1
  839  00001844          	L41_LF2:
  840  00001844  8fc10000	lw	r1,(r30)
  841  00001848  90220000	lbu	r2,(r1)
  842  0000184c  64410000	snei	r1,r2,#0
  843  00001850  1420000c	bnez	r1,L43_LF2
  844  00001854  54000000	nop; delay slot nop
  845  00001858  08000060	j	L42_LF2
  846  0000185c  54000000	nop; delay slot nop
  847  00001860          	L43_LF2:
  848  00001860  23bdfff0	addi	r29,r29,#-16
  849  00001864  001d0820	add	r1,r0,r29
  850  00001868  8fc20000	lw	r2,(r30)
  851  0000186c  ac220000	sw	(r1),r2
  852  00001870  8fc20004	lw	r2,4(r30)
  853  00001874  ac220004	sw	4(r1),r2
  854  00001878  8fc2fff4	lw	r2,-12(r30)
  855  0000187c  ac220008	sw	8(r1),r2
  856  00001880  0ffffdc0	jal	_dstrncmp
  857  00001884  54000000	nop; delay slot nop
  858  00001888  23bd0010	addi	r29,r29,#16
  859  0000188c  64220000	snei	r2,r1,#0
  860  00001890  14400010	bnez	r2,L44_LF2
  861  00001894  54000000	nop; delay slot nop
  862  00001898  8fc10000	lw	r1,(r30)
  863  0000189c  08000028	j	L40_LF2
  864  000018a0  54000000	nop; delay slot nop
  865  000018a4          	L44_LF2:
  866  000018a4  8fc20000	lw	r2,(r30)
  867  000018a8  20410001	addi	r1,r2,#1
  868  000018ac  00011020	add	r2,r0,r1
  869  000018b0  afc20000	sw	(r30),r2
  870  000018b4  0bffff8c	j	L41_LF2
  871  000018b8  54000000	nop; delay slot nop
  872  000018bc          	L42_LF2:
  873  000018bc  20010000	addi	r1,r0,#0
  874  000018c0  08000004	j	L40_LF2
  875  000018c4  54000000	nop; delay slot nop
  876  000018c8          	L40_LF2:
  877  000018c8  8fa20000	lw	r2,0(r29)
  878  000018cc  8fdffff8	lw	r31,-8(r30)
  879  000018d0  001ee820	add	r29,r0,r30
  880  000018d4  8fdefffc	lw	r30,-4(r30)
  881  000018d8  4be00000	jr	r31
  882  000018dc  54000000	nop
  883  000018e0          	.endproc _dstrstr
  884  000018e0          	.align 2
  885  000018e0          	.proc _dmindex
  886  000018e0          	.global _dmindex
  887  000018e0          	_dmindex:
  888                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  889  000018e0  afbefffc	sw	-4(r29),r30; push fp
  890  000018e4  001df020	add	r30,r0,r29; fp = sp
  891  000018e8  afbffff8	sw	-8(r29),r31; push ret addr
  892  000018ec  2fbd0018	subui	r29,r29,#24; alloc local storage
  893  000018f0  afa20000	sw	0(r29),r2
  894  000018f4  54000000	nop
  895  000018f8          	L46_LF2:
  896  000018f8  8fc10000	lw	r1,(r30)
  897  000018fc  90220000	lbu	r2,(r1)
  898  00001900  64410000	snei	r1,r2,#0
  899  00001904  1420000c	bnez	r1,L48_LF2
  900  00001908  54000000	nop; delay slot nop
  901  0000190c  08000070	j	L47_LF2
  902  00001910  54000000	nop; delay slot nop
  903  00001914          	L48_LF2:
  904  00001914  8fc10004	lw	r1,4(r30)
  905  00001918  afc1fff4	sw	-12(r30),r1
  906  0000191c          	L49_LF2:
  907  0000191c  8fc1fff4	lw	r1,-12(r30)
  908  00001920  90220000	lbu	r2,(r1)
  909  00001924  64410000	snei	r1,r2,#0
  910  00001928  1420000c	bnez	r1,L52_LF2
  911  0000192c  54000000	nop; delay slot nop
  912  00001930  08000044	j	L50_LF2
  913  00001934  54000000	nop; delay slot nop
  914  00001938          	L52_LF2:
  915  00001938  8fc10000	lw	r1,(r30)
  916  0000193c  8fc2fff4	lw	r2,-12(r30)
  917  00001940  90210000	lbu	r1,(r1)
  918  00001944  90420000	lbu	r2,(r2)
  919  00001948  00220828	seq	r1,r1,r2
  920  0000194c  10200010	beqz	r1,L51_LF2
  921  00001950  54000000	nop; delay slot nop
  922  00001954  8fc10000	lw	r1,(r30)
  923  00001958  08000030	j	L45_LF2
  924  0000195c  54000000	nop; delay slot nop
  925  00001960          	L53_LF2:
  926  00001960          	L51_LF2:
  927  00001960  8fc2fff4	lw	r2,-12(r30)
  928  00001964  20410001	addi	r1,r2,#1
  929  00001968  00011020	add	r2,r0,r1
  930  0000196c  afc2fff4	sw	-12(r30),r2
  931  00001970  0bffffa8	j	L49_LF2
  932  00001974  54000000	nop; delay slot nop
  933  00001978          	L50_LF2:
  934  00001978  0bffff7c	j	L46_LF2
  935  0000197c  54000000	nop; delay slot nop
  936  00001980          	L47_LF2:
  937  00001980  20010000	addi	r1,r0,#0
  938  00001984  08000004	j	L45_LF2
  939  00001988  54000000	nop; delay slot nop
  940  0000198c          	L45_LF2:
  941  0000198c  8fa20000	lw	r2,0(r29)
  942  00001990  8fdffff8	lw	r31,-8(r30)
  943  00001994  001ee820	add	r29,r0,r30
  944  00001998  8fdefffc	lw	r30,-4(r30)
  945  0000199c  4be00000	jr	r31
  946  000019a0  54000000	nop
  947  000019a4          	.endproc _dmindex
  948  000019a4          	.align 2
  949  000019a4          	.proc _dindex
  950  000019a4          	.global _dindex
  951  000019a4          	_dindex:
  952                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  953  000019a4  afbefffc	sw	-4(r29),r30; push fp
  954  000019a8  001df020	add	r30,r0,r29; fp = sp
  955  000019ac  afbffff8	sw	-8(r29),r31; push ret addr
  956  000019b0  2fbd0010	subui	r29,r29,#16; alloc local storage
  957  000019b4  afa20000	sw	0(r29),r2
  958  000019b8  54000000	nop
  959  000019bc          	L55_LF2:
  960  000019bc  8fc10000	lw	r1,(r30)
  961  000019c0  90220000	lbu	r2,(r1)
  962  000019c4  64410000	snei	r1,r2,#0
  963  000019c8  1420000c	bnez	r1,L57_LF2
  964  000019cc  54000000	nop; delay slot nop
  965  000019d0  08000040	j	L56_LF2
  966  000019d4  54000000	nop; delay slot nop
  967  000019d8          	L57_LF2:
  968  000019d8  8fc10000	lw	r1,(r30)
  969  000019dc  90220000	lbu	r2,(r1)
  970  000019e0  8fc10004	lw	r1,4(r30)
  971  000019e4  00411028	seq	r2,r2,r1
  972  000019e8  10400010	beqz	r2,L58_LF2
  973  000019ec  54000000	nop; delay slot nop
  974  000019f0  8fc10000	lw	r1,(r30)
  975  000019f4  08000028	j	L54_LF2
  976  000019f8  54000000	nop; delay slot nop
  977  000019fc          	L58_LF2:
  978  000019fc  8fc20000	lw	r2,(r30)
  979  00001a00  20410001	addi	r1,r2,#1
  980  00001a04  00011020	add	r2,r0,r1
  981  00001a08  afc20000	sw	(r30),r2
  982  00001a0c  0bffffac	j	L55_LF2
  983  00001a10  54000000	nop; delay slot nop
  984  00001a14          	L56_LF2:
  985  00001a14  20010000	addi	r1,r0,#0
  986  00001a18  08000004	j	L54_LF2
  987  00001a1c  54000000	nop; delay slot nop
  988  00001a20          	L54_LF2:
  989  00001a20  8fa20000	lw	r2,0(r29)
  990  00001a24  8fdffff8	lw	r31,-8(r30)
  991  00001a28  001ee820	add	r29,r0,r30
  992  00001a2c  8fdefffc	lw	r30,-4(r30)
  993  00001a30  4be00000	jr	r31
  994  00001a34  54000000	nop
  995  00001a38          	.endproc _dindex
  996  00001a38          	.align 2
  997  00001a38          	.proc _ditoa
  998  00001a38          	.global _ditoa
  999  00001a38          	_ditoa:
 1000                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1001  00001a38  afbefffc	sw	-4(r29),r30; push fp
 1002  00001a3c  001df020	add	r30,r0,r29; fp = sp
 1003  00001a40  afbffff8	sw	-8(r29),r31; push ret addr
 1004  00001a44  2fbd0018	subui	r29,r29,#24; alloc local storage
 1005  00001a48  afa20000	sw	0(r29),r2
 1006  00001a4c  afa30004	sw	4(r29),r3
 1007  00001a50  8fc10000	lw	r1,(r30)
 1008  00001a54  68220000	slti	r2,r1,#0
 1009  00001a58  1040002c	beqz	r2,L60_LF2
 1010  00001a5c  54000000	nop; delay slot nop
 1011  00001a60  8fc10004	lw	r1,4(r30)
 1012  00001a64  20220001	addi	r2,r1,#1
 1013  00001a68  afc20004	sw	4(r30),r2
 1014  00001a6c  2002002d	addi	r2,r0,(#0x2d)&0xff
 1015  00001a70  a0220000	sb	(r1),r2
 1016  00001a74  8fc10000	lw	r1,(r30)
 1017  00001a78  00011022	sub	r2,r0,r1
 1018  00001a7c  afc20000	sw	(r30),r2
 1019  00001a80  08000118	j	L61_LF2
 1020  00001a84  54000000	nop; delay slot nop
 1021  00001a88          	L60_LF2:
 1022  00001a88  8fc10000	lw	r1,(r30)
 1023  00001a8c  64220000	snei	r2,r1,#0
 1024  00001a90  14400020	bnez	r2,L62_LF2
 1025  00001a94  54000000	nop; delay slot nop
 1026  00001a98  8fc10004	lw	r1,4(r30)
 1027  00001a9c  20220001	addi	r2,r1,#1
 1028  00001aa0  afc20004	sw	4(r30),r2
 1029  00001aa4  20020030	addi	r2,r0,(#0x30)&0xff
 1030  00001aa8  a0220000	sb	(r1),r2
 1031  00001aac  080000ec	j	L61_LF2
 1032  00001ab0  54000000	nop; delay slot nop
 1033  00001ab4          	L62_LF2:
 1034  00001ab4  20010001	addi	r1,r0,#1
 1035  00001ab8  afc1fff4	sw	-12(r30),r1
 1036  00001abc          	L64_LF2:
 1037  00001abc  8fc1fff4	lw	r1,-12(r30)
 1038  00001ac0  8fc20000	lw	r2,(r30)
 1039  00001ac4  0022082c	sle	r1,r1,r2
 1040  00001ac8  1420000c	bnez	r1,L66_LF2
 1041  00001acc  54000000	nop; delay slot nop
 1042  00001ad0  08000024	j	L65_LF2
 1043  00001ad4  54000000	nop; delay slot nop
 1044  00001ad8          	L67_LF2:
 1045  00001ad8          	L66_LF2:
 1046  00001ad8  8fc1fff4	lw	r1,-12(r30)
 1047  00001adc  00011820	add	r3,r0,r1
 1048  00001ae0  50620002	slli	r2,r3,#0x2
 1049  00001ae4  00411020	add	r2,r2,r1
 1050  00001ae8  50410001	slli	r1,r2,#0x1
 1051  00001aec  afc1fff4	sw	-12(r30),r1
 1052  00001af0  0bffffc8	j	L64_LF2
 1053  00001af4  54000000	nop; delay slot nop
 1054  00001af8          	L65_LF2:
 1055  00001af8  54000000	nop
 1056  00001afc          	L68_LF2:
 1057  00001afc  8fc1fff4	lw	r1,-12(r30)
 1058  00001b00  2002000a	addi	r2,r0,#10
 1059  00001b04  00200035	movi2fp	f0,r1
 1060  00001b08  00400835	movi2fp	f1,r2
 1061  00001b0c  0401000f	div	f0,f0,f1
 1062  00001b10  00000834	movfp2i	r1,f0
 1063  00001b14  afc1fff4	sw	-12(r30),r1
 1064  00001b18  8fc10004	lw	r1,4(r30)
 1065  00001b1c  20220001	addi	r2,r1,#1
 1066  00001b20  afc20004	sw	4(r30),r2
 1067  00001b24  8fc20000	lw	r2,(r30)
 1068  00001b28  8fc3fff4	lw	r3,-12(r30)
 1069  00001b2c  00400035	movi2fp	f0,r2
 1070  00001b30  00600835	movi2fp	f1,r3
 1071  00001b34  0401000f	div	f0,f0,f1
 1072  00001b38  00001034	movfp2i	r2,f0
 1073  00001b3c  00021820	add	r3,r0,r2
 1074  00001b40  20620030	addi	r2,r3,#48
 1075  00001b44  a0220000	sb	(r1),r2
 1076  00001b48  8fc10000	lw	r1,(r30)
 1077  00001b4c  8fc3fff4	lw	r3,-12(r30)
 1078  00001b50  00200035	movi2fp	f0,r1
 1079  00001b54  00600835	movi2fp	f1,r3
 1080  00001b58  0401000f	div	f0,f0,f1
 1081  00001b5c  00001034	movfp2i	r2,f0
 1082  00001b60  8fc3fff4	lw	r3,-12(r30)
 1083  00001b64  00400035	movi2fp	f0,r2
 1084  00001b68  00600835	movi2fp	f1,r3
 1085  00001b6c  0401000e	mult	f0,f0,f1
 1086  00001b70  00001034	movfp2i	r2,f0
 1087  00001b74  00220822	sub	r1,r1,r2
 1088  00001b78  afc10000	sw	(r30),r1
 1089  00001b7c          	L70_LF2:
 1090  00001b7c  8fc1fff4	lw	r1,-12(r30)
 1091  00001b80  6c220001	sgti	r2,r1,#1
 1092  00001b84  1440000c	bnez	r2,L71_LF2
 1093  00001b88  54000000	nop; delay slot nop
 1094  00001b8c  0800000c	j	L61_LF2
 1095  00001b90  54000000	nop; delay slot nop
 1096  00001b94          	L71_LF2:
 1097  00001b94  0bffff64	j	L68_LF2
 1098  00001b98  54000000	nop; delay slot nop
 1099  00001b9c          	L69_LF2:
 1100  00001b9c          	L63_LF2:
 1101  00001b9c          	L61_LF2:
 1102  00001b9c  8fc10004	lw	r1,4(r30)
 1103  00001ba0  20020000	addi	r2,r0,(#0x0)&0xff
 1104  00001ba4  a0220000	sb	(r1),r2
 1105  00001ba8          	L59_LF2:
 1106  00001ba8  8fa20000	lw	r2,0(r29)
 1107  00001bac  8fa30004	lw	r3,4(r29)
 1108  00001bb0  8fdffff8	lw	r31,-8(r30)
 1109  00001bb4  001ee820	add	r29,r0,r30
 1110  00001bb8  8fdefffc	lw	r30,-4(r30)
 1111  00001bbc  4be00000	jr	r31
 1112  00001bc0  54000000	nop
 1113  00001bc4          	.endproc _ditoa
 1114  00001bc4          	.align 2
 1115  00001bc4          	.proc _dstrtol
 1116  00001bc4          	.global _dstrtol
 1117  00001bc4          	_dstrtol:
 1118                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1119  00001bc4  afbefffc	sw	-4(r29),r30; push fp
 1120  00001bc8  001df020	add	r30,r0,r29; fp = sp
 1121  00001bcc  afbffff8	sw	-8(r29),r31; push ret addr
 1122  00001bd0  2fbd0020	subui	r29,r29,#32; alloc local storage
 1123  00001bd4  afa20000	sw	0(r29),r2
 1124  00001bd8  20010000	addi	r1,r0,#0
 1125  00001bdc  afc1fff4	sw	-12(r30),r1
 1126  00001be0          	L73_LF2:
 1127  00001be0  8fc10000	lw	r1,(r30)
 1128  00001be4  90220000	lbu	r2,(r1)
 1129  00001be8  60410020	seqi	r1,r2,#32
 1130  00001bec  14200034	bnez	r1,L75_LF2
 1131  00001bf0  54000000	nop; delay slot nop
 1132  00001bf4  8fc10000	lw	r1,(r30)
 1133  00001bf8  90220000	lbu	r2,(r1)
 1134  00001bfc  60410009	seqi	r1,r2,#9
 1135  00001c00  14200020	bnez	r1,L75_LF2
 1136  00001c04  54000000	nop; delay slot nop
 1137  00001c08  8fc10000	lw	r1,(r30)
 1138  00001c0c  90220000	lbu	r2,(r1)
 1139  00001c10  6041000a	seqi	r1,r2,#10
 1140  00001c14  1420000c	bnez	r1,L75_LF2
 1141  00001c18  54000000	nop; delay slot nop
 1142  00001c1c  0800001c	j	L74_LF2
 1143  00001c20  54000000	nop; delay slot nop
 1144  00001c24          	L75_LF2:
 1145  00001c24  8fc20000	lw	r2,(r30)
 1146  00001c28  20410001	addi	r1,r2,#1
 1147  00001c2c  00011020	add	r2,r0,r1
 1148  00001c30  afc20000	sw	(r30),r2
 1149  00001c34  0bffffa8	j	L73_LF2
 1150  00001c38  54000000	nop; delay slot nop
 1151  00001c3c          	L74_LF2:
 1152  00001c3c  8fc10004	lw	r1,4(r30)
 1153  00001c40  64220000	snei	r2,r1,#0
 1154  00001c44  10400010	beqz	r2,L76_LF2
 1155  00001c48  54000000	nop; delay slot nop
 1156  00001c4c  8fc10004	lw	r1,4(r30)
 1157  00001c50  8fc20000	lw	r2,(r30)
 1158  00001c54  ac220000	sw	(r1),r2
 1159  00001c58          	L76_LF2:
 1160  00001c58  8fc10000	lw	r1,(r30)
 1161  00001c5c  90220000	lbu	r2,(r1)
 1162  00001c60  64410000	snei	r1,r2,#0
 1163  00001c64  14200010	bnez	r1,L77_LF2
 1164  00001c68  54000000	nop; delay slot nop
 1165  00001c6c  8fc1fff4	lw	r1,-12(r30)
 1166  00001c70  08000294	j	L72_LF2
 1167  00001c74  54000000	nop; delay slot nop
 1168  00001c78          	L77_LF2:
 1169  00001c78  8fc10000	lw	r1,(r30)
 1170  00001c7c  90220000	lbu	r2,(r1)
 1171  00001c80  6041002d	seqi	r1,r2,#45
 1172  00001c84  10200024	beqz	r1,L78_LF2
 1173  00001c88  54000000	nop; delay slot nop
 1174  00001c8c  2001ffff	addi	r1,r0,#-1
 1175  00001c90  afc1ffec	sw	-20(r30),r1
 1176  00001c94  8fc20000	lw	r2,(r30)
 1177  00001c98  20410001	addi	r1,r2,#1
 1178  00001c9c  00011020	add	r2,r0,r1
 1179  00001ca0  afc20000	sw	(r30),r2
 1180  00001ca4  0800000c	j	L79_LF2
 1181  00001ca8  54000000	nop; delay slot nop
 1182  00001cac          	L78_LF2:
 1183  00001cac  20010001	addi	r1,r0,#1
 1184  00001cb0  afc1ffec	sw	-20(r30),r1
 1185  00001cb4          	L79_LF2:
 1186  00001cb4  8fc10008	lw	r1,8(r30)
 1187  00001cb8  64220000	snei	r2,r1,#0
 1188  00001cbc  14400090	bnez	r2,L80_LF2
 1189  00001cc0  54000000	nop; delay slot nop
 1190  00001cc4  8fc10000	lw	r1,(r30)
 1191  00001cc8  90220000	lbu	r2,(r1)
 1192  00001ccc  60410030	seqi	r1,r2,#48
 1193  00001cd0  10200074	beqz	r1,L81_LF2
 1194  00001cd4  54000000	nop; delay slot nop
 1195  00001cd8  8fc20000	lw	r2,(r30)
 1196  00001cdc  20410001	addi	r1,r2,#1
 1197  00001ce0  00011020	add	r2,r0,r1
 1198  00001ce4  afc20000	sw	(r30),r2
 1199  00001ce8  8fc10000	lw	r1,(r30)
 1200  00001cec  90220000	lbu	r2,(r1)
 1201  00001cf0  60410078	seqi	r1,r2,#120
 1202  00001cf4  14200020	bnez	r1,L83_LF2
 1203  00001cf8  54000000	nop; delay slot nop
 1204  00001cfc  8fc10000	lw	r1,(r30)
 1205  00001d00  90220000	lbu	r2,(r1)
 1206  00001d04  60410058	seqi	r1,r2,#88
 1207  00001d08  1420000c	bnez	r1,L83_LF2
 1208  00001d0c  54000000	nop; delay slot nop
 1209  00001d10  08000024	j	L82_LF2
 1210  00001d14  54000000	nop; delay slot nop
 1211  00001d18          	L83_LF2:
 1212  00001d18  20010010	addi	r1,r0,#16
 1213  00001d1c  afc10008	sw	8(r30),r1
 1214  00001d20  8fc20000	lw	r2,(r30)
 1215  00001d24  20410001	addi	r1,r2,#1
 1216  00001d28  00011020	add	r2,r0,r1
 1217  00001d2c  afc20000	sw	(r30),r2
 1218  00001d30  0800000c	j	L84_LF2
 1219  00001d34  54000000	nop; delay slot nop
 1220  00001d38          	L82_LF2:
 1221  00001d38  20010008	addi	r1,r0,#8
 1222  00001d3c  afc10008	sw	8(r30),r1
 1223  00001d40          	L84_LF2:
 1224  00001d40  0800000c	j	L80_LF2
 1225  00001d44  54000000	nop; delay slot nop
 1226  00001d48          	L81_LF2:
 1227  00001d48  2001000a	addi	r1,r0,#10
 1228  00001d4c  afc10008	sw	8(r30),r1
 1229  00001d50          	L85_LF2:
 1230  00001d50          	L80_LF2:
 1231  00001d50  8fc10008	lw	r1,8(r30)
 1232  00001d54  70220000	slei	r2,r1,#0
 1233  00001d58  1440001c	bnez	r2,L87_LF2
 1234  00001d5c  54000000	nop; delay slot nop
 1235  00001d60  8fc10008	lw	r1,8(r30)
 1236  00001d64  6c220010	sgti	r2,r1,#16
 1237  00001d68  1440000c	bnez	r2,L87_LF2
 1238  00001d6c  54000000	nop; delay slot nop
 1239  00001d70  08000010	j	L86_LF2
 1240  00001d74  54000000	nop; delay slot nop
 1241  00001d78          	L87_LF2:
 1242  00001d78  8fc1fff4	lw	r1,-12(r30)
 1243  00001d7c  08000188	j	L72_LF2
 1244  00001d80  54000000	nop; delay slot nop
 1245  00001d84          	L86_LF2:
 1246  00001d84  54000000	nop
 1247  00001d88          	L88_LF2:
 1248  00001d88  8fc10000	lw	r1,(r30)
 1249  00001d8c  90220000	lbu	r2,(r1)
 1250  00001d90  6c41002f	sgtui	r1,r2,#47
 1251  00001d94  10200030	beqz	r1,L91_LF2
 1252  00001d98  54000000	nop; delay slot nop
 1253  00001d9c  8fc10000	lw	r1,(r30)
 1254  00001da0  90220000	lbu	r2,(r1)
 1255  00001da4  70410039	sleui	r1,r2,#57
 1256  00001da8  1020001c	beqz	r1,L91_LF2
 1257  00001dac  54000000	nop; delay slot nop
 1258  00001db0  8fc10000	lw	r1,(r30)
 1259  00001db4  90220000	lbu	r2,(r1)
 1260  00001db8  2041ffd0	addi	r1,r2,#-48
 1261  00001dbc  afc1fff0	sw	-16(r30),r1
 1262  00001dc0  0800008c	j	L92_LF2
 1263  00001dc4  54000000	nop; delay slot nop
 1264  00001dc8          	L91_LF2:
 1265  00001dc8  8fc10000	lw	r1,(r30)
 1266  00001dcc  90220000	lbu	r2,(r1)
 1267  00001dd0  6c410060	sgtui	r1,r2,#96
 1268  00001dd4  10200030	beqz	r1,L93_LF2
 1269  00001dd8  54000000	nop; delay slot nop
 1270  00001ddc  8fc10000	lw	r1,(r30)
 1271  00001de0  90220000	lbu	r2,(r1)
 1272  00001de4  7041007a	sleui	r1,r2,#122
 1273  00001de8  1020001c	beqz	r1,L93_LF2
 1274  00001dec  54000000	nop; delay slot nop
 1275  00001df0  8fc10000	lw	r1,(r30)
 1276  00001df4  90220000	lbu	r2,(r1)
 1277  00001df8  2041ffa9	addi	r1,r2,#-87
 1278  00001dfc  afc1fff0	sw	-16(r30),r1
 1279  00001e00  0800004c	j	L92_LF2
 1280  00001e04  54000000	nop; delay slot nop
 1281  00001e08          	L93_LF2:
 1282  00001e08  8fc10000	lw	r1,(r30)
 1283  00001e0c  90220000	lbu	r2,(r1)
 1284  00001e10  6c410040	sgtui	r1,r2,#64
 1285  00001e14  10200030	beqz	r1,L95_LF2
 1286  00001e18  54000000	nop; delay slot nop
 1287  00001e1c  8fc10000	lw	r1,(r30)
 1288  00001e20  90220000	lbu	r2,(r1)
 1289  00001e24  7041005a	sleui	r1,r2,#90
 1290  00001e28  1020001c	beqz	r1,L95_LF2
 1291  00001e2c  54000000	nop; delay slot nop
 1292  00001e30  8fc10000	lw	r1,(r30)
 1293  00001e34  90220000	lbu	r2,(r1)
 1294  00001e38  2041ffc9	addi	r1,r2,#-55
 1295  00001e3c  afc1fff0	sw	-16(r30),r1
 1296  00001e40  0800000c	j	L92_LF2
 1297  00001e44  54000000	nop; delay slot nop
 1298  00001e48          	L95_LF2:
 1299  00001e48  200103e8	addi	r1,r0,#1000
 1300  00001e4c  afc1fff0	sw	-16(r30),r1
 1301  00001e50          	L96_LF2:
 1302  00001e50          	L94_LF2:
 1303  00001e50          	L92_LF2:
 1304  00001e50  8fc1fff0	lw	r1,-16(r30)
 1305  00001e54  8fc20008	lw	r2,8(r30)
 1306  00001e58  0022082a	slt	r1,r1,r2
 1307  00001e5c  10200040	beqz	r1,L90_LF2
 1308  00001e60  54000000	nop; delay slot nop
 1309  00001e64  8fc1fff4	lw	r1,-12(r30)
 1310  00001e68  8fc20008	lw	r2,8(r30)
 1311  00001e6c  00200035	movi2fp	f0,r1
 1312  00001e70  00400835	movi2fp	f1,r2
 1313  00001e74  0401000e	mult	f0,f0,f1
 1314  00001e78  00000834	movfp2i	r1,f0
 1315  00001e7c  afc1fff4	sw	-12(r30),r1
 1316  00001e80  8fc1fff4	lw	r1,-12(r30)
 1317  00001e84  8fc2fff0	lw	r2,-16(r30)
 1318  00001e88  00220820	add	r1,r1,r2
 1319  00001e8c  afc1fff4	sw	-12(r30),r1
 1320  00001e90  8fc20000	lw	r2,(r30)
 1321  00001e94  20410001	addi	r1,r2,#1
 1322  00001e98  00011020	add	r2,r0,r1
 1323  00001e9c  afc20000	sw	(r30),r2
 1324  00001ea0          	L97_LF2:
 1325  00001ea0          	L90_LF2:
 1326  00001ea0  8fc1fff0	lw	r1,-16(r30)
 1327  00001ea4  8fc20008	lw	r2,8(r30)
 1328  00001ea8  0022082a	slt	r1,r1,r2
 1329  00001eac  1420000c	bnez	r1,L98_LF2
 1330  00001eb0  54000000	nop; delay slot nop
 1331  00001eb4  0800000c	j	L89_LF2
 1332  00001eb8  54000000	nop; delay slot nop
 1333  00001ebc          	L98_LF2:
 1334  00001ebc  0bfffec8	j	L88_LF2
 1335  00001ec0  54000000	nop; delay slot nop
 1336  00001ec4          	L89_LF2:
 1337  00001ec4  8fc10004	lw	r1,4(r30)
 1338  00001ec8  64220000	snei	r2,r1,#0
 1339  00001ecc  10400010	beqz	r2,L99_LF2
 1340  00001ed0  54000000	nop; delay slot nop
 1341  00001ed4  8fc10004	lw	r1,4(r30)
 1342  00001ed8  8fc20000	lw	r2,(r30)
 1343  00001edc  ac220000	sw	(r1),r2
 1344  00001ee0          	L99_LF2:
 1345  00001ee0  8fc1fff4	lw	r1,-12(r30)
 1346  00001ee4  8fc2ffec	lw	r2,-20(r30)
 1347  00001ee8  00200035	movi2fp	f0,r1
 1348  00001eec  00400835	movi2fp	f1,r2
 1349  00001ef0  0401000e	mult	f0,f0,f1
 1350  00001ef4  00000834	movfp2i	r1,f0
 1351  00001ef8  afc1fff4	sw	-12(r30),r1
 1352  00001efc  8fc1fff4	lw	r1,-12(r30)
 1353  00001f00  08000004	j	L72_LF2
 1354  00001f04  54000000	nop; delay slot nop
 1355  00001f08          	L72_LF2:
 1356  00001f08  8fa20000	lw	r2,0(r29)
 1357  00001f0c  8fdffff8	lw	r31,-8(r30)
 1358  00001f10  001ee820	add	r29,r0,r30
 1359  00001f14  8fdefffc	lw	r30,-4(r30)
 1360  00001f18  4be00000	jr	r31
 1361  00001f1c  54000000	nop
 1362  00001f20          	.endproc _dstrtol
 1363  00001f20          	.align 2
 1364  00001f20          	.proc _bcopy
 1365  00001f20          	.global _bcopy
 1366  00001f20          	_bcopy:
 1367                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1368  00001f20  afbefffc	sw	-4(r29),r30; push fp
 1369  00001f24  001df020	add	r30,r0,r29; fp = sp
 1370  00001f28  afbffff8	sw	-8(r29),r31; push ret addr
 1371  00001f2c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1372  00001f30  afa20000	sw	0(r29),r2
 1373  00001f34  afa30004	sw	4(r29),r3
 1374  00001f38  54000000	nop
 1375  00001f3c          	L101_LF2:
 1376  00001f3c  8fc10008	lw	r1,8(r30)
 1377  00001f40  2022ffff	addi	r2,r1,#-1
 1378  00001f44  afc20008	sw	8(r30),r2
 1379  00001f48  6c210000	sgti	r1,r1,#0
 1380  00001f4c  1420000c	bnez	r1,L103_LF2
 1381  00001f50  54000000	nop; delay slot nop
 1382  00001f54  0800002c	j	L102_LF2
 1383  00001f58  54000000	nop; delay slot nop
 1384  00001f5c          	L103_LF2:
 1385  00001f5c  8fc10004	lw	r1,4(r30)
 1386  00001f60  20220001	addi	r2,r1,#1
 1387  00001f64  afc20004	sw	4(r30),r2
 1388  00001f68  8fc20000	lw	r2,(r30)
 1389  00001f6c  20430001	addi	r3,r2,#1
 1390  00001f70  afc30000	sw	(r30),r3
 1391  00001f74  80420000	lb	r2,(r2)
 1392  00001f78  a0220000	sb	(r1),r2
 1393  00001f7c  0bffffbc	j	L101_LF2
 1394  00001f80  54000000	nop; delay slot nop
 1395  00001f84          	L102_LF2:
 1396  00001f84          	L100_LF2:
 1397  00001f84  8fa20000	lw	r2,0(r29)
 1398  00001f88  8fa30004	lw	r3,4(r29)
 1399  00001f8c  8fdffff8	lw	r31,-8(r30)
 1400  00001f90  001ee820	add	r29,r0,r30
 1401  00001f94  8fdefffc	lw	r30,-4(r30)
 1402  00001f98  4be00000	jr	r31
 1403  00001f9c  54000000	nop
 1404  00001fa0          	.endproc _bcopy
 1405  00001fa0          	.align 2
 1406  00001fa0          	.proc _bzero
 1407  00001fa0          	.global _bzero
 1408  00001fa0          	_bzero:
 1409                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1410  00001fa0  afbefffc	sw	-4(r29),r30; push fp
 1411  00001fa4  001df020	add	r30,r0,r29; fp = sp
 1412  00001fa8  afbffff8	sw	-8(r29),r31; push ret addr
 1413  00001fac  2fbd0010	subui	r29,r29,#16; alloc local storage
 1414  00001fb0  afa20000	sw	0(r29),r2
 1415  00001fb4  54000000	nop
 1416  00001fb8          	L105_LF2:
 1417  00001fb8  8fc10004	lw	r1,4(r30)
 1418  00001fbc  2022ffff	addi	r2,r1,#-1
 1419  00001fc0  afc20004	sw	4(r30),r2
 1420  00001fc4  6c210000	sgti	r1,r1,#0
 1421  00001fc8  1420000c	bnez	r1,L107_LF2
 1422  00001fcc  54000000	nop; delay slot nop
 1423  00001fd0  08000020	j	L106_LF2
 1424  00001fd4  54000000	nop; delay slot nop
 1425  00001fd8          	L107_LF2:
 1426  00001fd8  8fc10000	lw	r1,(r30)
 1427  00001fdc  20220001	addi	r2,r1,#1
 1428  00001fe0  afc20000	sw	(r30),r2
 1429  00001fe4  20020000	addi	r2,r0,(#0x0)&0xff
 1430  00001fe8  a0220000	sb	(r1),r2
 1431  00001fec  0bffffc8	j	L105_LF2
 1432  00001ff0  54000000	nop; delay slot nop
 1433  00001ff4          	L106_LF2:
 1434  00001ff4          	L104_LF2:
 1435  00001ff4  8fa20000	lw	r2,0(r29)
 1436  00001ff8  8fdffff8	lw	r31,-8(r30)
 1437  00001ffc  001ee820	add	r29,r0,r30
 1438  00002000  8fdefffc	lw	r30,-4(r30)
 1439  00002004  4be00000	jr	r31
 1440  00002008  54000000	nop
 1441  0000200c          	.endproc _bzero
 1442  0000200c          	.align 2
 1443  0000200c          	.proc _min
 1444  0000200c          	.global _min
 1445  0000200c          	_min:
 1446                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1447  0000200c  afbefffc	sw	-4(r29),r30; push fp
 1448  00002010  001df020	add	r30,r0,r29; fp = sp
 1449  00002014  afbffff8	sw	-8(r29),r31; push ret addr
 1450  00002018  2fbd0010	subui	r29,r29,#16; alloc local storage
 1451  0000201c  afa20000	sw	0(r29),r2
 1452  00002020  afa30004	sw	4(r29),r3
 1453  00002024  8fc10000	lw	r1,(r30)
 1454  00002028  8fc20004	lw	r2,4(r30)
 1455  0000202c  0022182c	sle	r3,r1,r2
 1456  00002030  14600008	bnez	r3,L109_LF2
 1457  00002034  54000000	nop; delay slot nop
 1458  00002038  8fc10004	lw	r1,4(r30)
 1459  0000203c          	L109_LF2:
 1460  0000203c  08000004	j	L108_LF2
 1461  00002040  54000000	nop; delay slot nop
 1462  00002044          	L108_LF2:
 1463  00002044  8fa20000	lw	r2,0(r29)
 1464  00002048  8fa30004	lw	r3,4(r29)
 1465  0000204c  8fdffff8	lw	r31,-8(r30)
 1466  00002050  001ee820	add	r29,r0,r30
 1467  00002054  8fdefffc	lw	r30,-4(r30)
 1468  00002058  4be00000	jr	r31
 1469  0000205c  54000000	nop
 1470  00002060          	.endproc _min
 1471  00002060          	.align 2
 1472  00002060          	.proc _max
 1473  00002060          	.global _max
 1474  00002060          	_max:
 1475                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1476  00002060  afbefffc	sw	-4(r29),r30; push fp
 1477  00002064  001df020	add	r30,r0,r29; fp = sp
 1478  00002068  afbffff8	sw	-8(r29),r31; push ret addr
 1479  0000206c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1480  00002070  afa20000	sw	0(r29),r2
 1481  00002074  afa30004	sw	4(r29),r3
 1482  00002078  8fc10000	lw	r1,(r30)
 1483  0000207c  8fc20004	lw	r2,4(r30)
 1484  00002080  0022182d	sge	r3,r1,r2
 1485  00002084  14600008	bnez	r3,L111_LF2
 1486  00002088  54000000	nop; delay slot nop
 1487  0000208c  8fc10004	lw	r1,4(r30)
 1488  00002090          	L111_LF2:
 1489  00002090  08000004	j	L110_LF2
 1490  00002094  54000000	nop; delay slot nop
 1491  00002098          	L110_LF2:
 1492  00002098  8fa20000	lw	r2,0(r29)
 1493  0000209c  8fa30004	lw	r3,4(r29)
 1494  000020a0  8fdffff8	lw	r31,-8(r30)
 1495  000020a4  001ee820	add	r29,r0,r30
 1496  000020a8  8fdefffc	lw	r30,-4(r30)
 1497  000020ac  4be00000	jr	r31
 1498  000020b0  54000000	nop
 1499  000020b4          	.endproc _max
 1500                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1501                      ;;;
 1502                      ;;; Most of the traps are called in files from libtraps.
 1505  000020b4          	.align 2
 1506  000020b4          	.proc _exit
 1507  000020b4          	.global _exit
 1508  000020b4          	_exit:
 1509  000020b4  44000300	trap	#0x300
 1510  000020b8  4be00000	jr	r31
 1511  000020bc  54000000	nop
 1512  000020c0          	.endproc _exit
 1514                      ; for the benefit of gcc.
 1515  000020c0          	.proc ___main
 1516  000020c0          	.global ___main
 1517  000020c0          	___main:
 1518  000020c0  4be00000	jr	r31
 1519  000020c4  54000000	nop
 1520  000020c8          	.endproc ___main
 1521  000020c8          	.text
 1522  000020c8          	.global _etext
 1523  000020c8          	_etext:
 1524  000020c8          	.align 3
 1525  000020c8          	.data
 1526  00003071          	.global _edata
 1527  00003071          	_edata:
