 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 206
    4                      ; Text size: 4360
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
   82  00003004  653a2025	
   82  00003008  73203c68	
   82  0000300c  616e646c	
   82  00003010  655f746f	
   82  00003014  5f70726f	
   82  00003018  63735f63	
   82  0000301c  6f6d706c	
   82  00003020  65746564	
   82  00003024  5f73656d	
   82  00003028  6170686f	
   82  0000302c  72653e0a	
   82  00003030  00      	
   83  00003031          	.align 2
   84  00003034          	LC1_LF0:
   85  00003034  6f75745f	.ascii "out_page (%d): This program will access memory outside of allocated pa"
   85  00003038  70616765	
   85  0000303c  20282564	
   85  00003040  293a2054	
   85  00003044  68697320	
   85  00003048  70726f67	
   85  0000304c  72616d20	
   85  00003050  77696c6c	
   85  00003054  20616363	
   85  00003058  65737320	
   85  0000305c  6d656d6f	
   85  00003060  7279206f	
   85  00003064  75747369	
   85  00003068  6465206f	
   85  0000306c  6620616c	
   85  00003070  6c6f6361	
   85  00003074  74656420	
   85  00003078  7061    	
   86  0000307a  67657321	.ascii "ges!\n\000"
   86  0000307e  0a00    	
   87  00003080          	.align 2
   88  00003080          	LC2_LF0:
   89  00003080  6f75745f	.ascii "out_page (%d): Bad semaphore s_procs_completed (%d)!\n\000"
   89  00003084  70616765	
   89  00003088  20282564	
   89  0000308c  293a2042	
   89  00003090  61642073	
   89  00003094  656d6170	
   89  00003098  686f7265	
   89  0000309c  20735f70	
   89  000030a0  726f6373	
   89  000030a4  5f636f6d	
   89  000030a8  706c6574	
   89  000030ac  65642028	
   89  000030b0  25642921	
   89  000030b4  0a00    	
   90  000030b6          	.align 2
   91  000030b8          	LC3_LF0:
   92  000030b8  6f75745f	.ascii "out_page (%d): Done!\n\000"
   92  000030bc  70616765	
   92  000030c0  20282564	
   92  000030c4  293a2044	
   92  000030c8  6f6e6521	
   92  000030cc  0a00    	
   93  000030ce          	.text
   94  000010d4          	.align 2
   95  000010d4          	.proc _main
   96  000010d4          	.global _main
   97  000010d4          	_main:
   98                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
   99  000010d4  afbefffc	sw	-4(r29),r30; push fp
  100  000010d8  001df020	add	r30,r0,r29; fp = sp
  101  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  102  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  103  000010e4  8fc20000	lw	r2,(r30)
  104  000010e8  8fc30004	lw	r3,4(r30)
  105  000010ec  0c001010	jal	___main
  106  000010f0  54000000	nop; not filled.
  107  000010f4  64410002	snei	r1,r2,#2
  108  000010f8  10200028	beqz	r1,L17_LF0
  109  000010fc  54000000	nop; not filled.
  110  00001100  23bdfff8	addi	r29,r29,#-8
  111  00001104  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  112  00001108  24843000	addui	r4,r4,(LC0_LF0)&0xffff
  113  0000110c  afa40000	sw	(r29),r4
  114  00001110  0c00012c	jal	_Printf
  115  00001114  54000000	nop; not filled.
  116  00001118  0c00022c	jal	_Exit
  117  0000111c  54000000	nop; not filled.
  118  00001120  23bd0008	addi	r29,r29,#8
  119  00001124          	L17_LF0:
  120  00001124  23bdfff0	addi	r29,r29,#-16
  121  00001128  8c630004	lw	r3,4(r3)
  122  0000112c  afa30000	sw	(r29),r3
  123  00001130  20040000	addi	r4,r0,#0
  124  00001134  afa40004	sw	4(r29),r4
  125  00001138  2004000a	addi	r4,r0,#10
  126  0000113c  afa40008	sw	8(r29),r4
  127  00001140  0c000ac0	jal	_dstrtol
  128  00001144  54000000	nop; not filled.
  129  00001148  00011020	add	r2,r0,r1
  130  0000114c  0c0000fc	jal	_getpid
  131  00001150  54000000	nop; not filled.
  132  00001154  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  133  00001158  24843034	addui	r4,r4,(LC1_LF0)&0xffff
  134  0000115c  afa40000	sw	(r29),r4
  135  00001160  afa10004	sw	4(r29),r1
  136  00001164  0c0000d8	jal	_Printf
  137  00001168  54000000	nop; not filled.
  138  0000116c  afa20000	sw	(r29),r2
  139  00001170  0c000120	jal	_sem_signal
  140  00001174  54000000	nop; not filled.
  141  00001178  23bd0010	addi	r29,r29,#16
  142  0000117c  64210001	snei	r1,r1,#1
  143  00001180  10200038	beqz	r1,L18_LF0
  144  00001184  54000000	nop; not filled.
  145  00001188  0c0000c0	jal	_getpid
  146  0000118c  54000000	nop; not filled.
  147  00001190  23bdfff0	addi	r29,r29,#-16
  148  00001194  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  149  00001198  24843080	addui	r4,r4,(LC2_LF0)&0xffff
  150  0000119c  afa40000	sw	(r29),r4
  151  000011a0  afa10004	sw	4(r29),r1
  152  000011a4  afa20008	sw	8(r29),r2
  153  000011a8  0c000094	jal	_Printf
  154  000011ac  54000000	nop; not filled.
  155  000011b0  0c000194	jal	_Exit
  156  000011b4  54000000	nop; not filled.
  157  000011b8  23bd0010	addi	r29,r29,#16
  158  000011bc          	L18_LF0:
  159  000011bc  20015fff	addi	r1,r0,#24575
  160  000011c0  20040002	addi	r4,r0,(#0x2)&0xff
  161  000011c4  a0240000	sb	(r1),r4
  162  000011c8  0c000080	jal	_getpid
  163  000011cc  54000000	nop; not filled.
  164  000011d0  23bdfff8	addi	r29,r29,#-8
  165  000011d4  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  166  000011d8  248430b8	addui	r4,r4,(LC3_LF0)&0xffff
  167  000011dc  afa40000	sw	(r29),r4
  168  000011e0  afa10004	sw	4(r29),r1
  169  000011e4  0c000058	jal	_Printf
  170  000011e8  54000000	nop; not filled.
  171  000011ec  23bd0008	addi	r29,r29,#8
  172  000011f0  0c000f00	jal	_exit
  173  000011f4  54000000	nop
  174  000011f8          	.endproc _main
  175                      ;;;
  176                      ;;; Stub functions for DLX traps.
  177                      ;;;
  178                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  179                      ;;;
  180                      ;;; The traps such as Open and Close
  181                      ;;; (note the capital letters) are for use by user programs.  The traps
  182                      ;;; with names such as open and close (lower case) are for use by the OS.
  183                      ;;;
  186  000011f8          	.align 2
  188                      ;;; The following are the traps to be used by user-level programs
  189                      ;;;
  191  000011f8          	.align 2
  192  000011f8          	.proc _Open
  193  000011f8          	.global _Open
  194  000011f8          	_Open:
  195                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  196                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  197                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  198  000011f8  44000213	trap	#0x213
  199  000011fc  4be00000	jr	r31
  200  00001200  54000000	nop
  201  00001204          	.endproc _Open
  203  00001204          	.proc _Close
  204  00001204          	.global _Close
  205  00001204          	_Close:
  206  00001204  44000214	trap	#0x214
  207  00001208  4be00000	jr	r31
  208  0000120c  54000000	nop
  209  00001210          	.endproc _Close
  211  00001210          	.proc _Read
  212  00001210          	.global _Read
  213  00001210          	_Read:
  214  00001210  44000210	trap	#0x210
  215  00001214  4be00000	jr	r31
  216  00001218  54000000	nop
  217  0000121c          	.endproc _Read
  219  0000121c          	.proc _Write
  220  0000121c          	.global _Write
  221  0000121c          	_Write:
  222  0000121c  44000211	trap	#0x211
  223  00001220  4be00000	jr	r31
  224  00001224  54000000	nop
  225  00001228          	.endproc _Write
  227  00001228          	.proc _Lseek
  228  00001228          	.global _Lseek
  229  00001228          	_Lseek:
  230  00001228  44000212	trap	#0x212
  231  0000122c  4be00000	jr	r31
  232  00001230  54000000	nop
  233  00001234          	.endproc _Lseek
  235  00001234          	.proc _Putchar
  236  00001234          	.global _Putchar
  237  00001234          	_Putchar:
  238  00001234  44000280	trap	#0x280
  239  00001238  4be00000	jr	r31
  240  0000123c  54000000	nop
  241  00001240          	.endproc _Putchar
  243  00001240          	.proc _Printf
  244  00001240          	.global _Printf
  245  00001240          	_Printf:
  246  00001240  44000201	trap	#0x201
  247  00001244  4be00000	jr	r31
  248  00001248  54000000	nop
  249  0000124c          	.endproc _Printf
  251  0000124c          	.proc _getpid
  252  0000124c          	.global _getpid
  253  0000124c          	_getpid:
  254  0000124c  44000431	trap	#0x431
  255  00001250  4be00000	jr	r31
  256  00001254  54000000	nop
  257  00001258          	.endproc _getpid
  259  00001258          	.proc _process_create
  260  00001258          	.global _process_create
  261  00001258          	_process_create:
  262  00001258  44000432	trap	#0x432
  263  0000125c  4be00000	jr	r31
  264  00001260  54000000	nop
  265  00001264          	.endproc _process_create
  267  00001264          	.proc _shmget
  268  00001264          	.global _shmget
  269  00001264          	_shmget:
  270  00001264  44000440	trap	#0x440
  271  00001268  4be00000	jr	r31
  272  0000126c  54000000	nop
  273  00001270          	.endproc _shmget
  275  00001270          	.proc _shmat
  276  00001270          	.global _shmat
  277  00001270          	_shmat:
  278  00001270  44000441	trap	#0x441
  279  00001274  4be00000	jr	r31
  280  00001278  54000000	nop
  281  0000127c          	.endproc _shmat
  283  0000127c          	.proc _sem_create
  284  0000127c          	.global _sem_create
  285  0000127c          	_sem_create:
  286  0000127c  44000450	trap	#0x450
  287  00001280  4be00000	jr	r31
  288  00001284  54000000	nop
  289  00001288          	.endproc _sem_create
  291  00001288          	.proc _sem_wait
  292  00001288          	.global _sem_wait
  293  00001288          	_sem_wait:
  294  00001288  44000451	trap	#0x451
  295  0000128c  4be00000	jr	r31
  296  00001290  54000000	nop
  297  00001294          	.endproc _sem_wait
  299  00001294          	.proc _sem_signal
  300  00001294          	.global _sem_signal
  301  00001294          	_sem_signal:
  302  00001294  44000452	trap	#0x452
  303  00001298  4be00000	jr	r31
  304  0000129c  54000000	nop
  305  000012a0          	.endproc _sem_signal
  307  000012a0          	.proc _lock_create
  308  000012a0          	.global _lock_create
  309  000012a0          	_lock_create:
  310  000012a0  44000453	trap	#0x453
  311  000012a4  4be00000	jr	r31
  312  000012a8  54000000	nop
  313  000012ac          	.endproc _lock_create
  315  000012ac          	.proc _lock_acquire
  316  000012ac          	.global _lock_acquire
  317  000012ac          	_lock_acquire:
  318  000012ac  44000454	trap	#0x454
  319  000012b0  4be00000	jr	r31
  320  000012b4  54000000	nop
  321  000012b8          	.endproc _lock_acquire
  323  000012b8          	.proc _lock_release
  324  000012b8          	.global _lock_release
  325  000012b8          	_lock_release:
  326  000012b8  44000455	trap	#0x455
  327  000012bc  4be00000	jr	r31
  328  000012c0  54000000	nop
  329  000012c4          	.endproc _lock_release
  331  000012c4          	.proc _cond_create
  332  000012c4          	.global _cond_create
  333  000012c4          	_cond_create:
  334  000012c4  44000456	trap	#0x456
  335  000012c8  4be00000	jr	r31
  336  000012cc  54000000	nop
  337  000012d0          	.endproc _cond_create
  339  000012d0          	.proc _cond_wait
  340  000012d0          	.global _cond_wait
  341  000012d0          	_cond_wait:
  342  000012d0  44000457	trap	#0x457
  343  000012d4  4be00000	jr	r31
  344  000012d8  54000000	nop
  345  000012dc          	.endproc _cond_wait
  347  000012dc          	.proc _cond_signal
  348  000012dc          	.global _cond_signal
  349  000012dc          	_cond_signal:
  350  000012dc  44000458	trap	#0x458
  351  000012e0  4be00000	jr	r31
  352  000012e4  54000000	nop
  353  000012e8          	.endproc _cond_signal
  355  000012e8          	.proc _cond_broadcast
  356  000012e8          	.global _cond_broadcast
  357  000012e8          	_cond_broadcast:
  358  000012e8  44000459	trap	#0x459
  359  000012ec  4be00000	jr	r31
  360  000012f0  54000000	nop
  361  000012f4          	.endproc _cond_broadcast
  363  000012f4          	.proc _mbox_create
  364  000012f4          	.global _mbox_create
  365  000012f4          	_mbox_create:
  366  000012f4  44000460	trap	#0x460
  367  000012f8  4be00000	jr	r31
  368  000012fc  54000000	nop
  369  00001300          	.endproc _mbox_create
  371  00001300          	.proc _mbox_open
  372  00001300          	.global _mbox_open
  373  00001300          	_mbox_open:
  374  00001300  44000461	trap	#0x461
  375  00001304  4be00000	jr	r31
  376  00001308  54000000	nop
  377  0000130c          	.endproc _mbox_open
  379  0000130c          	.proc _mbox_close
  380  0000130c          	.global _mbox_close
  381  0000130c          	_mbox_close:
  382  0000130c  44000462	trap	#0x462
  383  00001310  4be00000	jr	r31
  384  00001314  54000000	nop
  385  00001318          	.endproc _mbox_close
  387  00001318          	.proc _mbox_send
  388  00001318          	.global _mbox_send
  389  00001318          	_mbox_send:
  390  00001318  44000463	trap	#0x463
  391  0000131c  4be00000	jr	r31
  392  00001320  54000000	nop
  393  00001324          	.endproc _mbox_send
  395  00001324          	.proc _mbox_recv
  396  00001324          	.global _mbox_recv
  397  00001324          	_mbox_recv:
  398  00001324  44000464	trap	#0x464
  399  00001328  4be00000	jr	r31
  400  0000132c  54000000	nop
  401  00001330          	.endproc _mbox_recv
  403  00001330          	.proc _sleep
  404  00001330          	.global _sleep
  405  00001330          	_sleep:
  406  00001330  44000465	trap	#0x465
  407  00001334  4be00000	jr	r31
  408  00001338  54000000	nop
  409  0000133c          	.endproc _sleep
  411  0000133c          	.proc _yield
  412  0000133c          	.global _yield
  413  0000133c          	_yield:
  414  0000133c  44000466	trap	#0x466
  415  00001340  4be00000	jr	r31
  416  00001344  54000000	nop
  417  00001348          	.endproc _yield
  420  00001348          	.proc _Exit
  421  00001348          	.global _Exit
  422  00001348          	_Exit:
  423  00001348  44000500	trap	#0x500
  424  0000134c  4be00000	jr	r31
  425  00001350  54000000	nop
  426  00001354          	.endproc _Exit
  429  00001354          	.proc _malloc
  430  00001354          	.global _malloc
  431  00001354          	_malloc:
  432  00001354  44000467	trap	#0x467
  433  00001358  4be00000	jr	r31
  434  0000135c          	.endproc _malloc
  437  0000135c          	.proc _mfree
  438  0000135c          	.global _mfree
  439  0000135c          	_mfree:
  440  0000135c  44000468	trap	#0x468
  441  00001360  4be00000	jr	r31
  442  00001364          	.endproc _mfree
  443                      ; Compiled by GCC
  445  00001364          	.align 2
  446  00001364          	.proc _isspace
  447  00001364          	.global _isspace
  448  00001364          	_isspace:
  449                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  450  00001364  afbefffc	sw	-4(r29),r30; push fp
  451  00001368  001df020	add	r30,r0,r29; fp = sp
  452  0000136c  afbffff8	sw	-8(r29),r31; push ret addr
  453  00001370  2fbd0018	subui	r29,r29,#24; alloc local storage
  454  00001374  afa20000	sw	0(r29),r2
  455  00001378  afa30004	sw	4(r29),r3
  456  0000137c  afa40008	sw	8(r29),r4
  457  00001380  83c20003	lb	r2,3(r30)
  458  00001384  20010000	addi	r1,r0,#0
  459  00001388  304300ff	andi	r3,r2,#0x00ff
  460  0000138c  60640020	seqi	r4,r3,#32
  461  00001390  1480002c	bnez	r4,L3_LF2
  462  00001394  54000000	nop; delay slot nop
  463  00001398  304300ff	andi	r3,r2,#0x00ff
  464  0000139c  60640009	seqi	r4,r3,#9
  465  000013a0  1480001c	bnez	r4,L3_LF2
  466  000013a4  54000000	nop; delay slot nop
  467  000013a8  304300ff	andi	r3,r2,#0x00ff
  468  000013ac  6064000a	seqi	r4,r3,#10
  469  000013b0  1480000c	bnez	r4,L3_LF2
  470  000013b4  54000000	nop; delay slot nop
  471  000013b8  08000008	j	L2_LF2
  472  000013bc  54000000	nop; delay slot nop
  473  000013c0          	L3_LF2:
  474  000013c0  20010001	addi	r1,r0,#1
  475  000013c4          	L2_LF2:
  476  000013c4  08000004	j	L1_LF2
  477  000013c8  54000000	nop; delay slot nop
  478  000013cc          	L1_LF2:
  479  000013cc  8fa20000	lw	r2,0(r29)
  480  000013d0  8fa30004	lw	r3,4(r29)
  481  000013d4  8fa40008	lw	r4,8(r29)
  482  000013d8  8fdffff8	lw	r31,-8(r30)
  483  000013dc  001ee820	add	r29,r0,r30
  484  000013e0  8fdefffc	lw	r30,-4(r30)
  485  000013e4  4be00000	jr	r31
  486  000013e8  54000000	nop
  487  000013ec          	.endproc _isspace
  488  000013ec          	.align 2
  489  000013ec          	.proc _isxdigit
  490  000013ec          	.global _isxdigit
  491  000013ec          	_isxdigit:
  492                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  493  000013ec  afbefffc	sw	-4(r29),r30; push fp
  494  000013f0  001df020	add	r30,r0,r29; fp = sp
  495  000013f4  afbffff8	sw	-8(r29),r31; push ret addr
  496  000013f8  2fbd0018	subui	r29,r29,#24; alloc local storage
  497  000013fc  afa20000	sw	0(r29),r2
  498  00001400  afa30004	sw	4(r29),r3
  499  00001404  afa40008	sw	8(r29),r4
  500  00001408  83c20003	lb	r2,3(r30)
  501  0000140c  20010000	addi	r1,r0,#0
  502  00001410  304300ff	andi	r3,r2,#0x00ff
  503  00001414  6c64002f	sgtui	r4,r3,#47
  504  00001418  1080001c	beqz	r4,L7_LF2
  505  0000141c  54000000	nop; delay slot nop
  506  00001420  304300ff	andi	r3,r2,#0x00ff
  507  00001424  70640039	sleui	r4,r3,#57
  508  00001428  1480005c	bnez	r4,L6_LF2
  509  0000142c  54000000	nop; delay slot nop
  510  00001430  08000004	j	L7_LF2
  511  00001434  54000000	nop; delay slot nop
  512  00001438          	L7_LF2:
  513  00001438  304300ff	andi	r3,r2,#0x00ff
  514  0000143c  6c640060	sgtui	r4,r3,#96
  515  00001440  1080001c	beqz	r4,L8_LF2
  516  00001444  54000000	nop; delay slot nop
  517  00001448  304300ff	andi	r3,r2,#0x00ff
  518  0000144c  70640066	sleui	r4,r3,#102
  519  00001450  14800034	bnez	r4,L6_LF2
  520  00001454  54000000	nop; delay slot nop
  521  00001458  08000004	j	L8_LF2
  522  0000145c  54000000	nop; delay slot nop
  523  00001460          	L8_LF2:
  524  00001460  304300ff	andi	r3,r2,#0x00ff
  525  00001464  6c640040	sgtui	r4,r3,#64
  526  00001468  10800020	beqz	r4,L5_LF2
  527  0000146c  54000000	nop; delay slot nop
  528  00001470  304300ff	andi	r3,r2,#0x00ff
  529  00001474  70640041	sleui	r4,r3,#65
  530  00001478  1480000c	bnez	r4,L6_LF2
  531  0000147c  54000000	nop; delay slot nop
  532  00001480  08000008	j	L5_LF2
  533  00001484  54000000	nop; delay slot nop
  534  00001488          	L6_LF2:
  535  00001488  20010001	addi	r1,r0,#1
  536  0000148c          	L5_LF2:
  537  0000148c  08000004	j	L4_LF2
  538  00001490  54000000	nop; delay slot nop
  539  00001494          	L4_LF2:
  540  00001494  8fa20000	lw	r2,0(r29)
  541  00001498  8fa30004	lw	r3,4(r29)
  542  0000149c  8fa40008	lw	r4,8(r29)
  543  000014a0  8fdffff8	lw	r31,-8(r30)
  544  000014a4  001ee820	add	r29,r0,r30
  545  000014a8  8fdefffc	lw	r30,-4(r30)
  546  000014ac  4be00000	jr	r31
  547  000014b0  54000000	nop
  548  000014b4          	.endproc _isxdigit
  549  000014b4          	.align 2
  550  000014b4          	.proc _dstrcpy
  551  000014b4          	.global _dstrcpy
  552  000014b4          	_dstrcpy:
  553                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  554  000014b4  afbefffc	sw	-4(r29),r30; push fp
  555  000014b8  001df020	add	r30,r0,r29; fp = sp
  556  000014bc  afbffff8	sw	-8(r29),r31; push ret addr
  557  000014c0  2fbd0018	subui	r29,r29,#24; alloc local storage
  558  000014c4  afa20000	sw	0(r29),r2
  559  000014c8  afa30004	sw	4(r29),r3
  560  000014cc  8fc10000	lw	r1,(r30)
  561  000014d0  afc1fff4	sw	-12(r30),r1
  562  000014d4          	L10_LF2:
  563  000014d4  8fc10000	lw	r1,(r30)
  564  000014d8  20220001	addi	r2,r1,#1
  565  000014dc  afc20000	sw	(r30),r2
  566  000014e0  8fc20004	lw	r2,4(r30)
  567  000014e4  20430001	addi	r3,r2,#1
  568  000014e8  afc30004	sw	4(r30),r3
  569  000014ec  80420000	lb	r2,(r2)
  570  000014f0  a0220000	sb	(r1),r2
  571  000014f4  a3c2fff3	sb	-13(r30),r2
  572  000014f8          	L12_LF2:
  573  000014f8  93c1fff3	lbu	r1,-13(r30)
  574  000014fc  64220000	snei	r2,r1,#0
  575  00001500  1440000c	bnez	r2,L13_LF2
  576  00001504  54000000	nop; delay slot nop
  577  00001508  0800000c	j	L11_LF2
  578  0000150c  54000000	nop; delay slot nop
  579  00001510          	L13_LF2:
  580  00001510  0bffffc0	j	L10_LF2
  581  00001514  54000000	nop; delay slot nop
  582  00001518          	L11_LF2:
  583  00001518  8fc1fff4	lw	r1,-12(r30)
  584  0000151c  08000004	j	L9_LF2
  585  00001520  54000000	nop; delay slot nop
  586  00001524          	L9_LF2:
  587  00001524  8fa20000	lw	r2,0(r29)
  588  00001528  8fa30004	lw	r3,4(r29)
  589  0000152c  8fdffff8	lw	r31,-8(r30)
  590  00001530  001ee820	add	r29,r0,r30
  591  00001534  8fdefffc	lw	r30,-4(r30)
  592  00001538  4be00000	jr	r31
  593  0000153c  54000000	nop
  594  00001540          	.endproc _dstrcpy
  595  00001540          	.align 2
  596  00001540          	.proc _dstrncpy
  597  00001540          	.global _dstrncpy
  598  00001540          	_dstrncpy:
  599                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  600  00001540  afbefffc	sw	-4(r29),r30; push fp
  601  00001544  001df020	add	r30,r0,r29; fp = sp
  602  00001548  afbffff8	sw	-8(r29),r31; push ret addr
  603  0000154c  2fbd0018	subui	r29,r29,#24; alloc local storage
  604  00001550  afa20000	sw	0(r29),r2
  605  00001554  afa30004	sw	4(r29),r3
  606  00001558  8fc10000	lw	r1,(r30)
  607  0000155c  afc1fff4	sw	-12(r30),r1
  608  00001560          	L15_LF2:
  609  00001560  8fc10008	lw	r1,8(r30)
  610  00001564  2022ffff	addi	r2,r1,#-1
  611  00001568  afc20008	sw	8(r30),r2
  612  0000156c  70210000	slei	r1,r1,#0
  613  00001570  1020000c	beqz	r1,L18_LF2
  614  00001574  54000000	nop; delay slot nop
  615  00001578  08000048	j	L16_LF2
  616  0000157c  54000000	nop; delay slot nop
  617  00001580          	L18_LF2:
  618  00001580  8fc10000	lw	r1,(r30)
  619  00001584  20220001	addi	r2,r1,#1
  620  00001588  afc20000	sw	(r30),r2
  621  0000158c  8fc20004	lw	r2,4(r30)
  622  00001590  20430001	addi	r3,r2,#1
  623  00001594  afc30004	sw	4(r30),r3
  624  00001598  80420000	lb	r2,(r2)
  625  0000159c  a0220000	sb	(r1),r2
  626  000015a0  a3c2fff3	sb	-13(r30),r2
  627  000015a4          	L17_LF2:
  628  000015a4  93c1fff3	lbu	r1,-13(r30)
  629  000015a8  64220000	snei	r2,r1,#0
  630  000015ac  1440000c	bnez	r2,L19_LF2
  631  000015b0  54000000	nop; delay slot nop
  632  000015b4  0800000c	j	L16_LF2
  633  000015b8  54000000	nop; delay slot nop
  634  000015bc          	L19_LF2:
  635  000015bc  0bffffa0	j	L15_LF2
  636  000015c0  54000000	nop; delay slot nop
  637  000015c4          	L16_LF2:
  638  000015c4  8fc1fff4	lw	r1,-12(r30)
  639  000015c8  08000004	j	L14_LF2
  640  000015cc  54000000	nop; delay slot nop
  641  000015d0          	L14_LF2:
  642  000015d0  8fa20000	lw	r2,0(r29)
  643  000015d4  8fa30004	lw	r3,4(r29)
  644  000015d8  8fdffff8	lw	r31,-8(r30)
  645  000015dc  001ee820	add	r29,r0,r30
  646  000015e0  8fdefffc	lw	r30,-4(r30)
  647  000015e4  4be00000	jr	r31
  648  000015e8  54000000	nop
  649  000015ec          	.endproc _dstrncpy
  650  000015ec          	.align 2
  651  000015ec          	.proc _dstrcat
  652  000015ec          	.global _dstrcat
  653  000015ec          	_dstrcat:
  654                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  655  000015ec  afbefffc	sw	-4(r29),r30; push fp
  656  000015f0  001df020	add	r30,r0,r29; fp = sp
  657  000015f4  afbffff8	sw	-8(r29),r31; push ret addr
  658  000015f8  2fbd0018	subui	r29,r29,#24; alloc local storage
  659  000015fc  afa20000	sw	0(r29),r2
  660  00001600  8fc10000	lw	r1,(r30)
  661  00001604  afc1fff4	sw	-12(r30),r1
  662  00001608          	L21_LF2:
  663  00001608  8fc10000	lw	r1,(r30)
  664  0000160c  90220000	lbu	r2,(r1)
  665  00001610  64410000	snei	r1,r2,#0
  666  00001614  1420000c	bnez	r1,L23_LF2
  667  00001618  54000000	nop; delay slot nop
  668  0000161c  0800001c	j	L22_LF2
  669  00001620  54000000	nop; delay slot nop
  670  00001624          	L23_LF2:
  671  00001624  8fc20000	lw	r2,(r30)
  672  00001628  20410001	addi	r1,r2,#1
  673  0000162c  00011020	add	r2,r0,r1
  674  00001630  afc20000	sw	(r30),r2
  675  00001634  0bffffd0	j	L21_LF2
  676  00001638  54000000	nop; delay slot nop
  677  0000163c          	L22_LF2:
  678  0000163c  23bdfff8	addi	r29,r29,#-8
  679  00001640  001d0820	add	r1,r0,r29
  680  00001644  8fc20000	lw	r2,(r30)
  681  00001648  ac220000	sw	(r1),r2
  682  0000164c  8fc20004	lw	r2,4(r30)
  683  00001650  ac220004	sw	4(r1),r2
  684  00001654  0ffffe5c	jal	_dstrcpy
  685  00001658  54000000	nop; delay slot nop
  686  0000165c  23bd0008	addi	r29,r29,#8
  687  00001660  8fc1fff4	lw	r1,-12(r30)
  688  00001664  08000004	j	L20_LF2
  689  00001668  54000000	nop; delay slot nop
  690  0000166c          	L20_LF2:
  691  0000166c  8fa20000	lw	r2,0(r29)
  692  00001670  8fdffff8	lw	r31,-8(r30)
  693  00001674  001ee820	add	r29,r0,r30
  694  00001678  8fdefffc	lw	r30,-4(r30)
  695  0000167c  4be00000	jr	r31
  696  00001680  54000000	nop
  697  00001684          	.endproc _dstrcat
  698  00001684          	.align 2
  699  00001684          	.proc _dstrncmp
  700  00001684          	.global _dstrncmp
  701  00001684          	_dstrncmp:
  702                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  703  00001684  afbefffc	sw	-4(r29),r30; push fp
  704  00001688  001df020	add	r30,r0,r29; fp = sp
  705  0000168c  afbffff8	sw	-8(r29),r31; push ret addr
  706  00001690  2fbd0018	subui	r29,r29,#24; alloc local storage
  707  00001694  afa20000	sw	0(r29),r2
  708  00001698  afa30004	sw	4(r29),r3
  709  0000169c  54000000	nop
  710  000016a0  20010000	addi	r1,r0,#0
  711  000016a4  afc1fff4	sw	-12(r30),r1
  712  000016a8          	L25_LF2:
  713  000016a8  8fc1fff4	lw	r1,-12(r30)
  714  000016ac  8fc20008	lw	r2,8(r30)
  715  000016b0  0022082a	slt	r1,r1,r2
  716  000016b4  1420000c	bnez	r1,L28_LF2
  717  000016b8  54000000	nop; delay slot nop
  718  000016bc  08000088	j	L26_LF2
  719  000016c0  54000000	nop; delay slot nop
  720  000016c4          	L28_LF2:
  721  000016c4  8fc10004	lw	r1,4(r30)
  722  000016c8  90220000	lbu	r2,(r1)
  723  000016cc  64410000	snei	r1,r2,#0
  724  000016d0  14200018	bnez	r1,L29_LF2
  725  000016d4  54000000	nop; delay slot nop
  726  000016d8  20010000	addi	r1,r0,#0
  727  000016dc  080000d8	j	L24_LF2
  728  000016e0  54000000	nop; delay slot nop
  729  000016e4  08000028	j	L30_LF2
  730  000016e8  54000000	nop; delay slot nop
  731  000016ec          	L29_LF2:
  732  000016ec  8fc10000	lw	r1,(r30)
  733  000016f0  8fc20004	lw	r2,4(r30)
  734  000016f4  90210000	lbu	r1,(r1)
  735  000016f8  90420000	lbu	r2,(r2)
  736  000016fc  00220829	sne	r1,r1,r2
  737  00001700  1020000c	beqz	r1,L30_LF2
  738  00001704  54000000	nop; delay slot nop
  739  00001708  0800003c	j	L26_LF2
  740  0000170c  54000000	nop; delay slot nop
  741  00001710          	L31_LF2:
  742  00001710          	L30_LF2:
  743  00001710  8fc20000	lw	r2,(r30)
  744  00001714  20410001	addi	r1,r2,#1
  745  00001718  00011020	add	r2,r0,r1
  746  0000171c  afc20000	sw	(r30),r2
  747  00001720  8fc20004	lw	r2,4(r30)
  748  00001724  20410001	addi	r1,r2,#1
  749  00001728  00011020	add	r2,r0,r1
  750  0000172c  afc20004	sw	4(r30),r2
  751  00001730          	L27_LF2:
  752  00001730  8fc2fff4	lw	r2,-12(r30)
  753  00001734  20410001	addi	r1,r2,#1
  754  00001738  00011020	add	r2,r0,r1
  755  0000173c  afc2fff4	sw	-12(r30),r2
  756  00001740  0bffff64	j	L25_LF2
  757  00001744  54000000	nop; delay slot nop
  758  00001748          	L26_LF2:
  759  00001748  8fc1fff4	lw	r1,-12(r30)
  760  0000174c  8fc20008	lw	r2,8(r30)
  761  00001750  00220828	seq	r1,r1,r2
  762  00001754  10200018	beqz	r1,L32_LF2
  763  00001758  54000000	nop; delay slot nop
  764  0000175c  20010000	addi	r1,r0,#0
  765  00001760  08000054	j	L24_LF2
  766  00001764  54000000	nop; delay slot nop
  767  00001768  0800004c	j	L33_LF2
  768  0000176c  54000000	nop; delay slot nop
  769  00001770          	L32_LF2:
  770  00001770  8fc20000	lw	r2,(r30)
  771  00001774  90410000	lbu	r1,(r2)
  772  00001778  8fc20004	lw	r2,4(r30)
  773  0000177c  90430000	lbu	r3,(r2)
  774  00001780  00230822	sub	r1,r1,r3
  775  00001784  74220000	sgei	r2,r1,#0
  776  00001788  10400020	beqz	r2,L34_LF2
  777  0000178c  54000000	nop; delay slot nop
  778  00001790  8fc10000	lw	r1,(r30)
  779  00001794  8fc20004	lw	r2,4(r30)
  780  00001798  90210000	lbu	r1,(r1)
  781  0000179c  90420000	lbu	r2,(r2)
  782  000017a0  00220829	sne	r1,r1,r2
  783  000017a4  08000008	j	L35_LF2
  784  000017a8  54000000	nop; delay slot nop
  785  000017ac          	L34_LF2:
  786  000017ac  2001ffff	addi	r1,r0,#-1
  787  000017b0          	L35_LF2:
  788  000017b0  08000004	j	L24_LF2
  789  000017b4  54000000	nop; delay slot nop
  790  000017b8          	L33_LF2:
  791  000017b8          	L24_LF2:
  792  000017b8  8fa20000	lw	r2,0(r29)
  793  000017bc  8fa30004	lw	r3,4(r29)
  794  000017c0  8fdffff8	lw	r31,-8(r30)
  795  000017c4  001ee820	add	r29,r0,r30
  796  000017c8  8fdefffc	lw	r30,-4(r30)
  797  000017cc  4be00000	jr	r31
  798  000017d0  54000000	nop
  799  000017d4          	.endproc _dstrncmp
  800  000017d4          	.align 2
  801  000017d4          	.proc _dstrlen
  802  000017d4          	.global _dstrlen
  803  000017d4          	_dstrlen:
  804                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  805  000017d4  afbefffc	sw	-4(r29),r30; push fp
  806  000017d8  001df020	add	r30,r0,r29; fp = sp
  807  000017dc  afbffff8	sw	-8(r29),r31; push ret addr
  808  000017e0  2fbd0018	subui	r29,r29,#24; alloc local storage
  809  000017e4  afa20000	sw	0(r29),r2
  810  000017e8  20010000	addi	r1,r0,#0
  811  000017ec  afc1fff4	sw	-12(r30),r1
  812  000017f0          	L37_LF2:
  813  000017f0  8fc10000	lw	r1,(r30)
  814  000017f4  20220001	addi	r2,r1,#1
  815  000017f8  afc20000	sw	(r30),r2
  816  000017fc  90210000	lbu	r1,(r1)
  817  00001800  64220000	snei	r2,r1,#0
  818  00001804  1440000c	bnez	r2,L39_LF2
  819  00001808  54000000	nop; delay slot nop
  820  0000180c  0800001c	j	L38_LF2
  821  00001810  54000000	nop; delay slot nop
  822  00001814          	L39_LF2:
  823  00001814  8fc2fff4	lw	r2,-12(r30)
  824  00001818  20410001	addi	r1,r2,#1
  825  0000181c  00011020	add	r2,r0,r1
  826  00001820  afc2fff4	sw	-12(r30),r2
  827  00001824  0bffffc8	j	L37_LF2
  828  00001828  54000000	nop; delay slot nop
  829  0000182c          	L38_LF2:
  830  0000182c  8fc1fff4	lw	r1,-12(r30)
  831  00001830  08000004	j	L36_LF2
  832  00001834  54000000	nop; delay slot nop
  833  00001838          	L36_LF2:
  834  00001838  8fa20000	lw	r2,0(r29)
  835  0000183c  8fdffff8	lw	r31,-8(r30)
  836  00001840  001ee820	add	r29,r0,r30
  837  00001844  8fdefffc	lw	r30,-4(r30)
  838  00001848  4be00000	jr	r31
  839  0000184c  54000000	nop
  840  00001850          	.endproc _dstrlen
  841  00001850          	.align 2
  842  00001850          	.proc _dstrstr
  843  00001850          	.global _dstrstr
  844  00001850          	_dstrstr:
  845                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  846  00001850  afbefffc	sw	-4(r29),r30; push fp
  847  00001854  001df020	add	r30,r0,r29; fp = sp
  848  00001858  afbffff8	sw	-8(r29),r31; push ret addr
  849  0000185c  2fbd0018	subui	r29,r29,#24; alloc local storage
  850  00001860  afa20000	sw	0(r29),r2
  851  00001864  23bdfff8	addi	r29,r29,#-8
  852  00001868  001d0820	add	r1,r0,r29
  853  0000186c  8fc20004	lw	r2,4(r30)
  854  00001870  ac220000	sw	(r1),r2
  855  00001874  0fffff5c	jal	_dstrlen
  856  00001878  54000000	nop; delay slot nop
  857  0000187c  23bd0008	addi	r29,r29,#8
  858  00001880  afc1fff4	sw	-12(r30),r1
  859  00001884          	L41_LF2:
  860  00001884  8fc10000	lw	r1,(r30)
  861  00001888  90220000	lbu	r2,(r1)
  862  0000188c  64410000	snei	r1,r2,#0
  863  00001890  1420000c	bnez	r1,L43_LF2
  864  00001894  54000000	nop; delay slot nop
  865  00001898  08000060	j	L42_LF2
  866  0000189c  54000000	nop; delay slot nop
  867  000018a0          	L43_LF2:
  868  000018a0  23bdfff0	addi	r29,r29,#-16
  869  000018a4  001d0820	add	r1,r0,r29
  870  000018a8  8fc20000	lw	r2,(r30)
  871  000018ac  ac220000	sw	(r1),r2
  872  000018b0  8fc20004	lw	r2,4(r30)
  873  000018b4  ac220004	sw	4(r1),r2
  874  000018b8  8fc2fff4	lw	r2,-12(r30)
  875  000018bc  ac220008	sw	8(r1),r2
  876  000018c0  0ffffdc0	jal	_dstrncmp
  877  000018c4  54000000	nop; delay slot nop
  878  000018c8  23bd0010	addi	r29,r29,#16
  879  000018cc  64220000	snei	r2,r1,#0
  880  000018d0  14400010	bnez	r2,L44_LF2
  881  000018d4  54000000	nop; delay slot nop
  882  000018d8  8fc10000	lw	r1,(r30)
  883  000018dc  08000028	j	L40_LF2
  884  000018e0  54000000	nop; delay slot nop
  885  000018e4          	L44_LF2:
  886  000018e4  8fc20000	lw	r2,(r30)
  887  000018e8  20410001	addi	r1,r2,#1
  888  000018ec  00011020	add	r2,r0,r1
  889  000018f0  afc20000	sw	(r30),r2
  890  000018f4  0bffff8c	j	L41_LF2
  891  000018f8  54000000	nop; delay slot nop
  892  000018fc          	L42_LF2:
  893  000018fc  20010000	addi	r1,r0,#0
  894  00001900  08000004	j	L40_LF2
  895  00001904  54000000	nop; delay slot nop
  896  00001908          	L40_LF2:
  897  00001908  8fa20000	lw	r2,0(r29)
  898  0000190c  8fdffff8	lw	r31,-8(r30)
  899  00001910  001ee820	add	r29,r0,r30
  900  00001914  8fdefffc	lw	r30,-4(r30)
  901  00001918  4be00000	jr	r31
  902  0000191c  54000000	nop
  903  00001920          	.endproc _dstrstr
  904  00001920          	.align 2
  905  00001920          	.proc _dmindex
  906  00001920          	.global _dmindex
  907  00001920          	_dmindex:
  908                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  909  00001920  afbefffc	sw	-4(r29),r30; push fp
  910  00001924  001df020	add	r30,r0,r29; fp = sp
  911  00001928  afbffff8	sw	-8(r29),r31; push ret addr
  912  0000192c  2fbd0018	subui	r29,r29,#24; alloc local storage
  913  00001930  afa20000	sw	0(r29),r2
  914  00001934  54000000	nop
  915  00001938          	L46_LF2:
  916  00001938  8fc10000	lw	r1,(r30)
  917  0000193c  90220000	lbu	r2,(r1)
  918  00001940  64410000	snei	r1,r2,#0
  919  00001944  1420000c	bnez	r1,L48_LF2
  920  00001948  54000000	nop; delay slot nop
  921  0000194c  08000070	j	L47_LF2
  922  00001950  54000000	nop; delay slot nop
  923  00001954          	L48_LF2:
  924  00001954  8fc10004	lw	r1,4(r30)
  925  00001958  afc1fff4	sw	-12(r30),r1
  926  0000195c          	L49_LF2:
  927  0000195c  8fc1fff4	lw	r1,-12(r30)
  928  00001960  90220000	lbu	r2,(r1)
  929  00001964  64410000	snei	r1,r2,#0
  930  00001968  1420000c	bnez	r1,L52_LF2
  931  0000196c  54000000	nop; delay slot nop
  932  00001970  08000044	j	L50_LF2
  933  00001974  54000000	nop; delay slot nop
  934  00001978          	L52_LF2:
  935  00001978  8fc10000	lw	r1,(r30)
  936  0000197c  8fc2fff4	lw	r2,-12(r30)
  937  00001980  90210000	lbu	r1,(r1)
  938  00001984  90420000	lbu	r2,(r2)
  939  00001988  00220828	seq	r1,r1,r2
  940  0000198c  10200010	beqz	r1,L51_LF2
  941  00001990  54000000	nop; delay slot nop
  942  00001994  8fc10000	lw	r1,(r30)
  943  00001998  08000030	j	L45_LF2
  944  0000199c  54000000	nop; delay slot nop
  945  000019a0          	L53_LF2:
  946  000019a0          	L51_LF2:
  947  000019a0  8fc2fff4	lw	r2,-12(r30)
  948  000019a4  20410001	addi	r1,r2,#1
  949  000019a8  00011020	add	r2,r0,r1
  950  000019ac  afc2fff4	sw	-12(r30),r2
  951  000019b0  0bffffa8	j	L49_LF2
  952  000019b4  54000000	nop; delay slot nop
  953  000019b8          	L50_LF2:
  954  000019b8  0bffff7c	j	L46_LF2
  955  000019bc  54000000	nop; delay slot nop
  956  000019c0          	L47_LF2:
  957  000019c0  20010000	addi	r1,r0,#0
  958  000019c4  08000004	j	L45_LF2
  959  000019c8  54000000	nop; delay slot nop
  960  000019cc          	L45_LF2:
  961  000019cc  8fa20000	lw	r2,0(r29)
  962  000019d0  8fdffff8	lw	r31,-8(r30)
  963  000019d4  001ee820	add	r29,r0,r30
  964  000019d8  8fdefffc	lw	r30,-4(r30)
  965  000019dc  4be00000	jr	r31
  966  000019e0  54000000	nop
  967  000019e4          	.endproc _dmindex
  968  000019e4          	.align 2
  969  000019e4          	.proc _dindex
  970  000019e4          	.global _dindex
  971  000019e4          	_dindex:
  972                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  973  000019e4  afbefffc	sw	-4(r29),r30; push fp
  974  000019e8  001df020	add	r30,r0,r29; fp = sp
  975  000019ec  afbffff8	sw	-8(r29),r31; push ret addr
  976  000019f0  2fbd0010	subui	r29,r29,#16; alloc local storage
  977  000019f4  afa20000	sw	0(r29),r2
  978  000019f8  54000000	nop
  979  000019fc          	L55_LF2:
  980  000019fc  8fc10000	lw	r1,(r30)
  981  00001a00  90220000	lbu	r2,(r1)
  982  00001a04  64410000	snei	r1,r2,#0
  983  00001a08  1420000c	bnez	r1,L57_LF2
  984  00001a0c  54000000	nop; delay slot nop
  985  00001a10  08000040	j	L56_LF2
  986  00001a14  54000000	nop; delay slot nop
  987  00001a18          	L57_LF2:
  988  00001a18  8fc10000	lw	r1,(r30)
  989  00001a1c  90220000	lbu	r2,(r1)
  990  00001a20  8fc10004	lw	r1,4(r30)
  991  00001a24  00411028	seq	r2,r2,r1
  992  00001a28  10400010	beqz	r2,L58_LF2
  993  00001a2c  54000000	nop; delay slot nop
  994  00001a30  8fc10000	lw	r1,(r30)
  995  00001a34  08000028	j	L54_LF2
  996  00001a38  54000000	nop; delay slot nop
  997  00001a3c          	L58_LF2:
  998  00001a3c  8fc20000	lw	r2,(r30)
  999  00001a40  20410001	addi	r1,r2,#1
 1000  00001a44  00011020	add	r2,r0,r1
 1001  00001a48  afc20000	sw	(r30),r2
 1002  00001a4c  0bffffac	j	L55_LF2
 1003  00001a50  54000000	nop; delay slot nop
 1004  00001a54          	L56_LF2:
 1005  00001a54  20010000	addi	r1,r0,#0
 1006  00001a58  08000004	j	L54_LF2
 1007  00001a5c  54000000	nop; delay slot nop
 1008  00001a60          	L54_LF2:
 1009  00001a60  8fa20000	lw	r2,0(r29)
 1010  00001a64  8fdffff8	lw	r31,-8(r30)
 1011  00001a68  001ee820	add	r29,r0,r30
 1012  00001a6c  8fdefffc	lw	r30,-4(r30)
 1013  00001a70  4be00000	jr	r31
 1014  00001a74  54000000	nop
 1015  00001a78          	.endproc _dindex
 1016  00001a78          	.align 2
 1017  00001a78          	.proc _ditoa
 1018  00001a78          	.global _ditoa
 1019  00001a78          	_ditoa:
 1020                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1021  00001a78  afbefffc	sw	-4(r29),r30; push fp
 1022  00001a7c  001df020	add	r30,r0,r29; fp = sp
 1023  00001a80  afbffff8	sw	-8(r29),r31; push ret addr
 1024  00001a84  2fbd0018	subui	r29,r29,#24; alloc local storage
 1025  00001a88  afa20000	sw	0(r29),r2
 1026  00001a8c  afa30004	sw	4(r29),r3
 1027  00001a90  8fc10000	lw	r1,(r30)
 1028  00001a94  68220000	slti	r2,r1,#0
 1029  00001a98  1040002c	beqz	r2,L60_LF2
 1030  00001a9c  54000000	nop; delay slot nop
 1031  00001aa0  8fc10004	lw	r1,4(r30)
 1032  00001aa4  20220001	addi	r2,r1,#1
 1033  00001aa8  afc20004	sw	4(r30),r2
 1034  00001aac  2002002d	addi	r2,r0,(#0x2d)&0xff
 1035  00001ab0  a0220000	sb	(r1),r2
 1036  00001ab4  8fc10000	lw	r1,(r30)
 1037  00001ab8  00011022	sub	r2,r0,r1
 1038  00001abc  afc20000	sw	(r30),r2
 1039  00001ac0  08000118	j	L61_LF2
 1040  00001ac4  54000000	nop; delay slot nop
 1041  00001ac8          	L60_LF2:
 1042  00001ac8  8fc10000	lw	r1,(r30)
 1043  00001acc  64220000	snei	r2,r1,#0
 1044  00001ad0  14400020	bnez	r2,L62_LF2
 1045  00001ad4  54000000	nop; delay slot nop
 1046  00001ad8  8fc10004	lw	r1,4(r30)
 1047  00001adc  20220001	addi	r2,r1,#1
 1048  00001ae0  afc20004	sw	4(r30),r2
 1049  00001ae4  20020030	addi	r2,r0,(#0x30)&0xff
 1050  00001ae8  a0220000	sb	(r1),r2
 1051  00001aec  080000ec	j	L61_LF2
 1052  00001af0  54000000	nop; delay slot nop
 1053  00001af4          	L62_LF2:
 1054  00001af4  20010001	addi	r1,r0,#1
 1055  00001af8  afc1fff4	sw	-12(r30),r1
 1056  00001afc          	L64_LF2:
 1057  00001afc  8fc1fff4	lw	r1,-12(r30)
 1058  00001b00  8fc20000	lw	r2,(r30)
 1059  00001b04  0022082c	sle	r1,r1,r2
 1060  00001b08  1420000c	bnez	r1,L66_LF2
 1061  00001b0c  54000000	nop; delay slot nop
 1062  00001b10  08000024	j	L65_LF2
 1063  00001b14  54000000	nop; delay slot nop
 1064  00001b18          	L67_LF2:
 1065  00001b18          	L66_LF2:
 1066  00001b18  8fc1fff4	lw	r1,-12(r30)
 1067  00001b1c  00011820	add	r3,r0,r1
 1068  00001b20  50620002	slli	r2,r3,#0x2
 1069  00001b24  00411020	add	r2,r2,r1
 1070  00001b28  50410001	slli	r1,r2,#0x1
 1071  00001b2c  afc1fff4	sw	-12(r30),r1
 1072  00001b30  0bffffc8	j	L64_LF2
 1073  00001b34  54000000	nop; delay slot nop
 1074  00001b38          	L65_LF2:
 1075  00001b38  54000000	nop
 1076  00001b3c          	L68_LF2:
 1077  00001b3c  8fc1fff4	lw	r1,-12(r30)
 1078  00001b40  2002000a	addi	r2,r0,#10
 1079  00001b44  00200035	movi2fp	f0,r1
 1080  00001b48  00400835	movi2fp	f1,r2
 1081  00001b4c  0401000f	div	f0,f0,f1
 1082  00001b50  00000834	movfp2i	r1,f0
 1083  00001b54  afc1fff4	sw	-12(r30),r1
 1084  00001b58  8fc10004	lw	r1,4(r30)
 1085  00001b5c  20220001	addi	r2,r1,#1
 1086  00001b60  afc20004	sw	4(r30),r2
 1087  00001b64  8fc20000	lw	r2,(r30)
 1088  00001b68  8fc3fff4	lw	r3,-12(r30)
 1089  00001b6c  00400035	movi2fp	f0,r2
 1090  00001b70  00600835	movi2fp	f1,r3
 1091  00001b74  0401000f	div	f0,f0,f1
 1092  00001b78  00001034	movfp2i	r2,f0
 1093  00001b7c  00021820	add	r3,r0,r2
 1094  00001b80  20620030	addi	r2,r3,#48
 1095  00001b84  a0220000	sb	(r1),r2
 1096  00001b88  8fc10000	lw	r1,(r30)
 1097  00001b8c  8fc3fff4	lw	r3,-12(r30)
 1098  00001b90  00200035	movi2fp	f0,r1
 1099  00001b94  00600835	movi2fp	f1,r3
 1100  00001b98  0401000f	div	f0,f0,f1
 1101  00001b9c  00001034	movfp2i	r2,f0
 1102  00001ba0  8fc3fff4	lw	r3,-12(r30)
 1103  00001ba4  00400035	movi2fp	f0,r2
 1104  00001ba8  00600835	movi2fp	f1,r3
 1105  00001bac  0401000e	mult	f0,f0,f1
 1106  00001bb0  00001034	movfp2i	r2,f0
 1107  00001bb4  00220822	sub	r1,r1,r2
 1108  00001bb8  afc10000	sw	(r30),r1
 1109  00001bbc          	L70_LF2:
 1110  00001bbc  8fc1fff4	lw	r1,-12(r30)
 1111  00001bc0  6c220001	sgti	r2,r1,#1
 1112  00001bc4  1440000c	bnez	r2,L71_LF2
 1113  00001bc8  54000000	nop; delay slot nop
 1114  00001bcc  0800000c	j	L61_LF2
 1115  00001bd0  54000000	nop; delay slot nop
 1116  00001bd4          	L71_LF2:
 1117  00001bd4  0bffff64	j	L68_LF2
 1118  00001bd8  54000000	nop; delay slot nop
 1119  00001bdc          	L69_LF2:
 1120  00001bdc          	L63_LF2:
 1121  00001bdc          	L61_LF2:
 1122  00001bdc  8fc10004	lw	r1,4(r30)
 1123  00001be0  20020000	addi	r2,r0,(#0x0)&0xff
 1124  00001be4  a0220000	sb	(r1),r2
 1125  00001be8          	L59_LF2:
 1126  00001be8  8fa20000	lw	r2,0(r29)
 1127  00001bec  8fa30004	lw	r3,4(r29)
 1128  00001bf0  8fdffff8	lw	r31,-8(r30)
 1129  00001bf4  001ee820	add	r29,r0,r30
 1130  00001bf8  8fdefffc	lw	r30,-4(r30)
 1131  00001bfc  4be00000	jr	r31
 1132  00001c00  54000000	nop
 1133  00001c04          	.endproc _ditoa
 1134  00001c04          	.align 2
 1135  00001c04          	.proc _dstrtol
 1136  00001c04          	.global _dstrtol
 1137  00001c04          	_dstrtol:
 1138                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1139  00001c04  afbefffc	sw	-4(r29),r30; push fp
 1140  00001c08  001df020	add	r30,r0,r29; fp = sp
 1141  00001c0c  afbffff8	sw	-8(r29),r31; push ret addr
 1142  00001c10  2fbd0020	subui	r29,r29,#32; alloc local storage
 1143  00001c14  afa20000	sw	0(r29),r2
 1144  00001c18  20010000	addi	r1,r0,#0
 1145  00001c1c  afc1fff4	sw	-12(r30),r1
 1146  00001c20          	L73_LF2:
 1147  00001c20  8fc10000	lw	r1,(r30)
 1148  00001c24  90220000	lbu	r2,(r1)
 1149  00001c28  60410020	seqi	r1,r2,#32
 1150  00001c2c  14200034	bnez	r1,L75_LF2
 1151  00001c30  54000000	nop; delay slot nop
 1152  00001c34  8fc10000	lw	r1,(r30)
 1153  00001c38  90220000	lbu	r2,(r1)
 1154  00001c3c  60410009	seqi	r1,r2,#9
 1155  00001c40  14200020	bnez	r1,L75_LF2
 1156  00001c44  54000000	nop; delay slot nop
 1157  00001c48  8fc10000	lw	r1,(r30)
 1158  00001c4c  90220000	lbu	r2,(r1)
 1159  00001c50  6041000a	seqi	r1,r2,#10
 1160  00001c54  1420000c	bnez	r1,L75_LF2
 1161  00001c58  54000000	nop; delay slot nop
 1162  00001c5c  0800001c	j	L74_LF2
 1163  00001c60  54000000	nop; delay slot nop
 1164  00001c64          	L75_LF2:
 1165  00001c64  8fc20000	lw	r2,(r30)
 1166  00001c68  20410001	addi	r1,r2,#1
 1167  00001c6c  00011020	add	r2,r0,r1
 1168  00001c70  afc20000	sw	(r30),r2
 1169  00001c74  0bffffa8	j	L73_LF2
 1170  00001c78  54000000	nop; delay slot nop
 1171  00001c7c          	L74_LF2:
 1172  00001c7c  8fc10004	lw	r1,4(r30)
 1173  00001c80  64220000	snei	r2,r1,#0
 1174  00001c84  10400010	beqz	r2,L76_LF2
 1175  00001c88  54000000	nop; delay slot nop
 1176  00001c8c  8fc10004	lw	r1,4(r30)
 1177  00001c90  8fc20000	lw	r2,(r30)
 1178  00001c94  ac220000	sw	(r1),r2
 1179  00001c98          	L76_LF2:
 1180  00001c98  8fc10000	lw	r1,(r30)
 1181  00001c9c  90220000	lbu	r2,(r1)
 1182  00001ca0  64410000	snei	r1,r2,#0
 1183  00001ca4  14200010	bnez	r1,L77_LF2
 1184  00001ca8  54000000	nop; delay slot nop
 1185  00001cac  8fc1fff4	lw	r1,-12(r30)
 1186  00001cb0  08000294	j	L72_LF2
 1187  00001cb4  54000000	nop; delay slot nop
 1188  00001cb8          	L77_LF2:
 1189  00001cb8  8fc10000	lw	r1,(r30)
 1190  00001cbc  90220000	lbu	r2,(r1)
 1191  00001cc0  6041002d	seqi	r1,r2,#45
 1192  00001cc4  10200024	beqz	r1,L78_LF2
 1193  00001cc8  54000000	nop; delay slot nop
 1194  00001ccc  2001ffff	addi	r1,r0,#-1
 1195  00001cd0  afc1ffec	sw	-20(r30),r1
 1196  00001cd4  8fc20000	lw	r2,(r30)
 1197  00001cd8  20410001	addi	r1,r2,#1
 1198  00001cdc  00011020	add	r2,r0,r1
 1199  00001ce0  afc20000	sw	(r30),r2
 1200  00001ce4  0800000c	j	L79_LF2
 1201  00001ce8  54000000	nop; delay slot nop
 1202  00001cec          	L78_LF2:
 1203  00001cec  20010001	addi	r1,r0,#1
 1204  00001cf0  afc1ffec	sw	-20(r30),r1
 1205  00001cf4          	L79_LF2:
 1206  00001cf4  8fc10008	lw	r1,8(r30)
 1207  00001cf8  64220000	snei	r2,r1,#0
 1208  00001cfc  14400090	bnez	r2,L80_LF2
 1209  00001d00  54000000	nop; delay slot nop
 1210  00001d04  8fc10000	lw	r1,(r30)
 1211  00001d08  90220000	lbu	r2,(r1)
 1212  00001d0c  60410030	seqi	r1,r2,#48
 1213  00001d10  10200074	beqz	r1,L81_LF2
 1214  00001d14  54000000	nop; delay slot nop
 1215  00001d18  8fc20000	lw	r2,(r30)
 1216  00001d1c  20410001	addi	r1,r2,#1
 1217  00001d20  00011020	add	r2,r0,r1
 1218  00001d24  afc20000	sw	(r30),r2
 1219  00001d28  8fc10000	lw	r1,(r30)
 1220  00001d2c  90220000	lbu	r2,(r1)
 1221  00001d30  60410078	seqi	r1,r2,#120
 1222  00001d34  14200020	bnez	r1,L83_LF2
 1223  00001d38  54000000	nop; delay slot nop
 1224  00001d3c  8fc10000	lw	r1,(r30)
 1225  00001d40  90220000	lbu	r2,(r1)
 1226  00001d44  60410058	seqi	r1,r2,#88
 1227  00001d48  1420000c	bnez	r1,L83_LF2
 1228  00001d4c  54000000	nop; delay slot nop
 1229  00001d50  08000024	j	L82_LF2
 1230  00001d54  54000000	nop; delay slot nop
 1231  00001d58          	L83_LF2:
 1232  00001d58  20010010	addi	r1,r0,#16
 1233  00001d5c  afc10008	sw	8(r30),r1
 1234  00001d60  8fc20000	lw	r2,(r30)
 1235  00001d64  20410001	addi	r1,r2,#1
 1236  00001d68  00011020	add	r2,r0,r1
 1237  00001d6c  afc20000	sw	(r30),r2
 1238  00001d70  0800000c	j	L84_LF2
 1239  00001d74  54000000	nop; delay slot nop
 1240  00001d78          	L82_LF2:
 1241  00001d78  20010008	addi	r1,r0,#8
 1242  00001d7c  afc10008	sw	8(r30),r1
 1243  00001d80          	L84_LF2:
 1244  00001d80  0800000c	j	L80_LF2
 1245  00001d84  54000000	nop; delay slot nop
 1246  00001d88          	L81_LF2:
 1247  00001d88  2001000a	addi	r1,r0,#10
 1248  00001d8c  afc10008	sw	8(r30),r1
 1249  00001d90          	L85_LF2:
 1250  00001d90          	L80_LF2:
 1251  00001d90  8fc10008	lw	r1,8(r30)
 1252  00001d94  70220000	slei	r2,r1,#0
 1253  00001d98  1440001c	bnez	r2,L87_LF2
 1254  00001d9c  54000000	nop; delay slot nop
 1255  00001da0  8fc10008	lw	r1,8(r30)
 1256  00001da4  6c220010	sgti	r2,r1,#16
 1257  00001da8  1440000c	bnez	r2,L87_LF2
 1258  00001dac  54000000	nop; delay slot nop
 1259  00001db0  08000010	j	L86_LF2
 1260  00001db4  54000000	nop; delay slot nop
 1261  00001db8          	L87_LF2:
 1262  00001db8  8fc1fff4	lw	r1,-12(r30)
 1263  00001dbc  08000188	j	L72_LF2
 1264  00001dc0  54000000	nop; delay slot nop
 1265  00001dc4          	L86_LF2:
 1266  00001dc4  54000000	nop
 1267  00001dc8          	L88_LF2:
 1268  00001dc8  8fc10000	lw	r1,(r30)
 1269  00001dcc  90220000	lbu	r2,(r1)
 1270  00001dd0  6c41002f	sgtui	r1,r2,#47
 1271  00001dd4  10200030	beqz	r1,L91_LF2
 1272  00001dd8  54000000	nop; delay slot nop
 1273  00001ddc  8fc10000	lw	r1,(r30)
 1274  00001de0  90220000	lbu	r2,(r1)
 1275  00001de4  70410039	sleui	r1,r2,#57
 1276  00001de8  1020001c	beqz	r1,L91_LF2
 1277  00001dec  54000000	nop; delay slot nop
 1278  00001df0  8fc10000	lw	r1,(r30)
 1279  00001df4  90220000	lbu	r2,(r1)
 1280  00001df8  2041ffd0	addi	r1,r2,#-48
 1281  00001dfc  afc1fff0	sw	-16(r30),r1
 1282  00001e00  0800008c	j	L92_LF2
 1283  00001e04  54000000	nop; delay slot nop
 1284  00001e08          	L91_LF2:
 1285  00001e08  8fc10000	lw	r1,(r30)
 1286  00001e0c  90220000	lbu	r2,(r1)
 1287  00001e10  6c410060	sgtui	r1,r2,#96
 1288  00001e14  10200030	beqz	r1,L93_LF2
 1289  00001e18  54000000	nop; delay slot nop
 1290  00001e1c  8fc10000	lw	r1,(r30)
 1291  00001e20  90220000	lbu	r2,(r1)
 1292  00001e24  7041007a	sleui	r1,r2,#122
 1293  00001e28  1020001c	beqz	r1,L93_LF2
 1294  00001e2c  54000000	nop; delay slot nop
 1295  00001e30  8fc10000	lw	r1,(r30)
 1296  00001e34  90220000	lbu	r2,(r1)
 1297  00001e38  2041ffa9	addi	r1,r2,#-87
 1298  00001e3c  afc1fff0	sw	-16(r30),r1
 1299  00001e40  0800004c	j	L92_LF2
 1300  00001e44  54000000	nop; delay slot nop
 1301  00001e48          	L93_LF2:
 1302  00001e48  8fc10000	lw	r1,(r30)
 1303  00001e4c  90220000	lbu	r2,(r1)
 1304  00001e50  6c410040	sgtui	r1,r2,#64
 1305  00001e54  10200030	beqz	r1,L95_LF2
 1306  00001e58  54000000	nop; delay slot nop
 1307  00001e5c  8fc10000	lw	r1,(r30)
 1308  00001e60  90220000	lbu	r2,(r1)
 1309  00001e64  7041005a	sleui	r1,r2,#90
 1310  00001e68  1020001c	beqz	r1,L95_LF2
 1311  00001e6c  54000000	nop; delay slot nop
 1312  00001e70  8fc10000	lw	r1,(r30)
 1313  00001e74  90220000	lbu	r2,(r1)
 1314  00001e78  2041ffc9	addi	r1,r2,#-55
 1315  00001e7c  afc1fff0	sw	-16(r30),r1
 1316  00001e80  0800000c	j	L92_LF2
 1317  00001e84  54000000	nop; delay slot nop
 1318  00001e88          	L95_LF2:
 1319  00001e88  200103e8	addi	r1,r0,#1000
 1320  00001e8c  afc1fff0	sw	-16(r30),r1
 1321  00001e90          	L96_LF2:
 1322  00001e90          	L94_LF2:
 1323  00001e90          	L92_LF2:
 1324  00001e90  8fc1fff0	lw	r1,-16(r30)
 1325  00001e94  8fc20008	lw	r2,8(r30)
 1326  00001e98  0022082a	slt	r1,r1,r2
 1327  00001e9c  10200040	beqz	r1,L90_LF2
 1328  00001ea0  54000000	nop; delay slot nop
 1329  00001ea4  8fc1fff4	lw	r1,-12(r30)
 1330  00001ea8  8fc20008	lw	r2,8(r30)
 1331  00001eac  00200035	movi2fp	f0,r1
 1332  00001eb0  00400835	movi2fp	f1,r2
 1333  00001eb4  0401000e	mult	f0,f0,f1
 1334  00001eb8  00000834	movfp2i	r1,f0
 1335  00001ebc  afc1fff4	sw	-12(r30),r1
 1336  00001ec0  8fc1fff4	lw	r1,-12(r30)
 1337  00001ec4  8fc2fff0	lw	r2,-16(r30)
 1338  00001ec8  00220820	add	r1,r1,r2
 1339  00001ecc  afc1fff4	sw	-12(r30),r1
 1340  00001ed0  8fc20000	lw	r2,(r30)
 1341  00001ed4  20410001	addi	r1,r2,#1
 1342  00001ed8  00011020	add	r2,r0,r1
 1343  00001edc  afc20000	sw	(r30),r2
 1344  00001ee0          	L97_LF2:
 1345  00001ee0          	L90_LF2:
 1346  00001ee0  8fc1fff0	lw	r1,-16(r30)
 1347  00001ee4  8fc20008	lw	r2,8(r30)
 1348  00001ee8  0022082a	slt	r1,r1,r2
 1349  00001eec  1420000c	bnez	r1,L98_LF2
 1350  00001ef0  54000000	nop; delay slot nop
 1351  00001ef4  0800000c	j	L89_LF2
 1352  00001ef8  54000000	nop; delay slot nop
 1353  00001efc          	L98_LF2:
 1354  00001efc  0bfffec8	j	L88_LF2
 1355  00001f00  54000000	nop; delay slot nop
 1356  00001f04          	L89_LF2:
 1357  00001f04  8fc10004	lw	r1,4(r30)
 1358  00001f08  64220000	snei	r2,r1,#0
 1359  00001f0c  10400010	beqz	r2,L99_LF2
 1360  00001f10  54000000	nop; delay slot nop
 1361  00001f14  8fc10004	lw	r1,4(r30)
 1362  00001f18  8fc20000	lw	r2,(r30)
 1363  00001f1c  ac220000	sw	(r1),r2
 1364  00001f20          	L99_LF2:
 1365  00001f20  8fc1fff4	lw	r1,-12(r30)
 1366  00001f24  8fc2ffec	lw	r2,-20(r30)
 1367  00001f28  00200035	movi2fp	f0,r1
 1368  00001f2c  00400835	movi2fp	f1,r2
 1369  00001f30  0401000e	mult	f0,f0,f1
 1370  00001f34  00000834	movfp2i	r1,f0
 1371  00001f38  afc1fff4	sw	-12(r30),r1
 1372  00001f3c  8fc1fff4	lw	r1,-12(r30)
 1373  00001f40  08000004	j	L72_LF2
 1374  00001f44  54000000	nop; delay slot nop
 1375  00001f48          	L72_LF2:
 1376  00001f48  8fa20000	lw	r2,0(r29)
 1377  00001f4c  8fdffff8	lw	r31,-8(r30)
 1378  00001f50  001ee820	add	r29,r0,r30
 1379  00001f54  8fdefffc	lw	r30,-4(r30)
 1380  00001f58  4be00000	jr	r31
 1381  00001f5c  54000000	nop
 1382  00001f60          	.endproc _dstrtol
 1383  00001f60          	.align 2
 1384  00001f60          	.proc _bcopy
 1385  00001f60          	.global _bcopy
 1386  00001f60          	_bcopy:
 1387                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1388  00001f60  afbefffc	sw	-4(r29),r30; push fp
 1389  00001f64  001df020	add	r30,r0,r29; fp = sp
 1390  00001f68  afbffff8	sw	-8(r29),r31; push ret addr
 1391  00001f6c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1392  00001f70  afa20000	sw	0(r29),r2
 1393  00001f74  afa30004	sw	4(r29),r3
 1394  00001f78  54000000	nop
 1395  00001f7c          	L101_LF2:
 1396  00001f7c  8fc10008	lw	r1,8(r30)
 1397  00001f80  2022ffff	addi	r2,r1,#-1
 1398  00001f84  afc20008	sw	8(r30),r2
 1399  00001f88  6c210000	sgti	r1,r1,#0
 1400  00001f8c  1420000c	bnez	r1,L103_LF2
 1401  00001f90  54000000	nop; delay slot nop
 1402  00001f94  0800002c	j	L102_LF2
 1403  00001f98  54000000	nop; delay slot nop
 1404  00001f9c          	L103_LF2:
 1405  00001f9c  8fc10004	lw	r1,4(r30)
 1406  00001fa0  20220001	addi	r2,r1,#1
 1407  00001fa4  afc20004	sw	4(r30),r2
 1408  00001fa8  8fc20000	lw	r2,(r30)
 1409  00001fac  20430001	addi	r3,r2,#1
 1410  00001fb0  afc30000	sw	(r30),r3
 1411  00001fb4  80420000	lb	r2,(r2)
 1412  00001fb8  a0220000	sb	(r1),r2
 1413  00001fbc  0bffffbc	j	L101_LF2
 1414  00001fc0  54000000	nop; delay slot nop
 1415  00001fc4          	L102_LF2:
 1416  00001fc4          	L100_LF2:
 1417  00001fc4  8fa20000	lw	r2,0(r29)
 1418  00001fc8  8fa30004	lw	r3,4(r29)
 1419  00001fcc  8fdffff8	lw	r31,-8(r30)
 1420  00001fd0  001ee820	add	r29,r0,r30
 1421  00001fd4  8fdefffc	lw	r30,-4(r30)
 1422  00001fd8  4be00000	jr	r31
 1423  00001fdc  54000000	nop
 1424  00001fe0          	.endproc _bcopy
 1425  00001fe0          	.align 2
 1426  00001fe0          	.proc _bzero
 1427  00001fe0          	.global _bzero
 1428  00001fe0          	_bzero:
 1429                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1430  00001fe0  afbefffc	sw	-4(r29),r30; push fp
 1431  00001fe4  001df020	add	r30,r0,r29; fp = sp
 1432  00001fe8  afbffff8	sw	-8(r29),r31; push ret addr
 1433  00001fec  2fbd0010	subui	r29,r29,#16; alloc local storage
 1434  00001ff0  afa20000	sw	0(r29),r2
 1435  00001ff4  54000000	nop
 1436  00001ff8          	L105_LF2:
 1437  00001ff8  8fc10004	lw	r1,4(r30)
 1438  00001ffc  2022ffff	addi	r2,r1,#-1
 1439  00002000  afc20004	sw	4(r30),r2
 1440  00002004  6c210000	sgti	r1,r1,#0
 1441  00002008  1420000c	bnez	r1,L107_LF2
 1442  0000200c  54000000	nop; delay slot nop
 1443  00002010  08000020	j	L106_LF2
 1444  00002014  54000000	nop; delay slot nop
 1445  00002018          	L107_LF2:
 1446  00002018  8fc10000	lw	r1,(r30)
 1447  0000201c  20220001	addi	r2,r1,#1
 1448  00002020  afc20000	sw	(r30),r2
 1449  00002024  20020000	addi	r2,r0,(#0x0)&0xff
 1450  00002028  a0220000	sb	(r1),r2
 1451  0000202c  0bffffc8	j	L105_LF2
 1452  00002030  54000000	nop; delay slot nop
 1453  00002034          	L106_LF2:
 1454  00002034          	L104_LF2:
 1455  00002034  8fa20000	lw	r2,0(r29)
 1456  00002038  8fdffff8	lw	r31,-8(r30)
 1457  0000203c  001ee820	add	r29,r0,r30
 1458  00002040  8fdefffc	lw	r30,-4(r30)
 1459  00002044  4be00000	jr	r31
 1460  00002048  54000000	nop
 1461  0000204c          	.endproc _bzero
 1462  0000204c          	.align 2
 1463  0000204c          	.proc _min
 1464  0000204c          	.global _min
 1465  0000204c          	_min:
 1466                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1467  0000204c  afbefffc	sw	-4(r29),r30; push fp
 1468  00002050  001df020	add	r30,r0,r29; fp = sp
 1469  00002054  afbffff8	sw	-8(r29),r31; push ret addr
 1470  00002058  2fbd0010	subui	r29,r29,#16; alloc local storage
 1471  0000205c  afa20000	sw	0(r29),r2
 1472  00002060  afa30004	sw	4(r29),r3
 1473  00002064  8fc10000	lw	r1,(r30)
 1474  00002068  8fc20004	lw	r2,4(r30)
 1475  0000206c  0022182c	sle	r3,r1,r2
 1476  00002070  14600008	bnez	r3,L109_LF2
 1477  00002074  54000000	nop; delay slot nop
 1478  00002078  8fc10004	lw	r1,4(r30)
 1479  0000207c          	L109_LF2:
 1480  0000207c  08000004	j	L108_LF2
 1481  00002080  54000000	nop; delay slot nop
 1482  00002084          	L108_LF2:
 1483  00002084  8fa20000	lw	r2,0(r29)
 1484  00002088  8fa30004	lw	r3,4(r29)
 1485  0000208c  8fdffff8	lw	r31,-8(r30)
 1486  00002090  001ee820	add	r29,r0,r30
 1487  00002094  8fdefffc	lw	r30,-4(r30)
 1488  00002098  4be00000	jr	r31
 1489  0000209c  54000000	nop
 1490  000020a0          	.endproc _min
 1491  000020a0          	.align 2
 1492  000020a0          	.proc _max
 1493  000020a0          	.global _max
 1494  000020a0          	_max:
 1495                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1496  000020a0  afbefffc	sw	-4(r29),r30; push fp
 1497  000020a4  001df020	add	r30,r0,r29; fp = sp
 1498  000020a8  afbffff8	sw	-8(r29),r31; push ret addr
 1499  000020ac  2fbd0010	subui	r29,r29,#16; alloc local storage
 1500  000020b0  afa20000	sw	0(r29),r2
 1501  000020b4  afa30004	sw	4(r29),r3
 1502  000020b8  8fc10000	lw	r1,(r30)
 1503  000020bc  8fc20004	lw	r2,4(r30)
 1504  000020c0  0022182d	sge	r3,r1,r2
 1505  000020c4  14600008	bnez	r3,L111_LF2
 1506  000020c8  54000000	nop; delay slot nop
 1507  000020cc  8fc10004	lw	r1,4(r30)
 1508  000020d0          	L111_LF2:
 1509  000020d0  08000004	j	L110_LF2
 1510  000020d4  54000000	nop; delay slot nop
 1511  000020d8          	L110_LF2:
 1512  000020d8  8fa20000	lw	r2,0(r29)
 1513  000020dc  8fa30004	lw	r3,4(r29)
 1514  000020e0  8fdffff8	lw	r31,-8(r30)
 1515  000020e4  001ee820	add	r29,r0,r30
 1516  000020e8  8fdefffc	lw	r30,-4(r30)
 1517  000020ec  4be00000	jr	r31
 1518  000020f0  54000000	nop
 1519  000020f4          	.endproc _max
 1520                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1521                      ;;;
 1522                      ;;; Most of the traps are called in files from libtraps.
 1525  000020f4          	.align 2
 1526  000020f4          	.proc _exit
 1527  000020f4          	.global _exit
 1528  000020f4          	_exit:
 1529  000020f4  44000300	trap	#0x300
 1530  000020f8  4be00000	jr	r31
 1531  000020fc  54000000	nop
 1532  00002100          	.endproc _exit
 1534                      ; for the benefit of gcc.
 1535  00002100          	.proc ___main
 1536  00002100          	.global ___main
 1537  00002100          	___main:
 1538  00002100  4be00000	jr	r31
 1539  00002104  54000000	nop
 1540  00002108          	.endproc ___main
 1541  00002108          	.text
 1542  00002108          	.global _etext
 1543  00002108          	_etext:
 1544  00002108          	.align 3
 1545  00002108          	.data
 1546  000030ce          	.global _edata
 1547  000030ce          	_edata:
