 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 169
    4                      ; Text size: 4348
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
   82  00003004  653a2025	
   82  00003008  73203c68	
   82  0000300c  616e646c	
   82  00003010  655f746f	
   82  00003014  5f70726f	
   82  00003018  63735f63	
   82  0000301c  6f6d706c	
   82  00003020  65746564	
   82  00003024  5f73656d	
   82  00003028  6170686f	
   82  0000302c  72653e0a	
   82  00003030  00      	
   83  00003031          	.align 2
   84  00003034          	LC1_LF0:
   85  00003034  68656c6c	.ascii "hello_world (%d): Hello world!\n\000"
   85  00003038  6f5f776f	
   85  0000303c  726c6420	
   85  00003040  28256429	
   85  00003044  3a204865	
   85  00003048  6c6c6f20	
   85  0000304c  776f726c	
   85  00003050  64210a00	
   86  00003054          	.align 2
   87  00003054          	LC2_LF0:
   88  00003054  68656c6c	.ascii "hello_world (%d): Bad semaphore s_procs_completed (%d)!\n\000"
   88  00003058  6f5f776f	
   88  0000305c  726c6420	
   88  00003060  28256429	
   88  00003064  3a204261	
   88  00003068  64207365	
   88  0000306c  6d617068	
   88  00003070  6f726520	
   88  00003074  735f7072	
   88  00003078  6f63735f	
   88  0000307c  636f6d70	
   88  00003080  6c657465	
   88  00003084  64202825	
   88  00003088  6429210a	
   88  0000308c  00      	
   89  0000308d          	.align 2
   90  00003090          	LC3_LF0:
   91  00003090  68656c6c	.ascii "hello_world (%d): Done!\n\000"
   91  00003094  6f5f776f	
   91  00003098  726c6420	
   91  0000309c  28256429	
   91  000030a0  3a20446f	
   91  000030a4  6e65210a	
   91  000030a8  00      	
   92  000030a9          	.text
   93  000010d4          	.align 2
   94  000010d4          	.proc _main
   95  000010d4          	.global _main
   96  000010d4          	_main:
   97                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
   98  000010d4  afbefffc	sw	-4(r29),r30; push fp
   99  000010d8  001df020	add	r30,r0,r29; fp = sp
  100  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  101  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  102  000010e4  8fc20000	lw	r2,(r30)
  103  000010e8  8fc30004	lw	r3,4(r30)
  104  000010ec  0c001004	jal	___main
  105  000010f0  54000000	nop; not filled.
  106  000010f4  64410002	snei	r1,r2,#2
  107  000010f8  10200028	beqz	r1,L17_LF0
  108  000010fc  54000000	nop; not filled.
  109  00001100  23bdfff8	addi	r29,r29,#-8
  110  00001104  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  111  00001108  24843000	addui	r4,r4,(LC0_LF0)&0xffff
  112  0000110c  afa40000	sw	(r29),r4
  113  00001110  0c000120	jal	_Printf
  114  00001114  54000000	nop; not filled.
  115  00001118  0c000220	jal	_Exit
  116  0000111c  54000000	nop; not filled.
  117  00001120  23bd0008	addi	r29,r29,#8
  118  00001124          	L17_LF0:
  119  00001124  23bdfff0	addi	r29,r29,#-16
  120  00001128  8c630004	lw	r3,4(r3)
  121  0000112c  afa30000	sw	(r29),r3
  122  00001130  20040000	addi	r4,r0,#0
  123  00001134  afa40004	sw	4(r29),r4
  124  00001138  2004000a	addi	r4,r0,#10
  125  0000113c  afa40008	sw	8(r29),r4
  126  00001140  0c000ab4	jal	_dstrtol
  127  00001144  54000000	nop; not filled.
  128  00001148  00011020	add	r2,r0,r1
  129  0000114c  0c0000f0	jal	_getpid
  130  00001150  54000000	nop; not filled.
  131  00001154  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  132  00001158  24843034	addui	r4,r4,(LC1_LF0)&0xffff
  133  0000115c  afa40000	sw	(r29),r4
  134  00001160  afa10004	sw	4(r29),r1
  135  00001164  0c0000cc	jal	_Printf
  136  00001168  54000000	nop; not filled.
  137  0000116c  afa20000	sw	(r29),r2
  138  00001170  0c000114	jal	_sem_signal
  139  00001174  54000000	nop; not filled.
  140  00001178  23bd0010	addi	r29,r29,#16
  141  0000117c  64210001	snei	r1,r1,#1
  142  00001180  10200038	beqz	r1,L18_LF0
  143  00001184  54000000	nop; not filled.
  144  00001188  0c0000b4	jal	_getpid
  145  0000118c  54000000	nop; not filled.
  146  00001190  23bdfff0	addi	r29,r29,#-16
  147  00001194  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  148  00001198  24843054	addui	r4,r4,(LC2_LF0)&0xffff
  149  0000119c  afa40000	sw	(r29),r4
  150  000011a0  afa10004	sw	4(r29),r1
  151  000011a4  afa20008	sw	8(r29),r2
  152  000011a8  0c000088	jal	_Printf
  153  000011ac  54000000	nop; not filled.
  154  000011b0  0c000188	jal	_Exit
  155  000011b4  54000000	nop; not filled.
  156  000011b8  23bd0010	addi	r29,r29,#16
  157  000011bc          	L18_LF0:
  158  000011bc  0c000080	jal	_getpid
  159  000011c0  54000000	nop; not filled.
  160  000011c4  23bdfff8	addi	r29,r29,#-8
  161  000011c8  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  162  000011cc  24843090	addui	r4,r4,(LC3_LF0)&0xffff
  163  000011d0  afa40000	sw	(r29),r4
  164  000011d4  afa10004	sw	4(r29),r1
  165  000011d8  0c000058	jal	_Printf
  166  000011dc  54000000	nop; not filled.
  167  000011e0  23bd0008	addi	r29,r29,#8
  168  000011e4  0c000f00	jal	_exit
  169  000011e8  54000000	nop
  170  000011ec          	.endproc _main
  171                      ;;;
  172                      ;;; Stub functions for DLX traps.
  173                      ;;;
  174                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  175                      ;;;
  176                      ;;; The traps such as Open and Close
  177                      ;;; (note the capital letters) are for use by user programs.  The traps
  178                      ;;; with names such as open and close (lower case) are for use by the OS.
  179                      ;;;
  182  000011ec          	.align 2
  184                      ;;; The following are the traps to be used by user-level programs
  185                      ;;;
  187  000011ec          	.align 2
  188  000011ec          	.proc _Open
  189  000011ec          	.global _Open
  190  000011ec          	_Open:
  191                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  192                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  193                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  194  000011ec  44000213	trap	#0x213
  195  000011f0  4be00000	jr	r31
  196  000011f4  54000000	nop
  197  000011f8          	.endproc _Open
  199  000011f8          	.proc _Close
  200  000011f8          	.global _Close
  201  000011f8          	_Close:
  202  000011f8  44000214	trap	#0x214
  203  000011fc  4be00000	jr	r31
  204  00001200  54000000	nop
  205  00001204          	.endproc _Close
  207  00001204          	.proc _Read
  208  00001204          	.global _Read
  209  00001204          	_Read:
  210  00001204  44000210	trap	#0x210
  211  00001208  4be00000	jr	r31
  212  0000120c  54000000	nop
  213  00001210          	.endproc _Read
  215  00001210          	.proc _Write
  216  00001210          	.global _Write
  217  00001210          	_Write:
  218  00001210  44000211	trap	#0x211
  219  00001214  4be00000	jr	r31
  220  00001218  54000000	nop
  221  0000121c          	.endproc _Write
  223  0000121c          	.proc _Lseek
  224  0000121c          	.global _Lseek
  225  0000121c          	_Lseek:
  226  0000121c  44000212	trap	#0x212
  227  00001220  4be00000	jr	r31
  228  00001224  54000000	nop
  229  00001228          	.endproc _Lseek
  231  00001228          	.proc _Putchar
  232  00001228          	.global _Putchar
  233  00001228          	_Putchar:
  234  00001228  44000280	trap	#0x280
  235  0000122c  4be00000	jr	r31
  236  00001230  54000000	nop
  237  00001234          	.endproc _Putchar
  239  00001234          	.proc _Printf
  240  00001234          	.global _Printf
  241  00001234          	_Printf:
  242  00001234  44000201	trap	#0x201
  243  00001238  4be00000	jr	r31
  244  0000123c  54000000	nop
  245  00001240          	.endproc _Printf
  247  00001240          	.proc _getpid
  248  00001240          	.global _getpid
  249  00001240          	_getpid:
  250  00001240  44000431	trap	#0x431
  251  00001244  4be00000	jr	r31
  252  00001248  54000000	nop
  253  0000124c          	.endproc _getpid
  255  0000124c          	.proc _process_create
  256  0000124c          	.global _process_create
  257  0000124c          	_process_create:
  258  0000124c  44000432	trap	#0x432
  259  00001250  4be00000	jr	r31
  260  00001254  54000000	nop
  261  00001258          	.endproc _process_create
  263  00001258          	.proc _shmget
  264  00001258          	.global _shmget
  265  00001258          	_shmget:
  266  00001258  44000440	trap	#0x440
  267  0000125c  4be00000	jr	r31
  268  00001260  54000000	nop
  269  00001264          	.endproc _shmget
  271  00001264          	.proc _shmat
  272  00001264          	.global _shmat
  273  00001264          	_shmat:
  274  00001264  44000441	trap	#0x441
  275  00001268  4be00000	jr	r31
  276  0000126c  54000000	nop
  277  00001270          	.endproc _shmat
  279  00001270          	.proc _sem_create
  280  00001270          	.global _sem_create
  281  00001270          	_sem_create:
  282  00001270  44000450	trap	#0x450
  283  00001274  4be00000	jr	r31
  284  00001278  54000000	nop
  285  0000127c          	.endproc _sem_create
  287  0000127c          	.proc _sem_wait
  288  0000127c          	.global _sem_wait
  289  0000127c          	_sem_wait:
  290  0000127c  44000451	trap	#0x451
  291  00001280  4be00000	jr	r31
  292  00001284  54000000	nop
  293  00001288          	.endproc _sem_wait
  295  00001288          	.proc _sem_signal
  296  00001288          	.global _sem_signal
  297  00001288          	_sem_signal:
  298  00001288  44000452	trap	#0x452
  299  0000128c  4be00000	jr	r31
  300  00001290  54000000	nop
  301  00001294          	.endproc _sem_signal
  303  00001294          	.proc _lock_create
  304  00001294          	.global _lock_create
  305  00001294          	_lock_create:
  306  00001294  44000453	trap	#0x453
  307  00001298  4be00000	jr	r31
  308  0000129c  54000000	nop
  309  000012a0          	.endproc _lock_create
  311  000012a0          	.proc _lock_acquire
  312  000012a0          	.global _lock_acquire
  313  000012a0          	_lock_acquire:
  314  000012a0  44000454	trap	#0x454
  315  000012a4  4be00000	jr	r31
  316  000012a8  54000000	nop
  317  000012ac          	.endproc _lock_acquire
  319  000012ac          	.proc _lock_release
  320  000012ac          	.global _lock_release
  321  000012ac          	_lock_release:
  322  000012ac  44000455	trap	#0x455
  323  000012b0  4be00000	jr	r31
  324  000012b4  54000000	nop
  325  000012b8          	.endproc _lock_release
  327  000012b8          	.proc _cond_create
  328  000012b8          	.global _cond_create
  329  000012b8          	_cond_create:
  330  000012b8  44000456	trap	#0x456
  331  000012bc  4be00000	jr	r31
  332  000012c0  54000000	nop
  333  000012c4          	.endproc _cond_create
  335  000012c4          	.proc _cond_wait
  336  000012c4          	.global _cond_wait
  337  000012c4          	_cond_wait:
  338  000012c4  44000457	trap	#0x457
  339  000012c8  4be00000	jr	r31
  340  000012cc  54000000	nop
  341  000012d0          	.endproc _cond_wait
  343  000012d0          	.proc _cond_signal
  344  000012d0          	.global _cond_signal
  345  000012d0          	_cond_signal:
  346  000012d0  44000458	trap	#0x458
  347  000012d4  4be00000	jr	r31
  348  000012d8  54000000	nop
  349  000012dc          	.endproc _cond_signal
  351  000012dc          	.proc _cond_broadcast
  352  000012dc          	.global _cond_broadcast
  353  000012dc          	_cond_broadcast:
  354  000012dc  44000459	trap	#0x459
  355  000012e0  4be00000	jr	r31
  356  000012e4  54000000	nop
  357  000012e8          	.endproc _cond_broadcast
  359  000012e8          	.proc _mbox_create
  360  000012e8          	.global _mbox_create
  361  000012e8          	_mbox_create:
  362  000012e8  44000460	trap	#0x460
  363  000012ec  4be00000	jr	r31
  364  000012f0  54000000	nop
  365  000012f4          	.endproc _mbox_create
  367  000012f4          	.proc _mbox_open
  368  000012f4          	.global _mbox_open
  369  000012f4          	_mbox_open:
  370  000012f4  44000461	trap	#0x461
  371  000012f8  4be00000	jr	r31
  372  000012fc  54000000	nop
  373  00001300          	.endproc _mbox_open
  375  00001300          	.proc _mbox_close
  376  00001300          	.global _mbox_close
  377  00001300          	_mbox_close:
  378  00001300  44000462	trap	#0x462
  379  00001304  4be00000	jr	r31
  380  00001308  54000000	nop
  381  0000130c          	.endproc _mbox_close
  383  0000130c          	.proc _mbox_send
  384  0000130c          	.global _mbox_send
  385  0000130c          	_mbox_send:
  386  0000130c  44000463	trap	#0x463
  387  00001310  4be00000	jr	r31
  388  00001314  54000000	nop
  389  00001318          	.endproc _mbox_send
  391  00001318          	.proc _mbox_recv
  392  00001318          	.global _mbox_recv
  393  00001318          	_mbox_recv:
  394  00001318  44000464	trap	#0x464
  395  0000131c  4be00000	jr	r31
  396  00001320  54000000	nop
  397  00001324          	.endproc _mbox_recv
  399  00001324          	.proc _sleep
  400  00001324          	.global _sleep
  401  00001324          	_sleep:
  402  00001324  44000465	trap	#0x465
  403  00001328  4be00000	jr	r31
  404  0000132c  54000000	nop
  405  00001330          	.endproc _sleep
  407  00001330          	.proc _yield
  408  00001330          	.global _yield
  409  00001330          	_yield:
  410  00001330  44000466	trap	#0x466
  411  00001334  4be00000	jr	r31
  412  00001338  54000000	nop
  413  0000133c          	.endproc _yield
  416  0000133c          	.proc _Exit
  417  0000133c          	.global _Exit
  418  0000133c          	_Exit:
  419  0000133c  44000500	trap	#0x500
  420  00001340  4be00000	jr	r31
  421  00001344  54000000	nop
  422  00001348          	.endproc _Exit
  425  00001348          	.proc _malloc
  426  00001348          	.global _malloc
  427  00001348          	_malloc:
  428  00001348  44000467	trap	#0x467
  429  0000134c  4be00000	jr	r31
  430  00001350          	.endproc _malloc
  433  00001350          	.proc _mfree
  434  00001350          	.global _mfree
  435  00001350          	_mfree:
  436  00001350  44000468	trap	#0x468
  437  00001354  4be00000	jr	r31
  438  00001358          	.endproc _mfree
  439                      ; Compiled by GCC
  441  00001358          	.align 2
  442  00001358          	.proc _isspace
  443  00001358          	.global _isspace
  444  00001358          	_isspace:
  445                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  446  00001358  afbefffc	sw	-4(r29),r30; push fp
  447  0000135c  001df020	add	r30,r0,r29; fp = sp
  448  00001360  afbffff8	sw	-8(r29),r31; push ret addr
  449  00001364  2fbd0018	subui	r29,r29,#24; alloc local storage
  450  00001368  afa20000	sw	0(r29),r2
  451  0000136c  afa30004	sw	4(r29),r3
  452  00001370  afa40008	sw	8(r29),r4
  453  00001374  83c20003	lb	r2,3(r30)
  454  00001378  20010000	addi	r1,r0,#0
  455  0000137c  304300ff	andi	r3,r2,#0x00ff
  456  00001380  60640020	seqi	r4,r3,#32
  457  00001384  1480002c	bnez	r4,L3_LF2
  458  00001388  54000000	nop; delay slot nop
  459  0000138c  304300ff	andi	r3,r2,#0x00ff
  460  00001390  60640009	seqi	r4,r3,#9
  461  00001394  1480001c	bnez	r4,L3_LF2
  462  00001398  54000000	nop; delay slot nop
  463  0000139c  304300ff	andi	r3,r2,#0x00ff
  464  000013a0  6064000a	seqi	r4,r3,#10
  465  000013a4  1480000c	bnez	r4,L3_LF2
  466  000013a8  54000000	nop; delay slot nop
  467  000013ac  08000008	j	L2_LF2
  468  000013b0  54000000	nop; delay slot nop
  469  000013b4          	L3_LF2:
  470  000013b4  20010001	addi	r1,r0,#1
  471  000013b8          	L2_LF2:
  472  000013b8  08000004	j	L1_LF2
  473  000013bc  54000000	nop; delay slot nop
  474  000013c0          	L1_LF2:
  475  000013c0  8fa20000	lw	r2,0(r29)
  476  000013c4  8fa30004	lw	r3,4(r29)
  477  000013c8  8fa40008	lw	r4,8(r29)
  478  000013cc  8fdffff8	lw	r31,-8(r30)
  479  000013d0  001ee820	add	r29,r0,r30
  480  000013d4  8fdefffc	lw	r30,-4(r30)
  481  000013d8  4be00000	jr	r31
  482  000013dc  54000000	nop
  483  000013e0          	.endproc _isspace
  484  000013e0          	.align 2
  485  000013e0          	.proc _isxdigit
  486  000013e0          	.global _isxdigit
  487  000013e0          	_isxdigit:
  488                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  489  000013e0  afbefffc	sw	-4(r29),r30; push fp
  490  000013e4  001df020	add	r30,r0,r29; fp = sp
  491  000013e8  afbffff8	sw	-8(r29),r31; push ret addr
  492  000013ec  2fbd0018	subui	r29,r29,#24; alloc local storage
  493  000013f0  afa20000	sw	0(r29),r2
  494  000013f4  afa30004	sw	4(r29),r3
  495  000013f8  afa40008	sw	8(r29),r4
  496  000013fc  83c20003	lb	r2,3(r30)
  497  00001400  20010000	addi	r1,r0,#0
  498  00001404  304300ff	andi	r3,r2,#0x00ff
  499  00001408  6c64002f	sgtui	r4,r3,#47
  500  0000140c  1080001c	beqz	r4,L7_LF2
  501  00001410  54000000	nop; delay slot nop
  502  00001414  304300ff	andi	r3,r2,#0x00ff
  503  00001418  70640039	sleui	r4,r3,#57
  504  0000141c  1480005c	bnez	r4,L6_LF2
  505  00001420  54000000	nop; delay slot nop
  506  00001424  08000004	j	L7_LF2
  507  00001428  54000000	nop; delay slot nop
  508  0000142c          	L7_LF2:
  509  0000142c  304300ff	andi	r3,r2,#0x00ff
  510  00001430  6c640060	sgtui	r4,r3,#96
  511  00001434  1080001c	beqz	r4,L8_LF2
  512  00001438  54000000	nop; delay slot nop
  513  0000143c  304300ff	andi	r3,r2,#0x00ff
  514  00001440  70640066	sleui	r4,r3,#102
  515  00001444  14800034	bnez	r4,L6_LF2
  516  00001448  54000000	nop; delay slot nop
  517  0000144c  08000004	j	L8_LF2
  518  00001450  54000000	nop; delay slot nop
  519  00001454          	L8_LF2:
  520  00001454  304300ff	andi	r3,r2,#0x00ff
  521  00001458  6c640040	sgtui	r4,r3,#64
  522  0000145c  10800020	beqz	r4,L5_LF2
  523  00001460  54000000	nop; delay slot nop
  524  00001464  304300ff	andi	r3,r2,#0x00ff
  525  00001468  70640041	sleui	r4,r3,#65
  526  0000146c  1480000c	bnez	r4,L6_LF2
  527  00001470  54000000	nop; delay slot nop
  528  00001474  08000008	j	L5_LF2
  529  00001478  54000000	nop; delay slot nop
  530  0000147c          	L6_LF2:
  531  0000147c  20010001	addi	r1,r0,#1
  532  00001480          	L5_LF2:
  533  00001480  08000004	j	L4_LF2
  534  00001484  54000000	nop; delay slot nop
  535  00001488          	L4_LF2:
  536  00001488  8fa20000	lw	r2,0(r29)
  537  0000148c  8fa30004	lw	r3,4(r29)
  538  00001490  8fa40008	lw	r4,8(r29)
  539  00001494  8fdffff8	lw	r31,-8(r30)
  540  00001498  001ee820	add	r29,r0,r30
  541  0000149c  8fdefffc	lw	r30,-4(r30)
  542  000014a0  4be00000	jr	r31
  543  000014a4  54000000	nop
  544  000014a8          	.endproc _isxdigit
  545  000014a8          	.align 2
  546  000014a8          	.proc _dstrcpy
  547  000014a8          	.global _dstrcpy
  548  000014a8          	_dstrcpy:
  549                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  550  000014a8  afbefffc	sw	-4(r29),r30; push fp
  551  000014ac  001df020	add	r30,r0,r29; fp = sp
  552  000014b0  afbffff8	sw	-8(r29),r31; push ret addr
  553  000014b4  2fbd0018	subui	r29,r29,#24; alloc local storage
  554  000014b8  afa20000	sw	0(r29),r2
  555  000014bc  afa30004	sw	4(r29),r3
  556  000014c0  8fc10000	lw	r1,(r30)
  557  000014c4  afc1fff4	sw	-12(r30),r1
  558  000014c8          	L10_LF2:
  559  000014c8  8fc10000	lw	r1,(r30)
  560  000014cc  20220001	addi	r2,r1,#1
  561  000014d0  afc20000	sw	(r30),r2
  562  000014d4  8fc20004	lw	r2,4(r30)
  563  000014d8  20430001	addi	r3,r2,#1
  564  000014dc  afc30004	sw	4(r30),r3
  565  000014e0  80420000	lb	r2,(r2)
  566  000014e4  a0220000	sb	(r1),r2
  567  000014e8  a3c2fff3	sb	-13(r30),r2
  568  000014ec          	L12_LF2:
  569  000014ec  93c1fff3	lbu	r1,-13(r30)
  570  000014f0  64220000	snei	r2,r1,#0
  571  000014f4  1440000c	bnez	r2,L13_LF2
  572  000014f8  54000000	nop; delay slot nop
  573  000014fc  0800000c	j	L11_LF2
  574  00001500  54000000	nop; delay slot nop
  575  00001504          	L13_LF2:
  576  00001504  0bffffc0	j	L10_LF2
  577  00001508  54000000	nop; delay slot nop
  578  0000150c          	L11_LF2:
  579  0000150c  8fc1fff4	lw	r1,-12(r30)
  580  00001510  08000004	j	L9_LF2
  581  00001514  54000000	nop; delay slot nop
  582  00001518          	L9_LF2:
  583  00001518  8fa20000	lw	r2,0(r29)
  584  0000151c  8fa30004	lw	r3,4(r29)
  585  00001520  8fdffff8	lw	r31,-8(r30)
  586  00001524  001ee820	add	r29,r0,r30
  587  00001528  8fdefffc	lw	r30,-4(r30)
  588  0000152c  4be00000	jr	r31
  589  00001530  54000000	nop
  590  00001534          	.endproc _dstrcpy
  591  00001534          	.align 2
  592  00001534          	.proc _dstrncpy
  593  00001534          	.global _dstrncpy
  594  00001534          	_dstrncpy:
  595                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  596  00001534  afbefffc	sw	-4(r29),r30; push fp
  597  00001538  001df020	add	r30,r0,r29; fp = sp
  598  0000153c  afbffff8	sw	-8(r29),r31; push ret addr
  599  00001540  2fbd0018	subui	r29,r29,#24; alloc local storage
  600  00001544  afa20000	sw	0(r29),r2
  601  00001548  afa30004	sw	4(r29),r3
  602  0000154c  8fc10000	lw	r1,(r30)
  603  00001550  afc1fff4	sw	-12(r30),r1
  604  00001554          	L15_LF2:
  605  00001554  8fc10008	lw	r1,8(r30)
  606  00001558  2022ffff	addi	r2,r1,#-1
  607  0000155c  afc20008	sw	8(r30),r2
  608  00001560  70210000	slei	r1,r1,#0
  609  00001564  1020000c	beqz	r1,L18_LF2
  610  00001568  54000000	nop; delay slot nop
  611  0000156c  08000048	j	L16_LF2
  612  00001570  54000000	nop; delay slot nop
  613  00001574          	L18_LF2:
  614  00001574  8fc10000	lw	r1,(r30)
  615  00001578  20220001	addi	r2,r1,#1
  616  0000157c  afc20000	sw	(r30),r2
  617  00001580  8fc20004	lw	r2,4(r30)
  618  00001584  20430001	addi	r3,r2,#1
  619  00001588  afc30004	sw	4(r30),r3
  620  0000158c  80420000	lb	r2,(r2)
  621  00001590  a0220000	sb	(r1),r2
  622  00001594  a3c2fff3	sb	-13(r30),r2
  623  00001598          	L17_LF2:
  624  00001598  93c1fff3	lbu	r1,-13(r30)
  625  0000159c  64220000	snei	r2,r1,#0
  626  000015a0  1440000c	bnez	r2,L19_LF2
  627  000015a4  54000000	nop; delay slot nop
  628  000015a8  0800000c	j	L16_LF2
  629  000015ac  54000000	nop; delay slot nop
  630  000015b0          	L19_LF2:
  631  000015b0  0bffffa0	j	L15_LF2
  632  000015b4  54000000	nop; delay slot nop
  633  000015b8          	L16_LF2:
  634  000015b8  8fc1fff4	lw	r1,-12(r30)
  635  000015bc  08000004	j	L14_LF2
  636  000015c0  54000000	nop; delay slot nop
  637  000015c4          	L14_LF2:
  638  000015c4  8fa20000	lw	r2,0(r29)
  639  000015c8  8fa30004	lw	r3,4(r29)
  640  000015cc  8fdffff8	lw	r31,-8(r30)
  641  000015d0  001ee820	add	r29,r0,r30
  642  000015d4  8fdefffc	lw	r30,-4(r30)
  643  000015d8  4be00000	jr	r31
  644  000015dc  54000000	nop
  645  000015e0          	.endproc _dstrncpy
  646  000015e0          	.align 2
  647  000015e0          	.proc _dstrcat
  648  000015e0          	.global _dstrcat
  649  000015e0          	_dstrcat:
  650                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  651  000015e0  afbefffc	sw	-4(r29),r30; push fp
  652  000015e4  001df020	add	r30,r0,r29; fp = sp
  653  000015e8  afbffff8	sw	-8(r29),r31; push ret addr
  654  000015ec  2fbd0018	subui	r29,r29,#24; alloc local storage
  655  000015f0  afa20000	sw	0(r29),r2
  656  000015f4  8fc10000	lw	r1,(r30)
  657  000015f8  afc1fff4	sw	-12(r30),r1
  658  000015fc          	L21_LF2:
  659  000015fc  8fc10000	lw	r1,(r30)
  660  00001600  90220000	lbu	r2,(r1)
  661  00001604  64410000	snei	r1,r2,#0
  662  00001608  1420000c	bnez	r1,L23_LF2
  663  0000160c  54000000	nop; delay slot nop
  664  00001610  0800001c	j	L22_LF2
  665  00001614  54000000	nop; delay slot nop
  666  00001618          	L23_LF2:
  667  00001618  8fc20000	lw	r2,(r30)
  668  0000161c  20410001	addi	r1,r2,#1
  669  00001620  00011020	add	r2,r0,r1
  670  00001624  afc20000	sw	(r30),r2
  671  00001628  0bffffd0	j	L21_LF2
  672  0000162c  54000000	nop; delay slot nop
  673  00001630          	L22_LF2:
  674  00001630  23bdfff8	addi	r29,r29,#-8
  675  00001634  001d0820	add	r1,r0,r29
  676  00001638  8fc20000	lw	r2,(r30)
  677  0000163c  ac220000	sw	(r1),r2
  678  00001640  8fc20004	lw	r2,4(r30)
  679  00001644  ac220004	sw	4(r1),r2
  680  00001648  0ffffe5c	jal	_dstrcpy
  681  0000164c  54000000	nop; delay slot nop
  682  00001650  23bd0008	addi	r29,r29,#8
  683  00001654  8fc1fff4	lw	r1,-12(r30)
  684  00001658  08000004	j	L20_LF2
  685  0000165c  54000000	nop; delay slot nop
  686  00001660          	L20_LF2:
  687  00001660  8fa20000	lw	r2,0(r29)
  688  00001664  8fdffff8	lw	r31,-8(r30)
  689  00001668  001ee820	add	r29,r0,r30
  690  0000166c  8fdefffc	lw	r30,-4(r30)
  691  00001670  4be00000	jr	r31
  692  00001674  54000000	nop
  693  00001678          	.endproc _dstrcat
  694  00001678          	.align 2
  695  00001678          	.proc _dstrncmp
  696  00001678          	.global _dstrncmp
  697  00001678          	_dstrncmp:
  698                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  699  00001678  afbefffc	sw	-4(r29),r30; push fp
  700  0000167c  001df020	add	r30,r0,r29; fp = sp
  701  00001680  afbffff8	sw	-8(r29),r31; push ret addr
  702  00001684  2fbd0018	subui	r29,r29,#24; alloc local storage
  703  00001688  afa20000	sw	0(r29),r2
  704  0000168c  afa30004	sw	4(r29),r3
  705  00001690  54000000	nop
  706  00001694  20010000	addi	r1,r0,#0
  707  00001698  afc1fff4	sw	-12(r30),r1
  708  0000169c          	L25_LF2:
  709  0000169c  8fc1fff4	lw	r1,-12(r30)
  710  000016a0  8fc20008	lw	r2,8(r30)
  711  000016a4  0022082a	slt	r1,r1,r2
  712  000016a8  1420000c	bnez	r1,L28_LF2
  713  000016ac  54000000	nop; delay slot nop
  714  000016b0  08000088	j	L26_LF2
  715  000016b4  54000000	nop; delay slot nop
  716  000016b8          	L28_LF2:
  717  000016b8  8fc10004	lw	r1,4(r30)
  718  000016bc  90220000	lbu	r2,(r1)
  719  000016c0  64410000	snei	r1,r2,#0
  720  000016c4  14200018	bnez	r1,L29_LF2
  721  000016c8  54000000	nop; delay slot nop
  722  000016cc  20010000	addi	r1,r0,#0
  723  000016d0  080000d8	j	L24_LF2
  724  000016d4  54000000	nop; delay slot nop
  725  000016d8  08000028	j	L30_LF2
  726  000016dc  54000000	nop; delay slot nop
  727  000016e0          	L29_LF2:
  728  000016e0  8fc10000	lw	r1,(r30)
  729  000016e4  8fc20004	lw	r2,4(r30)
  730  000016e8  90210000	lbu	r1,(r1)
  731  000016ec  90420000	lbu	r2,(r2)
  732  000016f0  00220829	sne	r1,r1,r2
  733  000016f4  1020000c	beqz	r1,L30_LF2
  734  000016f8  54000000	nop; delay slot nop
  735  000016fc  0800003c	j	L26_LF2
  736  00001700  54000000	nop; delay slot nop
  737  00001704          	L31_LF2:
  738  00001704          	L30_LF2:
  739  00001704  8fc20000	lw	r2,(r30)
  740  00001708  20410001	addi	r1,r2,#1
  741  0000170c  00011020	add	r2,r0,r1
  742  00001710  afc20000	sw	(r30),r2
  743  00001714  8fc20004	lw	r2,4(r30)
  744  00001718  20410001	addi	r1,r2,#1
  745  0000171c  00011020	add	r2,r0,r1
  746  00001720  afc20004	sw	4(r30),r2
  747  00001724          	L27_LF2:
  748  00001724  8fc2fff4	lw	r2,-12(r30)
  749  00001728  20410001	addi	r1,r2,#1
  750  0000172c  00011020	add	r2,r0,r1
  751  00001730  afc2fff4	sw	-12(r30),r2
  752  00001734  0bffff64	j	L25_LF2
  753  00001738  54000000	nop; delay slot nop
  754  0000173c          	L26_LF2:
  755  0000173c  8fc1fff4	lw	r1,-12(r30)
  756  00001740  8fc20008	lw	r2,8(r30)
  757  00001744  00220828	seq	r1,r1,r2
  758  00001748  10200018	beqz	r1,L32_LF2
  759  0000174c  54000000	nop; delay slot nop
  760  00001750  20010000	addi	r1,r0,#0
  761  00001754  08000054	j	L24_LF2
  762  00001758  54000000	nop; delay slot nop
  763  0000175c  0800004c	j	L33_LF2
  764  00001760  54000000	nop; delay slot nop
  765  00001764          	L32_LF2:
  766  00001764  8fc20000	lw	r2,(r30)
  767  00001768  90410000	lbu	r1,(r2)
  768  0000176c  8fc20004	lw	r2,4(r30)
  769  00001770  90430000	lbu	r3,(r2)
  770  00001774  00230822	sub	r1,r1,r3
  771  00001778  74220000	sgei	r2,r1,#0
  772  0000177c  10400020	beqz	r2,L34_LF2
  773  00001780  54000000	nop; delay slot nop
  774  00001784  8fc10000	lw	r1,(r30)
  775  00001788  8fc20004	lw	r2,4(r30)
  776  0000178c  90210000	lbu	r1,(r1)
  777  00001790  90420000	lbu	r2,(r2)
  778  00001794  00220829	sne	r1,r1,r2
  779  00001798  08000008	j	L35_LF2
  780  0000179c  54000000	nop; delay slot nop
  781  000017a0          	L34_LF2:
  782  000017a0  2001ffff	addi	r1,r0,#-1
  783  000017a4          	L35_LF2:
  784  000017a4  08000004	j	L24_LF2
  785  000017a8  54000000	nop; delay slot nop
  786  000017ac          	L33_LF2:
  787  000017ac          	L24_LF2:
  788  000017ac  8fa20000	lw	r2,0(r29)
  789  000017b0  8fa30004	lw	r3,4(r29)
  790  000017b4  8fdffff8	lw	r31,-8(r30)
  791  000017b8  001ee820	add	r29,r0,r30
  792  000017bc  8fdefffc	lw	r30,-4(r30)
  793  000017c0  4be00000	jr	r31
  794  000017c4  54000000	nop
  795  000017c8          	.endproc _dstrncmp
  796  000017c8          	.align 2
  797  000017c8          	.proc _dstrlen
  798  000017c8          	.global _dstrlen
  799  000017c8          	_dstrlen:
  800                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  801  000017c8  afbefffc	sw	-4(r29),r30; push fp
  802  000017cc  001df020	add	r30,r0,r29; fp = sp
  803  000017d0  afbffff8	sw	-8(r29),r31; push ret addr
  804  000017d4  2fbd0018	subui	r29,r29,#24; alloc local storage
  805  000017d8  afa20000	sw	0(r29),r2
  806  000017dc  20010000	addi	r1,r0,#0
  807  000017e0  afc1fff4	sw	-12(r30),r1
  808  000017e4          	L37_LF2:
  809  000017e4  8fc10000	lw	r1,(r30)
  810  000017e8  20220001	addi	r2,r1,#1
  811  000017ec  afc20000	sw	(r30),r2
  812  000017f0  90210000	lbu	r1,(r1)
  813  000017f4  64220000	snei	r2,r1,#0
  814  000017f8  1440000c	bnez	r2,L39_LF2
  815  000017fc  54000000	nop; delay slot nop
  816  00001800  0800001c	j	L38_LF2
  817  00001804  54000000	nop; delay slot nop
  818  00001808          	L39_LF2:
  819  00001808  8fc2fff4	lw	r2,-12(r30)
  820  0000180c  20410001	addi	r1,r2,#1
  821  00001810  00011020	add	r2,r0,r1
  822  00001814  afc2fff4	sw	-12(r30),r2
  823  00001818  0bffffc8	j	L37_LF2
  824  0000181c  54000000	nop; delay slot nop
  825  00001820          	L38_LF2:
  826  00001820  8fc1fff4	lw	r1,-12(r30)
  827  00001824  08000004	j	L36_LF2
  828  00001828  54000000	nop; delay slot nop
  829  0000182c          	L36_LF2:
  830  0000182c  8fa20000	lw	r2,0(r29)
  831  00001830  8fdffff8	lw	r31,-8(r30)
  832  00001834  001ee820	add	r29,r0,r30
  833  00001838  8fdefffc	lw	r30,-4(r30)
  834  0000183c  4be00000	jr	r31
  835  00001840  54000000	nop
  836  00001844          	.endproc _dstrlen
  837  00001844          	.align 2
  838  00001844          	.proc _dstrstr
  839  00001844          	.global _dstrstr
  840  00001844          	_dstrstr:
  841                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  842  00001844  afbefffc	sw	-4(r29),r30; push fp
  843  00001848  001df020	add	r30,r0,r29; fp = sp
  844  0000184c  afbffff8	sw	-8(r29),r31; push ret addr
  845  00001850  2fbd0018	subui	r29,r29,#24; alloc local storage
  846  00001854  afa20000	sw	0(r29),r2
  847  00001858  23bdfff8	addi	r29,r29,#-8
  848  0000185c  001d0820	add	r1,r0,r29
  849  00001860  8fc20004	lw	r2,4(r30)
  850  00001864  ac220000	sw	(r1),r2
  851  00001868  0fffff5c	jal	_dstrlen
  852  0000186c  54000000	nop; delay slot nop
  853  00001870  23bd0008	addi	r29,r29,#8
  854  00001874  afc1fff4	sw	-12(r30),r1
  855  00001878          	L41_LF2:
  856  00001878  8fc10000	lw	r1,(r30)
  857  0000187c  90220000	lbu	r2,(r1)
  858  00001880  64410000	snei	r1,r2,#0
  859  00001884  1420000c	bnez	r1,L43_LF2
  860  00001888  54000000	nop; delay slot nop
  861  0000188c  08000060	j	L42_LF2
  862  00001890  54000000	nop; delay slot nop
  863  00001894          	L43_LF2:
  864  00001894  23bdfff0	addi	r29,r29,#-16
  865  00001898  001d0820	add	r1,r0,r29
  866  0000189c  8fc20000	lw	r2,(r30)
  867  000018a0  ac220000	sw	(r1),r2
  868  000018a4  8fc20004	lw	r2,4(r30)
  869  000018a8  ac220004	sw	4(r1),r2
  870  000018ac  8fc2fff4	lw	r2,-12(r30)
  871  000018b0  ac220008	sw	8(r1),r2
  872  000018b4  0ffffdc0	jal	_dstrncmp
  873  000018b8  54000000	nop; delay slot nop
  874  000018bc  23bd0010	addi	r29,r29,#16
  875  000018c0  64220000	snei	r2,r1,#0
  876  000018c4  14400010	bnez	r2,L44_LF2
  877  000018c8  54000000	nop; delay slot nop
  878  000018cc  8fc10000	lw	r1,(r30)
  879  000018d0  08000028	j	L40_LF2
  880  000018d4  54000000	nop; delay slot nop
  881  000018d8          	L44_LF2:
  882  000018d8  8fc20000	lw	r2,(r30)
  883  000018dc  20410001	addi	r1,r2,#1
  884  000018e0  00011020	add	r2,r0,r1
  885  000018e4  afc20000	sw	(r30),r2
  886  000018e8  0bffff8c	j	L41_LF2
  887  000018ec  54000000	nop; delay slot nop
  888  000018f0          	L42_LF2:
  889  000018f0  20010000	addi	r1,r0,#0
  890  000018f4  08000004	j	L40_LF2
  891  000018f8  54000000	nop; delay slot nop
  892  000018fc          	L40_LF2:
  893  000018fc  8fa20000	lw	r2,0(r29)
  894  00001900  8fdffff8	lw	r31,-8(r30)
  895  00001904  001ee820	add	r29,r0,r30
  896  00001908  8fdefffc	lw	r30,-4(r30)
  897  0000190c  4be00000	jr	r31
  898  00001910  54000000	nop
  899  00001914          	.endproc _dstrstr
  900  00001914          	.align 2
  901  00001914          	.proc _dmindex
  902  00001914          	.global _dmindex
  903  00001914          	_dmindex:
  904                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  905  00001914  afbefffc	sw	-4(r29),r30; push fp
  906  00001918  001df020	add	r30,r0,r29; fp = sp
  907  0000191c  afbffff8	sw	-8(r29),r31; push ret addr
  908  00001920  2fbd0018	subui	r29,r29,#24; alloc local storage
  909  00001924  afa20000	sw	0(r29),r2
  910  00001928  54000000	nop
  911  0000192c          	L46_LF2:
  912  0000192c  8fc10000	lw	r1,(r30)
  913  00001930  90220000	lbu	r2,(r1)
  914  00001934  64410000	snei	r1,r2,#0
  915  00001938  1420000c	bnez	r1,L48_LF2
  916  0000193c  54000000	nop; delay slot nop
  917  00001940  08000070	j	L47_LF2
  918  00001944  54000000	nop; delay slot nop
  919  00001948          	L48_LF2:
  920  00001948  8fc10004	lw	r1,4(r30)
  921  0000194c  afc1fff4	sw	-12(r30),r1
  922  00001950          	L49_LF2:
  923  00001950  8fc1fff4	lw	r1,-12(r30)
  924  00001954  90220000	lbu	r2,(r1)
  925  00001958  64410000	snei	r1,r2,#0
  926  0000195c  1420000c	bnez	r1,L52_LF2
  927  00001960  54000000	nop; delay slot nop
  928  00001964  08000044	j	L50_LF2
  929  00001968  54000000	nop; delay slot nop
  930  0000196c          	L52_LF2:
  931  0000196c  8fc10000	lw	r1,(r30)
  932  00001970  8fc2fff4	lw	r2,-12(r30)
  933  00001974  90210000	lbu	r1,(r1)
  934  00001978  90420000	lbu	r2,(r2)
  935  0000197c  00220828	seq	r1,r1,r2
  936  00001980  10200010	beqz	r1,L51_LF2
  937  00001984  54000000	nop; delay slot nop
  938  00001988  8fc10000	lw	r1,(r30)
  939  0000198c  08000030	j	L45_LF2
  940  00001990  54000000	nop; delay slot nop
  941  00001994          	L53_LF2:
  942  00001994          	L51_LF2:
  943  00001994  8fc2fff4	lw	r2,-12(r30)
  944  00001998  20410001	addi	r1,r2,#1
  945  0000199c  00011020	add	r2,r0,r1
  946  000019a0  afc2fff4	sw	-12(r30),r2
  947  000019a4  0bffffa8	j	L49_LF2
  948  000019a8  54000000	nop; delay slot nop
  949  000019ac          	L50_LF2:
  950  000019ac  0bffff7c	j	L46_LF2
  951  000019b0  54000000	nop; delay slot nop
  952  000019b4          	L47_LF2:
  953  000019b4  20010000	addi	r1,r0,#0
  954  000019b8  08000004	j	L45_LF2
  955  000019bc  54000000	nop; delay slot nop
  956  000019c0          	L45_LF2:
  957  000019c0  8fa20000	lw	r2,0(r29)
  958  000019c4  8fdffff8	lw	r31,-8(r30)
  959  000019c8  001ee820	add	r29,r0,r30
  960  000019cc  8fdefffc	lw	r30,-4(r30)
  961  000019d0  4be00000	jr	r31
  962  000019d4  54000000	nop
  963  000019d8          	.endproc _dmindex
  964  000019d8          	.align 2
  965  000019d8          	.proc _dindex
  966  000019d8          	.global _dindex
  967  000019d8          	_dindex:
  968                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  969  000019d8  afbefffc	sw	-4(r29),r30; push fp
  970  000019dc  001df020	add	r30,r0,r29; fp = sp
  971  000019e0  afbffff8	sw	-8(r29),r31; push ret addr
  972  000019e4  2fbd0010	subui	r29,r29,#16; alloc local storage
  973  000019e8  afa20000	sw	0(r29),r2
  974  000019ec  54000000	nop
  975  000019f0          	L55_LF2:
  976  000019f0  8fc10000	lw	r1,(r30)
  977  000019f4  90220000	lbu	r2,(r1)
  978  000019f8  64410000	snei	r1,r2,#0
  979  000019fc  1420000c	bnez	r1,L57_LF2
  980  00001a00  54000000	nop; delay slot nop
  981  00001a04  08000040	j	L56_LF2
  982  00001a08  54000000	nop; delay slot nop
  983  00001a0c          	L57_LF2:
  984  00001a0c  8fc10000	lw	r1,(r30)
  985  00001a10  90220000	lbu	r2,(r1)
  986  00001a14  8fc10004	lw	r1,4(r30)
  987  00001a18  00411028	seq	r2,r2,r1
  988  00001a1c  10400010	beqz	r2,L58_LF2
  989  00001a20  54000000	nop; delay slot nop
  990  00001a24  8fc10000	lw	r1,(r30)
  991  00001a28  08000028	j	L54_LF2
  992  00001a2c  54000000	nop; delay slot nop
  993  00001a30          	L58_LF2:
  994  00001a30  8fc20000	lw	r2,(r30)
  995  00001a34  20410001	addi	r1,r2,#1
  996  00001a38  00011020	add	r2,r0,r1
  997  00001a3c  afc20000	sw	(r30),r2
  998  00001a40  0bffffac	j	L55_LF2
  999  00001a44  54000000	nop; delay slot nop
 1000  00001a48          	L56_LF2:
 1001  00001a48  20010000	addi	r1,r0,#0
 1002  00001a4c  08000004	j	L54_LF2
 1003  00001a50  54000000	nop; delay slot nop
 1004  00001a54          	L54_LF2:
 1005  00001a54  8fa20000	lw	r2,0(r29)
 1006  00001a58  8fdffff8	lw	r31,-8(r30)
 1007  00001a5c  001ee820	add	r29,r0,r30
 1008  00001a60  8fdefffc	lw	r30,-4(r30)
 1009  00001a64  4be00000	jr	r31
 1010  00001a68  54000000	nop
 1011  00001a6c          	.endproc _dindex
 1012  00001a6c          	.align 2
 1013  00001a6c          	.proc _ditoa
 1014  00001a6c          	.global _ditoa
 1015  00001a6c          	_ditoa:
 1016                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1017  00001a6c  afbefffc	sw	-4(r29),r30; push fp
 1018  00001a70  001df020	add	r30,r0,r29; fp = sp
 1019  00001a74  afbffff8	sw	-8(r29),r31; push ret addr
 1020  00001a78  2fbd0018	subui	r29,r29,#24; alloc local storage
 1021  00001a7c  afa20000	sw	0(r29),r2
 1022  00001a80  afa30004	sw	4(r29),r3
 1023  00001a84  8fc10000	lw	r1,(r30)
 1024  00001a88  68220000	slti	r2,r1,#0
 1025  00001a8c  1040002c	beqz	r2,L60_LF2
 1026  00001a90  54000000	nop; delay slot nop
 1027  00001a94  8fc10004	lw	r1,4(r30)
 1028  00001a98  20220001	addi	r2,r1,#1
 1029  00001a9c  afc20004	sw	4(r30),r2
 1030  00001aa0  2002002d	addi	r2,r0,(#0x2d)&0xff
 1031  00001aa4  a0220000	sb	(r1),r2
 1032  00001aa8  8fc10000	lw	r1,(r30)
 1033  00001aac  00011022	sub	r2,r0,r1
 1034  00001ab0  afc20000	sw	(r30),r2
 1035  00001ab4  08000118	j	L61_LF2
 1036  00001ab8  54000000	nop; delay slot nop
 1037  00001abc          	L60_LF2:
 1038  00001abc  8fc10000	lw	r1,(r30)
 1039  00001ac0  64220000	snei	r2,r1,#0
 1040  00001ac4  14400020	bnez	r2,L62_LF2
 1041  00001ac8  54000000	nop; delay slot nop
 1042  00001acc  8fc10004	lw	r1,4(r30)
 1043  00001ad0  20220001	addi	r2,r1,#1
 1044  00001ad4  afc20004	sw	4(r30),r2
 1045  00001ad8  20020030	addi	r2,r0,(#0x30)&0xff
 1046  00001adc  a0220000	sb	(r1),r2
 1047  00001ae0  080000ec	j	L61_LF2
 1048  00001ae4  54000000	nop; delay slot nop
 1049  00001ae8          	L62_LF2:
 1050  00001ae8  20010001	addi	r1,r0,#1
 1051  00001aec  afc1fff4	sw	-12(r30),r1
 1052  00001af0          	L64_LF2:
 1053  00001af0  8fc1fff4	lw	r1,-12(r30)
 1054  00001af4  8fc20000	lw	r2,(r30)
 1055  00001af8  0022082c	sle	r1,r1,r2
 1056  00001afc  1420000c	bnez	r1,L66_LF2
 1057  00001b00  54000000	nop; delay slot nop
 1058  00001b04  08000024	j	L65_LF2
 1059  00001b08  54000000	nop; delay slot nop
 1060  00001b0c          	L67_LF2:
 1061  00001b0c          	L66_LF2:
 1062  00001b0c  8fc1fff4	lw	r1,-12(r30)
 1063  00001b10  00011820	add	r3,r0,r1
 1064  00001b14  50620002	slli	r2,r3,#0x2
 1065  00001b18  00411020	add	r2,r2,r1
 1066  00001b1c  50410001	slli	r1,r2,#0x1
 1067  00001b20  afc1fff4	sw	-12(r30),r1
 1068  00001b24  0bffffc8	j	L64_LF2
 1069  00001b28  54000000	nop; delay slot nop
 1070  00001b2c          	L65_LF2:
 1071  00001b2c  54000000	nop
 1072  00001b30          	L68_LF2:
 1073  00001b30  8fc1fff4	lw	r1,-12(r30)
 1074  00001b34  2002000a	addi	r2,r0,#10
 1075  00001b38  00200035	movi2fp	f0,r1
 1076  00001b3c  00400835	movi2fp	f1,r2
 1077  00001b40  0401000f	div	f0,f0,f1
 1078  00001b44  00000834	movfp2i	r1,f0
 1079  00001b48  afc1fff4	sw	-12(r30),r1
 1080  00001b4c  8fc10004	lw	r1,4(r30)
 1081  00001b50  20220001	addi	r2,r1,#1
 1082  00001b54  afc20004	sw	4(r30),r2
 1083  00001b58  8fc20000	lw	r2,(r30)
 1084  00001b5c  8fc3fff4	lw	r3,-12(r30)
 1085  00001b60  00400035	movi2fp	f0,r2
 1086  00001b64  00600835	movi2fp	f1,r3
 1087  00001b68  0401000f	div	f0,f0,f1
 1088  00001b6c  00001034	movfp2i	r2,f0
 1089  00001b70  00021820	add	r3,r0,r2
 1090  00001b74  20620030	addi	r2,r3,#48
 1091  00001b78  a0220000	sb	(r1),r2
 1092  00001b7c  8fc10000	lw	r1,(r30)
 1093  00001b80  8fc3fff4	lw	r3,-12(r30)
 1094  00001b84  00200035	movi2fp	f0,r1
 1095  00001b88  00600835	movi2fp	f1,r3
 1096  00001b8c  0401000f	div	f0,f0,f1
 1097  00001b90  00001034	movfp2i	r2,f0
 1098  00001b94  8fc3fff4	lw	r3,-12(r30)
 1099  00001b98  00400035	movi2fp	f0,r2
 1100  00001b9c  00600835	movi2fp	f1,r3
 1101  00001ba0  0401000e	mult	f0,f0,f1
 1102  00001ba4  00001034	movfp2i	r2,f0
 1103  00001ba8  00220822	sub	r1,r1,r2
 1104  00001bac  afc10000	sw	(r30),r1
 1105  00001bb0          	L70_LF2:
 1106  00001bb0  8fc1fff4	lw	r1,-12(r30)
 1107  00001bb4  6c220001	sgti	r2,r1,#1
 1108  00001bb8  1440000c	bnez	r2,L71_LF2
 1109  00001bbc  54000000	nop; delay slot nop
 1110  00001bc0  0800000c	j	L61_LF2
 1111  00001bc4  54000000	nop; delay slot nop
 1112  00001bc8          	L71_LF2:
 1113  00001bc8  0bffff64	j	L68_LF2
 1114  00001bcc  54000000	nop; delay slot nop
 1115  00001bd0          	L69_LF2:
 1116  00001bd0          	L63_LF2:
 1117  00001bd0          	L61_LF2:
 1118  00001bd0  8fc10004	lw	r1,4(r30)
 1119  00001bd4  20020000	addi	r2,r0,(#0x0)&0xff
 1120  00001bd8  a0220000	sb	(r1),r2
 1121  00001bdc          	L59_LF2:
 1122  00001bdc  8fa20000	lw	r2,0(r29)
 1123  00001be0  8fa30004	lw	r3,4(r29)
 1124  00001be4  8fdffff8	lw	r31,-8(r30)
 1125  00001be8  001ee820	add	r29,r0,r30
 1126  00001bec  8fdefffc	lw	r30,-4(r30)
 1127  00001bf0  4be00000	jr	r31
 1128  00001bf4  54000000	nop
 1129  00001bf8          	.endproc _ditoa
 1130  00001bf8          	.align 2
 1131  00001bf8          	.proc _dstrtol
 1132  00001bf8          	.global _dstrtol
 1133  00001bf8          	_dstrtol:
 1134                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1135  00001bf8  afbefffc	sw	-4(r29),r30; push fp
 1136  00001bfc  001df020	add	r30,r0,r29; fp = sp
 1137  00001c00  afbffff8	sw	-8(r29),r31; push ret addr
 1138  00001c04  2fbd0020	subui	r29,r29,#32; alloc local storage
 1139  00001c08  afa20000	sw	0(r29),r2
 1140  00001c0c  20010000	addi	r1,r0,#0
 1141  00001c10  afc1fff4	sw	-12(r30),r1
 1142  00001c14          	L73_LF2:
 1143  00001c14  8fc10000	lw	r1,(r30)
 1144  00001c18  90220000	lbu	r2,(r1)
 1145  00001c1c  60410020	seqi	r1,r2,#32
 1146  00001c20  14200034	bnez	r1,L75_LF2
 1147  00001c24  54000000	nop; delay slot nop
 1148  00001c28  8fc10000	lw	r1,(r30)
 1149  00001c2c  90220000	lbu	r2,(r1)
 1150  00001c30  60410009	seqi	r1,r2,#9
 1151  00001c34  14200020	bnez	r1,L75_LF2
 1152  00001c38  54000000	nop; delay slot nop
 1153  00001c3c  8fc10000	lw	r1,(r30)
 1154  00001c40  90220000	lbu	r2,(r1)
 1155  00001c44  6041000a	seqi	r1,r2,#10
 1156  00001c48  1420000c	bnez	r1,L75_LF2
 1157  00001c4c  54000000	nop; delay slot nop
 1158  00001c50  0800001c	j	L74_LF2
 1159  00001c54  54000000	nop; delay slot nop
 1160  00001c58          	L75_LF2:
 1161  00001c58  8fc20000	lw	r2,(r30)
 1162  00001c5c  20410001	addi	r1,r2,#1
 1163  00001c60  00011020	add	r2,r0,r1
 1164  00001c64  afc20000	sw	(r30),r2
 1165  00001c68  0bffffa8	j	L73_LF2
 1166  00001c6c  54000000	nop; delay slot nop
 1167  00001c70          	L74_LF2:
 1168  00001c70  8fc10004	lw	r1,4(r30)
 1169  00001c74  64220000	snei	r2,r1,#0
 1170  00001c78  10400010	beqz	r2,L76_LF2
 1171  00001c7c  54000000	nop; delay slot nop
 1172  00001c80  8fc10004	lw	r1,4(r30)
 1173  00001c84  8fc20000	lw	r2,(r30)
 1174  00001c88  ac220000	sw	(r1),r2
 1175  00001c8c          	L76_LF2:
 1176  00001c8c  8fc10000	lw	r1,(r30)
 1177  00001c90  90220000	lbu	r2,(r1)
 1178  00001c94  64410000	snei	r1,r2,#0
 1179  00001c98  14200010	bnez	r1,L77_LF2
 1180  00001c9c  54000000	nop; delay slot nop
 1181  00001ca0  8fc1fff4	lw	r1,-12(r30)
 1182  00001ca4  08000294	j	L72_LF2
 1183  00001ca8  54000000	nop; delay slot nop
 1184  00001cac          	L77_LF2:
 1185  00001cac  8fc10000	lw	r1,(r30)
 1186  00001cb0  90220000	lbu	r2,(r1)
 1187  00001cb4  6041002d	seqi	r1,r2,#45
 1188  00001cb8  10200024	beqz	r1,L78_LF2
 1189  00001cbc  54000000	nop; delay slot nop
 1190  00001cc0  2001ffff	addi	r1,r0,#-1
 1191  00001cc4  afc1ffec	sw	-20(r30),r1
 1192  00001cc8  8fc20000	lw	r2,(r30)
 1193  00001ccc  20410001	addi	r1,r2,#1
 1194  00001cd0  00011020	add	r2,r0,r1
 1195  00001cd4  afc20000	sw	(r30),r2
 1196  00001cd8  0800000c	j	L79_LF2
 1197  00001cdc  54000000	nop; delay slot nop
 1198  00001ce0          	L78_LF2:
 1199  00001ce0  20010001	addi	r1,r0,#1
 1200  00001ce4  afc1ffec	sw	-20(r30),r1
 1201  00001ce8          	L79_LF2:
 1202  00001ce8  8fc10008	lw	r1,8(r30)
 1203  00001cec  64220000	snei	r2,r1,#0
 1204  00001cf0  14400090	bnez	r2,L80_LF2
 1205  00001cf4  54000000	nop; delay slot nop
 1206  00001cf8  8fc10000	lw	r1,(r30)
 1207  00001cfc  90220000	lbu	r2,(r1)
 1208  00001d00  60410030	seqi	r1,r2,#48
 1209  00001d04  10200074	beqz	r1,L81_LF2
 1210  00001d08  54000000	nop; delay slot nop
 1211  00001d0c  8fc20000	lw	r2,(r30)
 1212  00001d10  20410001	addi	r1,r2,#1
 1213  00001d14  00011020	add	r2,r0,r1
 1214  00001d18  afc20000	sw	(r30),r2
 1215  00001d1c  8fc10000	lw	r1,(r30)
 1216  00001d20  90220000	lbu	r2,(r1)
 1217  00001d24  60410078	seqi	r1,r2,#120
 1218  00001d28  14200020	bnez	r1,L83_LF2
 1219  00001d2c  54000000	nop; delay slot nop
 1220  00001d30  8fc10000	lw	r1,(r30)
 1221  00001d34  90220000	lbu	r2,(r1)
 1222  00001d38  60410058	seqi	r1,r2,#88
 1223  00001d3c  1420000c	bnez	r1,L83_LF2
 1224  00001d40  54000000	nop; delay slot nop
 1225  00001d44  08000024	j	L82_LF2
 1226  00001d48  54000000	nop; delay slot nop
 1227  00001d4c          	L83_LF2:
 1228  00001d4c  20010010	addi	r1,r0,#16
 1229  00001d50  afc10008	sw	8(r30),r1
 1230  00001d54  8fc20000	lw	r2,(r30)
 1231  00001d58  20410001	addi	r1,r2,#1
 1232  00001d5c  00011020	add	r2,r0,r1
 1233  00001d60  afc20000	sw	(r30),r2
 1234  00001d64  0800000c	j	L84_LF2
 1235  00001d68  54000000	nop; delay slot nop
 1236  00001d6c          	L82_LF2:
 1237  00001d6c  20010008	addi	r1,r0,#8
 1238  00001d70  afc10008	sw	8(r30),r1
 1239  00001d74          	L84_LF2:
 1240  00001d74  0800000c	j	L80_LF2
 1241  00001d78  54000000	nop; delay slot nop
 1242  00001d7c          	L81_LF2:
 1243  00001d7c  2001000a	addi	r1,r0,#10
 1244  00001d80  afc10008	sw	8(r30),r1
 1245  00001d84          	L85_LF2:
 1246  00001d84          	L80_LF2:
 1247  00001d84  8fc10008	lw	r1,8(r30)
 1248  00001d88  70220000	slei	r2,r1,#0
 1249  00001d8c  1440001c	bnez	r2,L87_LF2
 1250  00001d90  54000000	nop; delay slot nop
 1251  00001d94  8fc10008	lw	r1,8(r30)
 1252  00001d98  6c220010	sgti	r2,r1,#16
 1253  00001d9c  1440000c	bnez	r2,L87_LF2
 1254  00001da0  54000000	nop; delay slot nop
 1255  00001da4  08000010	j	L86_LF2
 1256  00001da8  54000000	nop; delay slot nop
 1257  00001dac          	L87_LF2:
 1258  00001dac  8fc1fff4	lw	r1,-12(r30)
 1259  00001db0  08000188	j	L72_LF2
 1260  00001db4  54000000	nop; delay slot nop
 1261  00001db8          	L86_LF2:
 1262  00001db8  54000000	nop
 1263  00001dbc          	L88_LF2:
 1264  00001dbc  8fc10000	lw	r1,(r30)
 1265  00001dc0  90220000	lbu	r2,(r1)
 1266  00001dc4  6c41002f	sgtui	r1,r2,#47
 1267  00001dc8  10200030	beqz	r1,L91_LF2
 1268  00001dcc  54000000	nop; delay slot nop
 1269  00001dd0  8fc10000	lw	r1,(r30)
 1270  00001dd4  90220000	lbu	r2,(r1)
 1271  00001dd8  70410039	sleui	r1,r2,#57
 1272  00001ddc  1020001c	beqz	r1,L91_LF2
 1273  00001de0  54000000	nop; delay slot nop
 1274  00001de4  8fc10000	lw	r1,(r30)
 1275  00001de8  90220000	lbu	r2,(r1)
 1276  00001dec  2041ffd0	addi	r1,r2,#-48
 1277  00001df0  afc1fff0	sw	-16(r30),r1
 1278  00001df4  0800008c	j	L92_LF2
 1279  00001df8  54000000	nop; delay slot nop
 1280  00001dfc          	L91_LF2:
 1281  00001dfc  8fc10000	lw	r1,(r30)
 1282  00001e00  90220000	lbu	r2,(r1)
 1283  00001e04  6c410060	sgtui	r1,r2,#96
 1284  00001e08  10200030	beqz	r1,L93_LF2
 1285  00001e0c  54000000	nop; delay slot nop
 1286  00001e10  8fc10000	lw	r1,(r30)
 1287  00001e14  90220000	lbu	r2,(r1)
 1288  00001e18  7041007a	sleui	r1,r2,#122
 1289  00001e1c  1020001c	beqz	r1,L93_LF2
 1290  00001e20  54000000	nop; delay slot nop
 1291  00001e24  8fc10000	lw	r1,(r30)
 1292  00001e28  90220000	lbu	r2,(r1)
 1293  00001e2c  2041ffa9	addi	r1,r2,#-87
 1294  00001e30  afc1fff0	sw	-16(r30),r1
 1295  00001e34  0800004c	j	L92_LF2
 1296  00001e38  54000000	nop; delay slot nop
 1297  00001e3c          	L93_LF2:
 1298  00001e3c  8fc10000	lw	r1,(r30)
 1299  00001e40  90220000	lbu	r2,(r1)
 1300  00001e44  6c410040	sgtui	r1,r2,#64
 1301  00001e48  10200030	beqz	r1,L95_LF2
 1302  00001e4c  54000000	nop; delay slot nop
 1303  00001e50  8fc10000	lw	r1,(r30)
 1304  00001e54  90220000	lbu	r2,(r1)
 1305  00001e58  7041005a	sleui	r1,r2,#90
 1306  00001e5c  1020001c	beqz	r1,L95_LF2
 1307  00001e60  54000000	nop; delay slot nop
 1308  00001e64  8fc10000	lw	r1,(r30)
 1309  00001e68  90220000	lbu	r2,(r1)
 1310  00001e6c  2041ffc9	addi	r1,r2,#-55
 1311  00001e70  afc1fff0	sw	-16(r30),r1
 1312  00001e74  0800000c	j	L92_LF2
 1313  00001e78  54000000	nop; delay slot nop
 1314  00001e7c          	L95_LF2:
 1315  00001e7c  200103e8	addi	r1,r0,#1000
 1316  00001e80  afc1fff0	sw	-16(r30),r1
 1317  00001e84          	L96_LF2:
 1318  00001e84          	L94_LF2:
 1319  00001e84          	L92_LF2:
 1320  00001e84  8fc1fff0	lw	r1,-16(r30)
 1321  00001e88  8fc20008	lw	r2,8(r30)
 1322  00001e8c  0022082a	slt	r1,r1,r2
 1323  00001e90  10200040	beqz	r1,L90_LF2
 1324  00001e94  54000000	nop; delay slot nop
 1325  00001e98  8fc1fff4	lw	r1,-12(r30)
 1326  00001e9c  8fc20008	lw	r2,8(r30)
 1327  00001ea0  00200035	movi2fp	f0,r1
 1328  00001ea4  00400835	movi2fp	f1,r2
 1329  00001ea8  0401000e	mult	f0,f0,f1
 1330  00001eac  00000834	movfp2i	r1,f0
 1331  00001eb0  afc1fff4	sw	-12(r30),r1
 1332  00001eb4  8fc1fff4	lw	r1,-12(r30)
 1333  00001eb8  8fc2fff0	lw	r2,-16(r30)
 1334  00001ebc  00220820	add	r1,r1,r2
 1335  00001ec0  afc1fff4	sw	-12(r30),r1
 1336  00001ec4  8fc20000	lw	r2,(r30)
 1337  00001ec8  20410001	addi	r1,r2,#1
 1338  00001ecc  00011020	add	r2,r0,r1
 1339  00001ed0  afc20000	sw	(r30),r2
 1340  00001ed4          	L97_LF2:
 1341  00001ed4          	L90_LF2:
 1342  00001ed4  8fc1fff0	lw	r1,-16(r30)
 1343  00001ed8  8fc20008	lw	r2,8(r30)
 1344  00001edc  0022082a	slt	r1,r1,r2
 1345  00001ee0  1420000c	bnez	r1,L98_LF2
 1346  00001ee4  54000000	nop; delay slot nop
 1347  00001ee8  0800000c	j	L89_LF2
 1348  00001eec  54000000	nop; delay slot nop
 1349  00001ef0          	L98_LF2:
 1350  00001ef0  0bfffec8	j	L88_LF2
 1351  00001ef4  54000000	nop; delay slot nop
 1352  00001ef8          	L89_LF2:
 1353  00001ef8  8fc10004	lw	r1,4(r30)
 1354  00001efc  64220000	snei	r2,r1,#0
 1355  00001f00  10400010	beqz	r2,L99_LF2
 1356  00001f04  54000000	nop; delay slot nop
 1357  00001f08  8fc10004	lw	r1,4(r30)
 1358  00001f0c  8fc20000	lw	r2,(r30)
 1359  00001f10  ac220000	sw	(r1),r2
 1360  00001f14          	L99_LF2:
 1361  00001f14  8fc1fff4	lw	r1,-12(r30)
 1362  00001f18  8fc2ffec	lw	r2,-20(r30)
 1363  00001f1c  00200035	movi2fp	f0,r1
 1364  00001f20  00400835	movi2fp	f1,r2
 1365  00001f24  0401000e	mult	f0,f0,f1
 1366  00001f28  00000834	movfp2i	r1,f0
 1367  00001f2c  afc1fff4	sw	-12(r30),r1
 1368  00001f30  8fc1fff4	lw	r1,-12(r30)
 1369  00001f34  08000004	j	L72_LF2
 1370  00001f38  54000000	nop; delay slot nop
 1371  00001f3c          	L72_LF2:
 1372  00001f3c  8fa20000	lw	r2,0(r29)
 1373  00001f40  8fdffff8	lw	r31,-8(r30)
 1374  00001f44  001ee820	add	r29,r0,r30
 1375  00001f48  8fdefffc	lw	r30,-4(r30)
 1376  00001f4c  4be00000	jr	r31
 1377  00001f50  54000000	nop
 1378  00001f54          	.endproc _dstrtol
 1379  00001f54          	.align 2
 1380  00001f54          	.proc _bcopy
 1381  00001f54          	.global _bcopy
 1382  00001f54          	_bcopy:
 1383                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1384  00001f54  afbefffc	sw	-4(r29),r30; push fp
 1385  00001f58  001df020	add	r30,r0,r29; fp = sp
 1386  00001f5c  afbffff8	sw	-8(r29),r31; push ret addr
 1387  00001f60  2fbd0010	subui	r29,r29,#16; alloc local storage
 1388  00001f64  afa20000	sw	0(r29),r2
 1389  00001f68  afa30004	sw	4(r29),r3
 1390  00001f6c  54000000	nop
 1391  00001f70          	L101_LF2:
 1392  00001f70  8fc10008	lw	r1,8(r30)
 1393  00001f74  2022ffff	addi	r2,r1,#-1
 1394  00001f78  afc20008	sw	8(r30),r2
 1395  00001f7c  6c210000	sgti	r1,r1,#0
 1396  00001f80  1420000c	bnez	r1,L103_LF2
 1397  00001f84  54000000	nop; delay slot nop
 1398  00001f88  0800002c	j	L102_LF2
 1399  00001f8c  54000000	nop; delay slot nop
 1400  00001f90          	L103_LF2:
 1401  00001f90  8fc10004	lw	r1,4(r30)
 1402  00001f94  20220001	addi	r2,r1,#1
 1403  00001f98  afc20004	sw	4(r30),r2
 1404  00001f9c  8fc20000	lw	r2,(r30)
 1405  00001fa0  20430001	addi	r3,r2,#1
 1406  00001fa4  afc30000	sw	(r30),r3
 1407  00001fa8  80420000	lb	r2,(r2)
 1408  00001fac  a0220000	sb	(r1),r2
 1409  00001fb0  0bffffbc	j	L101_LF2
 1410  00001fb4  54000000	nop; delay slot nop
 1411  00001fb8          	L102_LF2:
 1412  00001fb8          	L100_LF2:
 1413  00001fb8  8fa20000	lw	r2,0(r29)
 1414  00001fbc  8fa30004	lw	r3,4(r29)
 1415  00001fc0  8fdffff8	lw	r31,-8(r30)
 1416  00001fc4  001ee820	add	r29,r0,r30
 1417  00001fc8  8fdefffc	lw	r30,-4(r30)
 1418  00001fcc  4be00000	jr	r31
 1419  00001fd0  54000000	nop
 1420  00001fd4          	.endproc _bcopy
 1421  00001fd4          	.align 2
 1422  00001fd4          	.proc _bzero
 1423  00001fd4          	.global _bzero
 1424  00001fd4          	_bzero:
 1425                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1426  00001fd4  afbefffc	sw	-4(r29),r30; push fp
 1427  00001fd8  001df020	add	r30,r0,r29; fp = sp
 1428  00001fdc  afbffff8	sw	-8(r29),r31; push ret addr
 1429  00001fe0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1430  00001fe4  afa20000	sw	0(r29),r2
 1431  00001fe8  54000000	nop
 1432  00001fec          	L105_LF2:
 1433  00001fec  8fc10004	lw	r1,4(r30)
 1434  00001ff0  2022ffff	addi	r2,r1,#-1
 1435  00001ff4  afc20004	sw	4(r30),r2
 1436  00001ff8  6c210000	sgti	r1,r1,#0
 1437  00001ffc  1420000c	bnez	r1,L107_LF2
 1438  00002000  54000000	nop; delay slot nop
 1439  00002004  08000020	j	L106_LF2
 1440  00002008  54000000	nop; delay slot nop
 1441  0000200c          	L107_LF2:
 1442  0000200c  8fc10000	lw	r1,(r30)
 1443  00002010  20220001	addi	r2,r1,#1
 1444  00002014  afc20000	sw	(r30),r2
 1445  00002018  20020000	addi	r2,r0,(#0x0)&0xff
 1446  0000201c  a0220000	sb	(r1),r2
 1447  00002020  0bffffc8	j	L105_LF2
 1448  00002024  54000000	nop; delay slot nop
 1449  00002028          	L106_LF2:
 1450  00002028          	L104_LF2:
 1451  00002028  8fa20000	lw	r2,0(r29)
 1452  0000202c  8fdffff8	lw	r31,-8(r30)
 1453  00002030  001ee820	add	r29,r0,r30
 1454  00002034  8fdefffc	lw	r30,-4(r30)
 1455  00002038  4be00000	jr	r31
 1456  0000203c  54000000	nop
 1457  00002040          	.endproc _bzero
 1458  00002040          	.align 2
 1459  00002040          	.proc _min
 1460  00002040          	.global _min
 1461  00002040          	_min:
 1462                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1463  00002040  afbefffc	sw	-4(r29),r30; push fp
 1464  00002044  001df020	add	r30,r0,r29; fp = sp
 1465  00002048  afbffff8	sw	-8(r29),r31; push ret addr
 1466  0000204c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1467  00002050  afa20000	sw	0(r29),r2
 1468  00002054  afa30004	sw	4(r29),r3
 1469  00002058  8fc10000	lw	r1,(r30)
 1470  0000205c  8fc20004	lw	r2,4(r30)
 1471  00002060  0022182c	sle	r3,r1,r2
 1472  00002064  14600008	bnez	r3,L109_LF2
 1473  00002068  54000000	nop; delay slot nop
 1474  0000206c  8fc10004	lw	r1,4(r30)
 1475  00002070          	L109_LF2:
 1476  00002070  08000004	j	L108_LF2
 1477  00002074  54000000	nop; delay slot nop
 1478  00002078          	L108_LF2:
 1479  00002078  8fa20000	lw	r2,0(r29)
 1480  0000207c  8fa30004	lw	r3,4(r29)
 1481  00002080  8fdffff8	lw	r31,-8(r30)
 1482  00002084  001ee820	add	r29,r0,r30
 1483  00002088  8fdefffc	lw	r30,-4(r30)
 1484  0000208c  4be00000	jr	r31
 1485  00002090  54000000	nop
 1486  00002094          	.endproc _min
 1487  00002094          	.align 2
 1488  00002094          	.proc _max
 1489  00002094          	.global _max
 1490  00002094          	_max:
 1491                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1492  00002094  afbefffc	sw	-4(r29),r30; push fp
 1493  00002098  001df020	add	r30,r0,r29; fp = sp
 1494  0000209c  afbffff8	sw	-8(r29),r31; push ret addr
 1495  000020a0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1496  000020a4  afa20000	sw	0(r29),r2
 1497  000020a8  afa30004	sw	4(r29),r3
 1498  000020ac  8fc10000	lw	r1,(r30)
 1499  000020b0  8fc20004	lw	r2,4(r30)
 1500  000020b4  0022182d	sge	r3,r1,r2
 1501  000020b8  14600008	bnez	r3,L111_LF2
 1502  000020bc  54000000	nop; delay slot nop
 1503  000020c0  8fc10004	lw	r1,4(r30)
 1504  000020c4          	L111_LF2:
 1505  000020c4  08000004	j	L110_LF2
 1506  000020c8  54000000	nop; delay slot nop
 1507  000020cc          	L110_LF2:
 1508  000020cc  8fa20000	lw	r2,0(r29)
 1509  000020d0  8fa30004	lw	r3,4(r29)
 1510  000020d4  8fdffff8	lw	r31,-8(r30)
 1511  000020d8  001ee820	add	r29,r0,r30
 1512  000020dc  8fdefffc	lw	r30,-4(r30)
 1513  000020e0  4be00000	jr	r31
 1514  000020e4  54000000	nop
 1515  000020e8          	.endproc _max
 1516                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1517                      ;;;
 1518                      ;;; Most of the traps are called in files from libtraps.
 1521  000020e8          	.align 2
 1522  000020e8          	.proc _exit
 1523  000020e8          	.global _exit
 1524  000020e8          	_exit:
 1525  000020e8  44000300	trap	#0x300
 1526  000020ec  4be00000	jr	r31
 1527  000020f0  54000000	nop
 1528  000020f4          	.endproc _exit
 1530                      ; for the benefit of gcc.
 1531  000020f4          	.proc ___main
 1532  000020f4          	.global ___main
 1533  000020f4          	___main:
 1534  000020f4  4be00000	jr	r31
 1535  000020f8  54000000	nop
 1536  000020fc          	.endproc ___main
 1537  000020fc          	.text
 1538  000020fc          	.global _etext
 1539  000020fc          	_etext:
 1540  000020fc          	.align 3
 1541  00002100          	.data
 1542  000030a9          	.global _edata
 1543  000030a9          	_edata:
