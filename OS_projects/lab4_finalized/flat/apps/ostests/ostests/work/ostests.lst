 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 20480
    3                      ; Data size: 0
    4                      ; Text size: 4024
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x2000
    8                      ; Compiled by GCC
    9  00002000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _main
   12  00001000          	.global _main
   13  00001000          	_main:
   14                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0008	subui	r29,r29,#8; alloc local storage
   19  00001010  0c000f9c	jal	___main
   20  00001014  54000000	nop; not filled.
   21  00001018  0c0001e0	jal	_run_os_tests
   22  0000101c  54000000	nop; not filled.
   23  00001020  0c000f80	jal	_exit
   24  00001024  54000000	nop
   25  00001028          	.endproc _main
   26                      ;;;
   27                      ;;; Stub functions for DLX traps.
   28                      ;;;
   29                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
   30                      ;;;
   31                      ;;; The traps such as Open and Close
   32                      ;;; (note the capital letters) are for use by user programs.  The traps
   33                      ;;; with names such as open and close (lower case) are for use by the OS.
   34                      ;;;
   37  00001028          	.align 2
   39                      ;;; The following are the traps to be used by user-level programs
   40                      ;;;
   42  00001028          	.align 2
   43  00001028          	.proc _Open
   44  00001028          	.global _Open
   45  00001028          	_Open:
   46                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
   47                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
   48                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
   49  00001028  44000213	trap	#0x213
   50  0000102c  4be00000	jr	r31
   51  00001030  54000000	nop
   52  00001034          	.endproc _Open
   54  00001034          	.proc _Close
   55  00001034          	.global _Close
   56  00001034          	_Close:
   57  00001034  44000214	trap	#0x214
   58  00001038  4be00000	jr	r31
   59  0000103c  54000000	nop
   60  00001040          	.endproc _Close
   62  00001040          	.proc _Read
   63  00001040          	.global _Read
   64  00001040          	_Read:
   65  00001040  44000210	trap	#0x210
   66  00001044  4be00000	jr	r31
   67  00001048  54000000	nop
   68  0000104c          	.endproc _Read
   70  0000104c          	.proc _Write
   71  0000104c          	.global _Write
   72  0000104c          	_Write:
   73  0000104c  44000211	trap	#0x211
   74  00001050  4be00000	jr	r31
   75  00001054  54000000	nop
   76  00001058          	.endproc _Write
   78  00001058          	.proc _Lseek
   79  00001058          	.global _Lseek
   80  00001058          	_Lseek:
   81  00001058  44000212	trap	#0x212
   82  0000105c  4be00000	jr	r31
   83  00001060  54000000	nop
   84  00001064          	.endproc _Lseek
   86  00001064          	.proc _Putchar
   87  00001064          	.global _Putchar
   88  00001064          	_Putchar:
   89  00001064  44000280	trap	#0x280
   90  00001068  4be00000	jr	r31
   91  0000106c  54000000	nop
   92  00001070          	.endproc _Putchar
   94  00001070          	.proc _Printf
   95  00001070          	.global _Printf
   96  00001070          	_Printf:
   97  00001070  44000201	trap	#0x201
   98  00001074  4be00000	jr	r31
   99  00001078  54000000	nop
  100  0000107c          	.endproc _Printf
  102  0000107c          	.proc _getpid
  103  0000107c          	.global _getpid
  104  0000107c          	_getpid:
  105  0000107c  44000431	trap	#0x431
  106  00001080  4be00000	jr	r31
  107  00001084  54000000	nop
  108  00001088          	.endproc _getpid
  110  00001088          	.proc _process_create
  111  00001088          	.global _process_create
  112  00001088          	_process_create:
  113  00001088  44000432	trap	#0x432
  114  0000108c  4be00000	jr	r31
  115  00001090  54000000	nop
  116  00001094          	.endproc _process_create
  118  00001094          	.proc _shmget
  119  00001094          	.global _shmget
  120  00001094          	_shmget:
  121  00001094  44000440	trap	#0x440
  122  00001098  4be00000	jr	r31
  123  0000109c  54000000	nop
  124  000010a0          	.endproc _shmget
  126  000010a0          	.proc _shmat
  127  000010a0          	.global _shmat
  128  000010a0          	_shmat:
  129  000010a0  44000441	trap	#0x441
  130  000010a4  4be00000	jr	r31
  131  000010a8  54000000	nop
  132  000010ac          	.endproc _shmat
  134  000010ac          	.proc _sem_create
  135  000010ac          	.global _sem_create
  136  000010ac          	_sem_create:
  137  000010ac  44000450	trap	#0x450
  138  000010b0  4be00000	jr	r31
  139  000010b4  54000000	nop
  140  000010b8          	.endproc _sem_create
  142  000010b8          	.proc _sem_wait
  143  000010b8          	.global _sem_wait
  144  000010b8          	_sem_wait:
  145  000010b8  44000451	trap	#0x451
  146  000010bc  4be00000	jr	r31
  147  000010c0  54000000	nop
  148  000010c4          	.endproc _sem_wait
  150  000010c4          	.proc _sem_signal
  151  000010c4          	.global _sem_signal
  152  000010c4          	_sem_signal:
  153  000010c4  44000452	trap	#0x452
  154  000010c8  4be00000	jr	r31
  155  000010cc  54000000	nop
  156  000010d0          	.endproc _sem_signal
  158  000010d0          	.proc _lock_create
  159  000010d0          	.global _lock_create
  160  000010d0          	_lock_create:
  161  000010d0  44000453	trap	#0x453
  162  000010d4  4be00000	jr	r31
  163  000010d8  54000000	nop
  164  000010dc          	.endproc _lock_create
  166  000010dc          	.proc _lock_acquire
  167  000010dc          	.global _lock_acquire
  168  000010dc          	_lock_acquire:
  169  000010dc  44000454	trap	#0x454
  170  000010e0  4be00000	jr	r31
  171  000010e4  54000000	nop
  172  000010e8          	.endproc _lock_acquire
  174  000010e8          	.proc _lock_release
  175  000010e8          	.global _lock_release
  176  000010e8          	_lock_release:
  177  000010e8  44000455	trap	#0x455
  178  000010ec  4be00000	jr	r31
  179  000010f0  54000000	nop
  180  000010f4          	.endproc _lock_release
  182  000010f4          	.proc _cond_create
  183  000010f4          	.global _cond_create
  184  000010f4          	_cond_create:
  185  000010f4  44000456	trap	#0x456
  186  000010f8  4be00000	jr	r31
  187  000010fc  54000000	nop
  188  00001100          	.endproc _cond_create
  190  00001100          	.proc _cond_wait
  191  00001100          	.global _cond_wait
  192  00001100          	_cond_wait:
  193  00001100  44000457	trap	#0x457
  194  00001104  4be00000	jr	r31
  195  00001108  54000000	nop
  196  0000110c          	.endproc _cond_wait
  198  0000110c          	.proc _cond_signal
  199  0000110c          	.global _cond_signal
  200  0000110c          	_cond_signal:
  201  0000110c  44000458	trap	#0x458
  202  00001110  4be00000	jr	r31
  203  00001114  54000000	nop
  204  00001118          	.endproc _cond_signal
  206  00001118          	.proc _cond_broadcast
  207  00001118          	.global _cond_broadcast
  208  00001118          	_cond_broadcast:
  209  00001118  44000459	trap	#0x459
  210  0000111c  4be00000	jr	r31
  211  00001120  54000000	nop
  212  00001124          	.endproc _cond_broadcast
  214  00001124          	.proc _mbox_create
  215  00001124          	.global _mbox_create
  216  00001124          	_mbox_create:
  217  00001124  44000460	trap	#0x460
  218  00001128  4be00000	jr	r31
  219  0000112c  54000000	nop
  220  00001130          	.endproc _mbox_create
  222  00001130          	.proc _mbox_open
  223  00001130          	.global _mbox_open
  224  00001130          	_mbox_open:
  225  00001130  44000461	trap	#0x461
  226  00001134  4be00000	jr	r31
  227  00001138  54000000	nop
  228  0000113c          	.endproc _mbox_open
  230  0000113c          	.proc _mbox_close
  231  0000113c          	.global _mbox_close
  232  0000113c          	_mbox_close:
  233  0000113c  44000462	trap	#0x462
  234  00001140  4be00000	jr	r31
  235  00001144  54000000	nop
  236  00001148          	.endproc _mbox_close
  238  00001148          	.proc _mbox_send
  239  00001148          	.global _mbox_send
  240  00001148          	_mbox_send:
  241  00001148  44000463	trap	#0x463
  242  0000114c  4be00000	jr	r31
  243  00001150  54000000	nop
  244  00001154          	.endproc _mbox_send
  246  00001154          	.proc _mbox_recv
  247  00001154          	.global _mbox_recv
  248  00001154          	_mbox_recv:
  249  00001154  44000464	trap	#0x464
  250  00001158  4be00000	jr	r31
  251  0000115c  54000000	nop
  252  00001160          	.endproc _mbox_recv
  254  00001160          	.proc _sleep
  255  00001160          	.global _sleep
  256  00001160          	_sleep:
  257  00001160  44000465	trap	#0x465
  258  00001164  4be00000	jr	r31
  259  00001168  54000000	nop
  260  0000116c          	.endproc _sleep
  262  0000116c          	.proc _yield
  263  0000116c          	.global _yield
  264  0000116c          	_yield:
  265  0000116c  44000466	trap	#0x466
  266  00001170  4be00000	jr	r31
  267  00001174  54000000	nop
  268  00001178          	.endproc _yield
  270  00001178          	.proc _disk_write_block
  271  00001178          	.global _disk_write_block
  272  00001178          	_disk_write_block:
  273  00001178  44000467	trap	#0x467
  274  0000117c  4be00000	jr	r31
  275  00001180  54000000	nop
  276  00001184          	.endproc _disk_write_block
  278  00001184          	.proc _disk_size
  279  00001184          	.global _disk_size
  280  00001184          	_disk_size:
  281  00001184  44000468	trap	#0x468
  282  00001188  4be00000	jr	r31
  283  0000118c  54000000	nop
  284  00001190          	.endproc _disk_size
  286  00001190          	.proc _disk_blocksize
  287  00001190          	.global _disk_blocksize
  288  00001190          	_disk_blocksize:
  289  00001190  44000469	trap	#0x469
  290  00001194  4be00000	jr	r31
  291  00001198  54000000	nop
  292  0000119c          	.endproc _disk_blocksize
  294  0000119c          	.proc _disk_create
  295  0000119c          	.global _disk_create
  296  0000119c          	_disk_create:
  297  0000119c  44000470	trap	#0x470
  298  000011a0  4be00000	jr	r31
  299  000011a4  54000000	nop
  300  000011a8          	.endproc _disk_create
  302  000011a8          	.proc _dfs_invalidate
  303  000011a8          	.global _dfs_invalidate
  304  000011a8          	_dfs_invalidate:
  305  000011a8  44000471	trap	#0x471
  306  000011ac  4be00000	jr	r31
  307  000011b0  54000000	nop
  308  000011b4          	.endproc _dfs_invalidate
  310  000011b4          	.proc _file_open
  311  000011b4          	.global _file_open
  312  000011b4          	_file_open:
  313  000011b4  44000472	trap	#0x472
  314  000011b8  4be00000	jr	r31
  315  000011bc  54000000	nop
  316  000011c0          	.endproc _file_open
  318  000011c0          	.proc _file_close
  319  000011c0          	.global _file_close
  320  000011c0          	_file_close:
  321  000011c0  44000473	trap	#0x473
  322  000011c4  4be00000	jr	r31
  323  000011c8  54000000	nop
  324  000011cc          	.endproc _file_close
  326  000011cc          	.proc _file_delete
  327  000011cc          	.global _file_delete
  328  000011cc          	_file_delete:
  329  000011cc  44000474	trap	#0x474
  330  000011d0  4be00000	jr	r31
  331  000011d4  54000000	nop
  332  000011d8          	.endproc _file_delete
  334  000011d8          	.proc _file_read
  335  000011d8          	.global _file_read
  336  000011d8          	_file_read:
  337  000011d8  44000475	trap	#0x475
  338  000011dc  4be00000	jr	r31
  339  000011e0  54000000	nop
  340  000011e4          	.endproc _file_read
  342  000011e4          	.proc _file_write
  343  000011e4          	.global _file_write
  344  000011e4          	_file_write:
  345  000011e4  44000476	trap	#0x476
  346  000011e8  4be00000	jr	r31
  347  000011ec  54000000	nop
  348  000011f0          	.endproc _file_write
  350  000011f0          	.proc _file_seek
  351  000011f0          	.global _file_seek
  352  000011f0          	_file_seek:
  353  000011f0  44000477	trap	#0x477
  354  000011f4  4be00000	jr	r31
  355  000011f8  54000000	nop
  356  000011fc          	.endproc _file_seek
  358  000011fc          	.proc _run_os_tests
  359  000011fc          	.global _run_os_tests
  360  000011fc          	_run_os_tests:
  361  000011fc  440004ff	trap	#0x4FF
  362  00001200  4be00000	jr	r31
  363  00001204  54000000	nop
  364  00001208          	.endproc _run_os_tests
  367  00001208          	.proc _Exit
  368  00001208          	.global _Exit
  369  00001208          	_Exit:
  370  00001208  44000500	trap	#0x500
  371  0000120c  4be00000	jr	r31
  372  00001210  54000000	nop
  373  00001214          	.endproc _Exit
  374                      ; Compiled by GCC
  376  00001214          	.align 2
  377  00001214          	.proc _isspace
  378  00001214          	.global _isspace
  379  00001214          	_isspace:
  380                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  381  00001214  afbefffc	sw	-4(r29),r30; push fp
  382  00001218  001df020	add	r30,r0,r29; fp = sp
  383  0000121c  afbffff8	sw	-8(r29),r31; push ret addr
  384  00001220  2fbd0018	subui	r29,r29,#24; alloc local storage
  385  00001224  afa20000	sw	0(r29),r2
  386  00001228  afa30004	sw	4(r29),r3
  387  0000122c  afa40008	sw	8(r29),r4
  388  00001230  83c20003	lb	r2,3(r30)
  389  00001234  20010000	addi	r1,r0,#0
  390  00001238  304300ff	andi	r3,r2,#0x00ff
  391  0000123c  60640020	seqi	r4,r3,#32
  392  00001240  1480002c	bnez	r4,L3_LF2
  393  00001244  54000000	nop; delay slot nop
  394  00001248  304300ff	andi	r3,r2,#0x00ff
  395  0000124c  60640009	seqi	r4,r3,#9
  396  00001250  1480001c	bnez	r4,L3_LF2
  397  00001254  54000000	nop; delay slot nop
  398  00001258  304300ff	andi	r3,r2,#0x00ff
  399  0000125c  6064000a	seqi	r4,r3,#10
  400  00001260  1480000c	bnez	r4,L3_LF2
  401  00001264  54000000	nop; delay slot nop
  402  00001268  08000008	j	L2_LF2
  403  0000126c  54000000	nop; delay slot nop
  404  00001270          	L3_LF2:
  405  00001270  20010001	addi	r1,r0,#1
  406  00001274          	L2_LF2:
  407  00001274  08000004	j	L1_LF2
  408  00001278  54000000	nop; delay slot nop
  409  0000127c          	L1_LF2:
  410  0000127c  8fa20000	lw	r2,0(r29)
  411  00001280  8fa30004	lw	r3,4(r29)
  412  00001284  8fa40008	lw	r4,8(r29)
  413  00001288  8fdffff8	lw	r31,-8(r30)
  414  0000128c  001ee820	add	r29,r0,r30
  415  00001290  8fdefffc	lw	r30,-4(r30)
  416  00001294  4be00000	jr	r31
  417  00001298  54000000	nop
  418  0000129c          	.endproc _isspace
  419  0000129c          	.align 2
  420  0000129c          	.proc _isxdigit
  421  0000129c          	.global _isxdigit
  422  0000129c          	_isxdigit:
  423                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  424  0000129c  afbefffc	sw	-4(r29),r30; push fp
  425  000012a0  001df020	add	r30,r0,r29; fp = sp
  426  000012a4  afbffff8	sw	-8(r29),r31; push ret addr
  427  000012a8  2fbd0018	subui	r29,r29,#24; alloc local storage
  428  000012ac  afa20000	sw	0(r29),r2
  429  000012b0  afa30004	sw	4(r29),r3
  430  000012b4  afa40008	sw	8(r29),r4
  431  000012b8  83c20003	lb	r2,3(r30)
  432  000012bc  20010000	addi	r1,r0,#0
  433  000012c0  304300ff	andi	r3,r2,#0x00ff
  434  000012c4  6c64002f	sgtui	r4,r3,#47
  435  000012c8  1080001c	beqz	r4,L7_LF2
  436  000012cc  54000000	nop; delay slot nop
  437  000012d0  304300ff	andi	r3,r2,#0x00ff
  438  000012d4  70640039	sleui	r4,r3,#57
  439  000012d8  1480005c	bnez	r4,L6_LF2
  440  000012dc  54000000	nop; delay slot nop
  441  000012e0  08000004	j	L7_LF2
  442  000012e4  54000000	nop; delay slot nop
  443  000012e8          	L7_LF2:
  444  000012e8  304300ff	andi	r3,r2,#0x00ff
  445  000012ec  6c640060	sgtui	r4,r3,#96
  446  000012f0  1080001c	beqz	r4,L8_LF2
  447  000012f4  54000000	nop; delay slot nop
  448  000012f8  304300ff	andi	r3,r2,#0x00ff
  449  000012fc  70640066	sleui	r4,r3,#102
  450  00001300  14800034	bnez	r4,L6_LF2
  451  00001304  54000000	nop; delay slot nop
  452  00001308  08000004	j	L8_LF2
  453  0000130c  54000000	nop; delay slot nop
  454  00001310          	L8_LF2:
  455  00001310  304300ff	andi	r3,r2,#0x00ff
  456  00001314  6c640040	sgtui	r4,r3,#64
  457  00001318  10800020	beqz	r4,L5_LF2
  458  0000131c  54000000	nop; delay slot nop
  459  00001320  304300ff	andi	r3,r2,#0x00ff
  460  00001324  70640041	sleui	r4,r3,#65
  461  00001328  1480000c	bnez	r4,L6_LF2
  462  0000132c  54000000	nop; delay slot nop
  463  00001330  08000008	j	L5_LF2
  464  00001334  54000000	nop; delay slot nop
  465  00001338          	L6_LF2:
  466  00001338  20010001	addi	r1,r0,#1
  467  0000133c          	L5_LF2:
  468  0000133c  08000004	j	L4_LF2
  469  00001340  54000000	nop; delay slot nop
  470  00001344          	L4_LF2:
  471  00001344  8fa20000	lw	r2,0(r29)
  472  00001348  8fa30004	lw	r3,4(r29)
  473  0000134c  8fa40008	lw	r4,8(r29)
  474  00001350  8fdffff8	lw	r31,-8(r30)
  475  00001354  001ee820	add	r29,r0,r30
  476  00001358  8fdefffc	lw	r30,-4(r30)
  477  0000135c  4be00000	jr	r31
  478  00001360  54000000	nop
  479  00001364          	.endproc _isxdigit
  480  00001364          	.align 2
  481  00001364          	.proc _dstrcpy
  482  00001364          	.global _dstrcpy
  483  00001364          	_dstrcpy:
  484                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  485  00001364  afbefffc	sw	-4(r29),r30; push fp
  486  00001368  001df020	add	r30,r0,r29; fp = sp
  487  0000136c  afbffff8	sw	-8(r29),r31; push ret addr
  488  00001370  2fbd0018	subui	r29,r29,#24; alloc local storage
  489  00001374  afa20000	sw	0(r29),r2
  490  00001378  afa30004	sw	4(r29),r3
  491  0000137c  8fc10000	lw	r1,(r30)
  492  00001380  afc1fff4	sw	-12(r30),r1
  493  00001384          	L10_LF2:
  494  00001384  8fc10000	lw	r1,(r30)
  495  00001388  20220001	addi	r2,r1,#1
  496  0000138c  afc20000	sw	(r30),r2
  497  00001390  8fc20004	lw	r2,4(r30)
  498  00001394  20430001	addi	r3,r2,#1
  499  00001398  afc30004	sw	4(r30),r3
  500  0000139c  80420000	lb	r2,(r2)
  501  000013a0  a0220000	sb	(r1),r2
  502  000013a4  a3c2fff3	sb	-13(r30),r2
  503  000013a8          	L12_LF2:
  504  000013a8  93c1fff3	lbu	r1,-13(r30)
  505  000013ac  64220000	snei	r2,r1,#0
  506  000013b0  1440000c	bnez	r2,L13_LF2
  507  000013b4  54000000	nop; delay slot nop
  508  000013b8  0800000c	j	L11_LF2
  509  000013bc  54000000	nop; delay slot nop
  510  000013c0          	L13_LF2:
  511  000013c0  0bffffc0	j	L10_LF2
  512  000013c4  54000000	nop; delay slot nop
  513  000013c8          	L11_LF2:
  514  000013c8  8fc1fff4	lw	r1,-12(r30)
  515  000013cc  08000004	j	L9_LF2
  516  000013d0  54000000	nop; delay slot nop
  517  000013d4          	L9_LF2:
  518  000013d4  8fa20000	lw	r2,0(r29)
  519  000013d8  8fa30004	lw	r3,4(r29)
  520  000013dc  8fdffff8	lw	r31,-8(r30)
  521  000013e0  001ee820	add	r29,r0,r30
  522  000013e4  8fdefffc	lw	r30,-4(r30)
  523  000013e8  4be00000	jr	r31
  524  000013ec  54000000	nop
  525  000013f0          	.endproc _dstrcpy
  526  000013f0          	.align 2
  527  000013f0          	.proc _dstrncpy
  528  000013f0          	.global _dstrncpy
  529  000013f0          	_dstrncpy:
  530                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  531  000013f0  afbefffc	sw	-4(r29),r30; push fp
  532  000013f4  001df020	add	r30,r0,r29; fp = sp
  533  000013f8  afbffff8	sw	-8(r29),r31; push ret addr
  534  000013fc  2fbd0018	subui	r29,r29,#24; alloc local storage
  535  00001400  afa20000	sw	0(r29),r2
  536  00001404  afa30004	sw	4(r29),r3
  537  00001408  8fc10000	lw	r1,(r30)
  538  0000140c  afc1fff4	sw	-12(r30),r1
  539  00001410          	L15_LF2:
  540  00001410  8fc10008	lw	r1,8(r30)
  541  00001414  2022ffff	addi	r2,r1,#-1
  542  00001418  afc20008	sw	8(r30),r2
  543  0000141c  70210000	slei	r1,r1,#0
  544  00001420  1020000c	beqz	r1,L18_LF2
  545  00001424  54000000	nop; delay slot nop
  546  00001428  08000048	j	L16_LF2
  547  0000142c  54000000	nop; delay slot nop
  548  00001430          	L18_LF2:
  549  00001430  8fc10000	lw	r1,(r30)
  550  00001434  20220001	addi	r2,r1,#1
  551  00001438  afc20000	sw	(r30),r2
  552  0000143c  8fc20004	lw	r2,4(r30)
  553  00001440  20430001	addi	r3,r2,#1
  554  00001444  afc30004	sw	4(r30),r3
  555  00001448  80420000	lb	r2,(r2)
  556  0000144c  a0220000	sb	(r1),r2
  557  00001450  a3c2fff3	sb	-13(r30),r2
  558  00001454          	L17_LF2:
  559  00001454  93c1fff3	lbu	r1,-13(r30)
  560  00001458  64220000	snei	r2,r1,#0
  561  0000145c  1440000c	bnez	r2,L19_LF2
  562  00001460  54000000	nop; delay slot nop
  563  00001464  0800000c	j	L16_LF2
  564  00001468  54000000	nop; delay slot nop
  565  0000146c          	L19_LF2:
  566  0000146c  0bffffa0	j	L15_LF2
  567  00001470  54000000	nop; delay slot nop
  568  00001474          	L16_LF2:
  569  00001474  8fc1fff4	lw	r1,-12(r30)
  570  00001478  08000004	j	L14_LF2
  571  0000147c  54000000	nop; delay slot nop
  572  00001480          	L14_LF2:
  573  00001480  8fa20000	lw	r2,0(r29)
  574  00001484  8fa30004	lw	r3,4(r29)
  575  00001488  8fdffff8	lw	r31,-8(r30)
  576  0000148c  001ee820	add	r29,r0,r30
  577  00001490  8fdefffc	lw	r30,-4(r30)
  578  00001494  4be00000	jr	r31
  579  00001498  54000000	nop
  580  0000149c          	.endproc _dstrncpy
  581  0000149c          	.align 2
  582  0000149c          	.proc _dstrcat
  583  0000149c          	.global _dstrcat
  584  0000149c          	_dstrcat:
  585                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  586  0000149c  afbefffc	sw	-4(r29),r30; push fp
  587  000014a0  001df020	add	r30,r0,r29; fp = sp
  588  000014a4  afbffff8	sw	-8(r29),r31; push ret addr
  589  000014a8  2fbd0018	subui	r29,r29,#24; alloc local storage
  590  000014ac  afa20000	sw	0(r29),r2
  591  000014b0  8fc10000	lw	r1,(r30)
  592  000014b4  afc1fff4	sw	-12(r30),r1
  593  000014b8          	L21_LF2:
  594  000014b8  8fc10000	lw	r1,(r30)
  595  000014bc  90220000	lbu	r2,(r1)
  596  000014c0  64410000	snei	r1,r2,#0
  597  000014c4  1420000c	bnez	r1,L23_LF2
  598  000014c8  54000000	nop; delay slot nop
  599  000014cc  0800001c	j	L22_LF2
  600  000014d0  54000000	nop; delay slot nop
  601  000014d4          	L23_LF2:
  602  000014d4  8fc20000	lw	r2,(r30)
  603  000014d8  20410001	addi	r1,r2,#1
  604  000014dc  00011020	add	r2,r0,r1
  605  000014e0  afc20000	sw	(r30),r2
  606  000014e4  0bffffd0	j	L21_LF2
  607  000014e8  54000000	nop; delay slot nop
  608  000014ec          	L22_LF2:
  609  000014ec  23bdfff8	addi	r29,r29,#-8
  610  000014f0  001d0820	add	r1,r0,r29
  611  000014f4  8fc20000	lw	r2,(r30)
  612  000014f8  ac220000	sw	(r1),r2
  613  000014fc  8fc20004	lw	r2,4(r30)
  614  00001500  ac220004	sw	4(r1),r2
  615  00001504  0ffffe5c	jal	_dstrcpy
  616  00001508  54000000	nop; delay slot nop
  617  0000150c  23bd0008	addi	r29,r29,#8
  618  00001510  8fc1fff4	lw	r1,-12(r30)
  619  00001514  08000004	j	L20_LF2
  620  00001518  54000000	nop; delay slot nop
  621  0000151c          	L20_LF2:
  622  0000151c  8fa20000	lw	r2,0(r29)
  623  00001520  8fdffff8	lw	r31,-8(r30)
  624  00001524  001ee820	add	r29,r0,r30
  625  00001528  8fdefffc	lw	r30,-4(r30)
  626  0000152c  4be00000	jr	r31
  627  00001530  54000000	nop
  628  00001534          	.endproc _dstrcat
  629  00001534          	.align 2
  630  00001534          	.proc _dstrncmp
  631  00001534          	.global _dstrncmp
  632  00001534          	_dstrncmp:
  633                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  634  00001534  afbefffc	sw	-4(r29),r30; push fp
  635  00001538  001df020	add	r30,r0,r29; fp = sp
  636  0000153c  afbffff8	sw	-8(r29),r31; push ret addr
  637  00001540  2fbd0018	subui	r29,r29,#24; alloc local storage
  638  00001544  afa20000	sw	0(r29),r2
  639  00001548  afa30004	sw	4(r29),r3
  640  0000154c  54000000	nop
  641  00001550  20010000	addi	r1,r0,#0
  642  00001554  afc1fff4	sw	-12(r30),r1
  643  00001558          	L25_LF2:
  644  00001558  8fc1fff4	lw	r1,-12(r30)
  645  0000155c  8fc20008	lw	r2,8(r30)
  646  00001560  0022082a	slt	r1,r1,r2
  647  00001564  1420000c	bnez	r1,L28_LF2
  648  00001568  54000000	nop; delay slot nop
  649  0000156c  08000088	j	L26_LF2
  650  00001570  54000000	nop; delay slot nop
  651  00001574          	L28_LF2:
  652  00001574  8fc10004	lw	r1,4(r30)
  653  00001578  90220000	lbu	r2,(r1)
  654  0000157c  64410000	snei	r1,r2,#0
  655  00001580  14200018	bnez	r1,L29_LF2
  656  00001584  54000000	nop; delay slot nop
  657  00001588  20010000	addi	r1,r0,#0
  658  0000158c  080000d8	j	L24_LF2
  659  00001590  54000000	nop; delay slot nop
  660  00001594  08000028	j	L30_LF2
  661  00001598  54000000	nop; delay slot nop
  662  0000159c          	L29_LF2:
  663  0000159c  8fc10000	lw	r1,(r30)
  664  000015a0  8fc20004	lw	r2,4(r30)
  665  000015a4  90210000	lbu	r1,(r1)
  666  000015a8  90420000	lbu	r2,(r2)
  667  000015ac  00220829	sne	r1,r1,r2
  668  000015b0  1020000c	beqz	r1,L30_LF2
  669  000015b4  54000000	nop; delay slot nop
  670  000015b8  0800003c	j	L26_LF2
  671  000015bc  54000000	nop; delay slot nop
  672  000015c0          	L31_LF2:
  673  000015c0          	L30_LF2:
  674  000015c0  8fc20000	lw	r2,(r30)
  675  000015c4  20410001	addi	r1,r2,#1
  676  000015c8  00011020	add	r2,r0,r1
  677  000015cc  afc20000	sw	(r30),r2
  678  000015d0  8fc20004	lw	r2,4(r30)
  679  000015d4  20410001	addi	r1,r2,#1
  680  000015d8  00011020	add	r2,r0,r1
  681  000015dc  afc20004	sw	4(r30),r2
  682  000015e0          	L27_LF2:
  683  000015e0  8fc2fff4	lw	r2,-12(r30)
  684  000015e4  20410001	addi	r1,r2,#1
  685  000015e8  00011020	add	r2,r0,r1
  686  000015ec  afc2fff4	sw	-12(r30),r2
  687  000015f0  0bffff64	j	L25_LF2
  688  000015f4  54000000	nop; delay slot nop
  689  000015f8          	L26_LF2:
  690  000015f8  8fc1fff4	lw	r1,-12(r30)
  691  000015fc  8fc20008	lw	r2,8(r30)
  692  00001600  00220828	seq	r1,r1,r2
  693  00001604  10200018	beqz	r1,L32_LF2
  694  00001608  54000000	nop; delay slot nop
  695  0000160c  20010000	addi	r1,r0,#0
  696  00001610  08000054	j	L24_LF2
  697  00001614  54000000	nop; delay slot nop
  698  00001618  0800004c	j	L33_LF2
  699  0000161c  54000000	nop; delay slot nop
  700  00001620          	L32_LF2:
  701  00001620  8fc20000	lw	r2,(r30)
  702  00001624  90410000	lbu	r1,(r2)
  703  00001628  8fc20004	lw	r2,4(r30)
  704  0000162c  90430000	lbu	r3,(r2)
  705  00001630  00230822	sub	r1,r1,r3
  706  00001634  74220000	sgei	r2,r1,#0
  707  00001638  10400020	beqz	r2,L34_LF2
  708  0000163c  54000000	nop; delay slot nop
  709  00001640  8fc10000	lw	r1,(r30)
  710  00001644  8fc20004	lw	r2,4(r30)
  711  00001648  90210000	lbu	r1,(r1)
  712  0000164c  90420000	lbu	r2,(r2)
  713  00001650  00220829	sne	r1,r1,r2
  714  00001654  08000008	j	L35_LF2
  715  00001658  54000000	nop; delay slot nop
  716  0000165c          	L34_LF2:
  717  0000165c  2001ffff	addi	r1,r0,#-1
  718  00001660          	L35_LF2:
  719  00001660  08000004	j	L24_LF2
  720  00001664  54000000	nop; delay slot nop
  721  00001668          	L33_LF2:
  722  00001668          	L24_LF2:
  723  00001668  8fa20000	lw	r2,0(r29)
  724  0000166c  8fa30004	lw	r3,4(r29)
  725  00001670  8fdffff8	lw	r31,-8(r30)
  726  00001674  001ee820	add	r29,r0,r30
  727  00001678  8fdefffc	lw	r30,-4(r30)
  728  0000167c  4be00000	jr	r31
  729  00001680  54000000	nop
  730  00001684          	.endproc _dstrncmp
  731  00001684          	.align 2
  732  00001684          	.proc _dstrlen
  733  00001684          	.global _dstrlen
  734  00001684          	_dstrlen:
  735                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  736  00001684  afbefffc	sw	-4(r29),r30; push fp
  737  00001688  001df020	add	r30,r0,r29; fp = sp
  738  0000168c  afbffff8	sw	-8(r29),r31; push ret addr
  739  00001690  2fbd0018	subui	r29,r29,#24; alloc local storage
  740  00001694  afa20000	sw	0(r29),r2
  741  00001698  20010000	addi	r1,r0,#0
  742  0000169c  afc1fff4	sw	-12(r30),r1
  743  000016a0          	L37_LF2:
  744  000016a0  8fc10000	lw	r1,(r30)
  745  000016a4  20220001	addi	r2,r1,#1
  746  000016a8  afc20000	sw	(r30),r2
  747  000016ac  90210000	lbu	r1,(r1)
  748  000016b0  64220000	snei	r2,r1,#0
  749  000016b4  1440000c	bnez	r2,L39_LF2
  750  000016b8  54000000	nop; delay slot nop
  751  000016bc  0800001c	j	L38_LF2
  752  000016c0  54000000	nop; delay slot nop
  753  000016c4          	L39_LF2:
  754  000016c4  8fc2fff4	lw	r2,-12(r30)
  755  000016c8  20410001	addi	r1,r2,#1
  756  000016cc  00011020	add	r2,r0,r1
  757  000016d0  afc2fff4	sw	-12(r30),r2
  758  000016d4  0bffffc8	j	L37_LF2
  759  000016d8  54000000	nop; delay slot nop
  760  000016dc          	L38_LF2:
  761  000016dc  8fc1fff4	lw	r1,-12(r30)
  762  000016e0  08000004	j	L36_LF2
  763  000016e4  54000000	nop; delay slot nop
  764  000016e8          	L36_LF2:
  765  000016e8  8fa20000	lw	r2,0(r29)
  766  000016ec  8fdffff8	lw	r31,-8(r30)
  767  000016f0  001ee820	add	r29,r0,r30
  768  000016f4  8fdefffc	lw	r30,-4(r30)
  769  000016f8  4be00000	jr	r31
  770  000016fc  54000000	nop
  771  00001700          	.endproc _dstrlen
  772  00001700          	.align 2
  773  00001700          	.proc _dstrstr
  774  00001700          	.global _dstrstr
  775  00001700          	_dstrstr:
  776                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  777  00001700  afbefffc	sw	-4(r29),r30; push fp
  778  00001704  001df020	add	r30,r0,r29; fp = sp
  779  00001708  afbffff8	sw	-8(r29),r31; push ret addr
  780  0000170c  2fbd0018	subui	r29,r29,#24; alloc local storage
  781  00001710  afa20000	sw	0(r29),r2
  782  00001714  23bdfff8	addi	r29,r29,#-8
  783  00001718  001d0820	add	r1,r0,r29
  784  0000171c  8fc20004	lw	r2,4(r30)
  785  00001720  ac220000	sw	(r1),r2
  786  00001724  0fffff5c	jal	_dstrlen
  787  00001728  54000000	nop; delay slot nop
  788  0000172c  23bd0008	addi	r29,r29,#8
  789  00001730  afc1fff4	sw	-12(r30),r1
  790  00001734          	L41_LF2:
  791  00001734  8fc10000	lw	r1,(r30)
  792  00001738  90220000	lbu	r2,(r1)
  793  0000173c  64410000	snei	r1,r2,#0
  794  00001740  1420000c	bnez	r1,L43_LF2
  795  00001744  54000000	nop; delay slot nop
  796  00001748  08000060	j	L42_LF2
  797  0000174c  54000000	nop; delay slot nop
  798  00001750          	L43_LF2:
  799  00001750  23bdfff0	addi	r29,r29,#-16
  800  00001754  001d0820	add	r1,r0,r29
  801  00001758  8fc20000	lw	r2,(r30)
  802  0000175c  ac220000	sw	(r1),r2
  803  00001760  8fc20004	lw	r2,4(r30)
  804  00001764  ac220004	sw	4(r1),r2
  805  00001768  8fc2fff4	lw	r2,-12(r30)
  806  0000176c  ac220008	sw	8(r1),r2
  807  00001770  0ffffdc0	jal	_dstrncmp
  808  00001774  54000000	nop; delay slot nop
  809  00001778  23bd0010	addi	r29,r29,#16
  810  0000177c  64220000	snei	r2,r1,#0
  811  00001780  14400010	bnez	r2,L44_LF2
  812  00001784  54000000	nop; delay slot nop
  813  00001788  8fc10000	lw	r1,(r30)
  814  0000178c  08000028	j	L40_LF2
  815  00001790  54000000	nop; delay slot nop
  816  00001794          	L44_LF2:
  817  00001794  8fc20000	lw	r2,(r30)
  818  00001798  20410001	addi	r1,r2,#1
  819  0000179c  00011020	add	r2,r0,r1
  820  000017a0  afc20000	sw	(r30),r2
  821  000017a4  0bffff8c	j	L41_LF2
  822  000017a8  54000000	nop; delay slot nop
  823  000017ac          	L42_LF2:
  824  000017ac  20010000	addi	r1,r0,#0
  825  000017b0  08000004	j	L40_LF2
  826  000017b4  54000000	nop; delay slot nop
  827  000017b8          	L40_LF2:
  828  000017b8  8fa20000	lw	r2,0(r29)
  829  000017bc  8fdffff8	lw	r31,-8(r30)
  830  000017c0  001ee820	add	r29,r0,r30
  831  000017c4  8fdefffc	lw	r30,-4(r30)
  832  000017c8  4be00000	jr	r31
  833  000017cc  54000000	nop
  834  000017d0          	.endproc _dstrstr
  835  000017d0          	.align 2
  836  000017d0          	.proc _dmindex
  837  000017d0          	.global _dmindex
  838  000017d0          	_dmindex:
  839                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  840  000017d0  afbefffc	sw	-4(r29),r30; push fp
  841  000017d4  001df020	add	r30,r0,r29; fp = sp
  842  000017d8  afbffff8	sw	-8(r29),r31; push ret addr
  843  000017dc  2fbd0018	subui	r29,r29,#24; alloc local storage
  844  000017e0  afa20000	sw	0(r29),r2
  845  000017e4  54000000	nop
  846  000017e8          	L46_LF2:
  847  000017e8  8fc10000	lw	r1,(r30)
  848  000017ec  90220000	lbu	r2,(r1)
  849  000017f0  64410000	snei	r1,r2,#0
  850  000017f4  1420000c	bnez	r1,L48_LF2
  851  000017f8  54000000	nop; delay slot nop
  852  000017fc  08000070	j	L47_LF2
  853  00001800  54000000	nop; delay slot nop
  854  00001804          	L48_LF2:
  855  00001804  8fc10004	lw	r1,4(r30)
  856  00001808  afc1fff4	sw	-12(r30),r1
  857  0000180c          	L49_LF2:
  858  0000180c  8fc1fff4	lw	r1,-12(r30)
  859  00001810  90220000	lbu	r2,(r1)
  860  00001814  64410000	snei	r1,r2,#0
  861  00001818  1420000c	bnez	r1,L52_LF2
  862  0000181c  54000000	nop; delay slot nop
  863  00001820  08000044	j	L50_LF2
  864  00001824  54000000	nop; delay slot nop
  865  00001828          	L52_LF2:
  866  00001828  8fc10000	lw	r1,(r30)
  867  0000182c  8fc2fff4	lw	r2,-12(r30)
  868  00001830  90210000	lbu	r1,(r1)
  869  00001834  90420000	lbu	r2,(r2)
  870  00001838  00220828	seq	r1,r1,r2
  871  0000183c  10200010	beqz	r1,L51_LF2
  872  00001840  54000000	nop; delay slot nop
  873  00001844  8fc10000	lw	r1,(r30)
  874  00001848  08000030	j	L45_LF2
  875  0000184c  54000000	nop; delay slot nop
  876  00001850          	L53_LF2:
  877  00001850          	L51_LF2:
  878  00001850  8fc2fff4	lw	r2,-12(r30)
  879  00001854  20410001	addi	r1,r2,#1
  880  00001858  00011020	add	r2,r0,r1
  881  0000185c  afc2fff4	sw	-12(r30),r2
  882  00001860  0bffffa8	j	L49_LF2
  883  00001864  54000000	nop; delay slot nop
  884  00001868          	L50_LF2:
  885  00001868  0bffff7c	j	L46_LF2
  886  0000186c  54000000	nop; delay slot nop
  887  00001870          	L47_LF2:
  888  00001870  20010000	addi	r1,r0,#0
  889  00001874  08000004	j	L45_LF2
  890  00001878  54000000	nop; delay slot nop
  891  0000187c          	L45_LF2:
  892  0000187c  8fa20000	lw	r2,0(r29)
  893  00001880  8fdffff8	lw	r31,-8(r30)
  894  00001884  001ee820	add	r29,r0,r30
  895  00001888  8fdefffc	lw	r30,-4(r30)
  896  0000188c  4be00000	jr	r31
  897  00001890  54000000	nop
  898  00001894          	.endproc _dmindex
  899  00001894          	.align 2
  900  00001894          	.proc _dindex
  901  00001894          	.global _dindex
  902  00001894          	_dindex:
  903                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  904  00001894  afbefffc	sw	-4(r29),r30; push fp
  905  00001898  001df020	add	r30,r0,r29; fp = sp
  906  0000189c  afbffff8	sw	-8(r29),r31; push ret addr
  907  000018a0  2fbd0010	subui	r29,r29,#16; alloc local storage
  908  000018a4  afa20000	sw	0(r29),r2
  909  000018a8  54000000	nop
  910  000018ac          	L55_LF2:
  911  000018ac  8fc10000	lw	r1,(r30)
  912  000018b0  90220000	lbu	r2,(r1)
  913  000018b4  64410000	snei	r1,r2,#0
  914  000018b8  1420000c	bnez	r1,L57_LF2
  915  000018bc  54000000	nop; delay slot nop
  916  000018c0  08000040	j	L56_LF2
  917  000018c4  54000000	nop; delay slot nop
  918  000018c8          	L57_LF2:
  919  000018c8  8fc10000	lw	r1,(r30)
  920  000018cc  90220000	lbu	r2,(r1)
  921  000018d0  8fc10004	lw	r1,4(r30)
  922  000018d4  00411028	seq	r2,r2,r1
  923  000018d8  10400010	beqz	r2,L58_LF2
  924  000018dc  54000000	nop; delay slot nop
  925  000018e0  8fc10000	lw	r1,(r30)
  926  000018e4  08000028	j	L54_LF2
  927  000018e8  54000000	nop; delay slot nop
  928  000018ec          	L58_LF2:
  929  000018ec  8fc20000	lw	r2,(r30)
  930  000018f0  20410001	addi	r1,r2,#1
  931  000018f4  00011020	add	r2,r0,r1
  932  000018f8  afc20000	sw	(r30),r2
  933  000018fc  0bffffac	j	L55_LF2
  934  00001900  54000000	nop; delay slot nop
  935  00001904          	L56_LF2:
  936  00001904  20010000	addi	r1,r0,#0
  937  00001908  08000004	j	L54_LF2
  938  0000190c  54000000	nop; delay slot nop
  939  00001910          	L54_LF2:
  940  00001910  8fa20000	lw	r2,0(r29)
  941  00001914  8fdffff8	lw	r31,-8(r30)
  942  00001918  001ee820	add	r29,r0,r30
  943  0000191c  8fdefffc	lw	r30,-4(r30)
  944  00001920  4be00000	jr	r31
  945  00001924  54000000	nop
  946  00001928          	.endproc _dindex
  947  00001928          	.align 2
  948  00001928          	.proc _ditoa
  949  00001928          	.global _ditoa
  950  00001928          	_ditoa:
  951                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
  952  00001928  afbefffc	sw	-4(r29),r30; push fp
  953  0000192c  001df020	add	r30,r0,r29; fp = sp
  954  00001930  afbffff8	sw	-8(r29),r31; push ret addr
  955  00001934  2fbd0018	subui	r29,r29,#24; alloc local storage
  956  00001938  afa20000	sw	0(r29),r2
  957  0000193c  afa30004	sw	4(r29),r3
  958  00001940  8fc10000	lw	r1,(r30)
  959  00001944  68220000	slti	r2,r1,#0
  960  00001948  1040002c	beqz	r2,L60_LF2
  961  0000194c  54000000	nop; delay slot nop
  962  00001950  8fc10004	lw	r1,4(r30)
  963  00001954  20220001	addi	r2,r1,#1
  964  00001958  afc20004	sw	4(r30),r2
  965  0000195c  2002002d	addi	r2,r0,(#0x2d)&0xff
  966  00001960  a0220000	sb	(r1),r2
  967  00001964  8fc10000	lw	r1,(r30)
  968  00001968  00011022	sub	r2,r0,r1
  969  0000196c  afc20000	sw	(r30),r2
  970  00001970  08000118	j	L61_LF2
  971  00001974  54000000	nop; delay slot nop
  972  00001978          	L60_LF2:
  973  00001978  8fc10000	lw	r1,(r30)
  974  0000197c  64220000	snei	r2,r1,#0
  975  00001980  14400020	bnez	r2,L62_LF2
  976  00001984  54000000	nop; delay slot nop
  977  00001988  8fc10004	lw	r1,4(r30)
  978  0000198c  20220001	addi	r2,r1,#1
  979  00001990  afc20004	sw	4(r30),r2
  980  00001994  20020030	addi	r2,r0,(#0x30)&0xff
  981  00001998  a0220000	sb	(r1),r2
  982  0000199c  080000ec	j	L61_LF2
  983  000019a0  54000000	nop; delay slot nop
  984  000019a4          	L62_LF2:
  985  000019a4  20010001	addi	r1,r0,#1
  986  000019a8  afc1fff4	sw	-12(r30),r1
  987  000019ac          	L64_LF2:
  988  000019ac  8fc1fff4	lw	r1,-12(r30)
  989  000019b0  8fc20000	lw	r2,(r30)
  990  000019b4  0022082c	sle	r1,r1,r2
  991  000019b8  1420000c	bnez	r1,L66_LF2
  992  000019bc  54000000	nop; delay slot nop
  993  000019c0  08000024	j	L65_LF2
  994  000019c4  54000000	nop; delay slot nop
  995  000019c8          	L67_LF2:
  996  000019c8          	L66_LF2:
  997  000019c8  8fc1fff4	lw	r1,-12(r30)
  998  000019cc  00011820	add	r3,r0,r1
  999  000019d0  50620002	slli	r2,r3,#0x2
 1000  000019d4  00411020	add	r2,r2,r1
 1001  000019d8  50410001	slli	r1,r2,#0x1
 1002  000019dc  afc1fff4	sw	-12(r30),r1
 1003  000019e0  0bffffc8	j	L64_LF2
 1004  000019e4  54000000	nop; delay slot nop
 1005  000019e8          	L65_LF2:
 1006  000019e8  54000000	nop
 1007  000019ec          	L68_LF2:
 1008  000019ec  8fc1fff4	lw	r1,-12(r30)
 1009  000019f0  2002000a	addi	r2,r0,#10
 1010  000019f4  00200035	movi2fp	f0,r1
 1011  000019f8  00400835	movi2fp	f1,r2
 1012  000019fc  0401000f	div	f0,f0,f1
 1013  00001a00  00000834	movfp2i	r1,f0
 1014  00001a04  afc1fff4	sw	-12(r30),r1
 1015  00001a08  8fc10004	lw	r1,4(r30)
 1016  00001a0c  20220001	addi	r2,r1,#1
 1017  00001a10  afc20004	sw	4(r30),r2
 1018  00001a14  8fc20000	lw	r2,(r30)
 1019  00001a18  8fc3fff4	lw	r3,-12(r30)
 1020  00001a1c  00400035	movi2fp	f0,r2
 1021  00001a20  00600835	movi2fp	f1,r3
 1022  00001a24  0401000f	div	f0,f0,f1
 1023  00001a28  00001034	movfp2i	r2,f0
 1024  00001a2c  00021820	add	r3,r0,r2
 1025  00001a30  20620030	addi	r2,r3,#48
 1026  00001a34  a0220000	sb	(r1),r2
 1027  00001a38  8fc10000	lw	r1,(r30)
 1028  00001a3c  8fc3fff4	lw	r3,-12(r30)
 1029  00001a40  00200035	movi2fp	f0,r1
 1030  00001a44  00600835	movi2fp	f1,r3
 1031  00001a48  0401000f	div	f0,f0,f1
 1032  00001a4c  00001034	movfp2i	r2,f0
 1033  00001a50  8fc3fff4	lw	r3,-12(r30)
 1034  00001a54  00400035	movi2fp	f0,r2
 1035  00001a58  00600835	movi2fp	f1,r3
 1036  00001a5c  0401000e	mult	f0,f0,f1
 1037  00001a60  00001034	movfp2i	r2,f0
 1038  00001a64  00220822	sub	r1,r1,r2
 1039  00001a68  afc10000	sw	(r30),r1
 1040  00001a6c          	L70_LF2:
 1041  00001a6c  8fc1fff4	lw	r1,-12(r30)
 1042  00001a70  6c220001	sgti	r2,r1,#1
 1043  00001a74  1440000c	bnez	r2,L71_LF2
 1044  00001a78  54000000	nop; delay slot nop
 1045  00001a7c  0800000c	j	L61_LF2
 1046  00001a80  54000000	nop; delay slot nop
 1047  00001a84          	L71_LF2:
 1048  00001a84  0bffff64	j	L68_LF2
 1049  00001a88  54000000	nop; delay slot nop
 1050  00001a8c          	L69_LF2:
 1051  00001a8c          	L63_LF2:
 1052  00001a8c          	L61_LF2:
 1053  00001a8c  8fc10004	lw	r1,4(r30)
 1054  00001a90  20020000	addi	r2,r0,(#0x0)&0xff
 1055  00001a94  a0220000	sb	(r1),r2
 1056  00001a98          	L59_LF2:
 1057  00001a98  8fa20000	lw	r2,0(r29)
 1058  00001a9c  8fa30004	lw	r3,4(r29)
 1059  00001aa0  8fdffff8	lw	r31,-8(r30)
 1060  00001aa4  001ee820	add	r29,r0,r30
 1061  00001aa8  8fdefffc	lw	r30,-4(r30)
 1062  00001aac  4be00000	jr	r31
 1063  00001ab0  54000000	nop
 1064  00001ab4          	.endproc _ditoa
 1065  00001ab4          	.align 2
 1066  00001ab4          	.proc _dstrtol
 1067  00001ab4          	.global _dstrtol
 1068  00001ab4          	_dstrtol:
 1069                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1070  00001ab4  afbefffc	sw	-4(r29),r30; push fp
 1071  00001ab8  001df020	add	r30,r0,r29; fp = sp
 1072  00001abc  afbffff8	sw	-8(r29),r31; push ret addr
 1073  00001ac0  2fbd0020	subui	r29,r29,#32; alloc local storage
 1074  00001ac4  afa20000	sw	0(r29),r2
 1075  00001ac8  20010000	addi	r1,r0,#0
 1076  00001acc  afc1fff4	sw	-12(r30),r1
 1077  00001ad0          	L73_LF2:
 1078  00001ad0  8fc10000	lw	r1,(r30)
 1079  00001ad4  90220000	lbu	r2,(r1)
 1080  00001ad8  60410020	seqi	r1,r2,#32
 1081  00001adc  14200034	bnez	r1,L75_LF2
 1082  00001ae0  54000000	nop; delay slot nop
 1083  00001ae4  8fc10000	lw	r1,(r30)
 1084  00001ae8  90220000	lbu	r2,(r1)
 1085  00001aec  60410009	seqi	r1,r2,#9
 1086  00001af0  14200020	bnez	r1,L75_LF2
 1087  00001af4  54000000	nop; delay slot nop
 1088  00001af8  8fc10000	lw	r1,(r30)
 1089  00001afc  90220000	lbu	r2,(r1)
 1090  00001b00  6041000a	seqi	r1,r2,#10
 1091  00001b04  1420000c	bnez	r1,L75_LF2
 1092  00001b08  54000000	nop; delay slot nop
 1093  00001b0c  0800001c	j	L74_LF2
 1094  00001b10  54000000	nop; delay slot nop
 1095  00001b14          	L75_LF2:
 1096  00001b14  8fc20000	lw	r2,(r30)
 1097  00001b18  20410001	addi	r1,r2,#1
 1098  00001b1c  00011020	add	r2,r0,r1
 1099  00001b20  afc20000	sw	(r30),r2
 1100  00001b24  0bffffa8	j	L73_LF2
 1101  00001b28  54000000	nop; delay slot nop
 1102  00001b2c          	L74_LF2:
 1103  00001b2c  8fc10004	lw	r1,4(r30)
 1104  00001b30  64220000	snei	r2,r1,#0
 1105  00001b34  10400010	beqz	r2,L76_LF2
 1106  00001b38  54000000	nop; delay slot nop
 1107  00001b3c  8fc10004	lw	r1,4(r30)
 1108  00001b40  8fc20000	lw	r2,(r30)
 1109  00001b44  ac220000	sw	(r1),r2
 1110  00001b48          	L76_LF2:
 1111  00001b48  8fc10000	lw	r1,(r30)
 1112  00001b4c  90220000	lbu	r2,(r1)
 1113  00001b50  64410000	snei	r1,r2,#0
 1114  00001b54  14200010	bnez	r1,L77_LF2
 1115  00001b58  54000000	nop; delay slot nop
 1116  00001b5c  8fc1fff4	lw	r1,-12(r30)
 1117  00001b60  08000294	j	L72_LF2
 1118  00001b64  54000000	nop; delay slot nop
 1119  00001b68          	L77_LF2:
 1120  00001b68  8fc10000	lw	r1,(r30)
 1121  00001b6c  90220000	lbu	r2,(r1)
 1122  00001b70  6041002d	seqi	r1,r2,#45
 1123  00001b74  10200024	beqz	r1,L78_LF2
 1124  00001b78  54000000	nop; delay slot nop
 1125  00001b7c  2001ffff	addi	r1,r0,#-1
 1126  00001b80  afc1ffec	sw	-20(r30),r1
 1127  00001b84  8fc20000	lw	r2,(r30)
 1128  00001b88  20410001	addi	r1,r2,#1
 1129  00001b8c  00011020	add	r2,r0,r1
 1130  00001b90  afc20000	sw	(r30),r2
 1131  00001b94  0800000c	j	L79_LF2
 1132  00001b98  54000000	nop; delay slot nop
 1133  00001b9c          	L78_LF2:
 1134  00001b9c  20010001	addi	r1,r0,#1
 1135  00001ba0  afc1ffec	sw	-20(r30),r1
 1136  00001ba4          	L79_LF2:
 1137  00001ba4  8fc10008	lw	r1,8(r30)
 1138  00001ba8  64220000	snei	r2,r1,#0
 1139  00001bac  14400090	bnez	r2,L80_LF2
 1140  00001bb0  54000000	nop; delay slot nop
 1141  00001bb4  8fc10000	lw	r1,(r30)
 1142  00001bb8  90220000	lbu	r2,(r1)
 1143  00001bbc  60410030	seqi	r1,r2,#48
 1144  00001bc0  10200074	beqz	r1,L81_LF2
 1145  00001bc4  54000000	nop; delay slot nop
 1146  00001bc8  8fc20000	lw	r2,(r30)
 1147  00001bcc  20410001	addi	r1,r2,#1
 1148  00001bd0  00011020	add	r2,r0,r1
 1149  00001bd4  afc20000	sw	(r30),r2
 1150  00001bd8  8fc10000	lw	r1,(r30)
 1151  00001bdc  90220000	lbu	r2,(r1)
 1152  00001be0  60410078	seqi	r1,r2,#120
 1153  00001be4  14200020	bnez	r1,L83_LF2
 1154  00001be8  54000000	nop; delay slot nop
 1155  00001bec  8fc10000	lw	r1,(r30)
 1156  00001bf0  90220000	lbu	r2,(r1)
 1157  00001bf4  60410058	seqi	r1,r2,#88
 1158  00001bf8  1420000c	bnez	r1,L83_LF2
 1159  00001bfc  54000000	nop; delay slot nop
 1160  00001c00  08000024	j	L82_LF2
 1161  00001c04  54000000	nop; delay slot nop
 1162  00001c08          	L83_LF2:
 1163  00001c08  20010010	addi	r1,r0,#16
 1164  00001c0c  afc10008	sw	8(r30),r1
 1165  00001c10  8fc20000	lw	r2,(r30)
 1166  00001c14  20410001	addi	r1,r2,#1
 1167  00001c18  00011020	add	r2,r0,r1
 1168  00001c1c  afc20000	sw	(r30),r2
 1169  00001c20  0800000c	j	L84_LF2
 1170  00001c24  54000000	nop; delay slot nop
 1171  00001c28          	L82_LF2:
 1172  00001c28  20010008	addi	r1,r0,#8
 1173  00001c2c  afc10008	sw	8(r30),r1
 1174  00001c30          	L84_LF2:
 1175  00001c30  0800000c	j	L80_LF2
 1176  00001c34  54000000	nop; delay slot nop
 1177  00001c38          	L81_LF2:
 1178  00001c38  2001000a	addi	r1,r0,#10
 1179  00001c3c  afc10008	sw	8(r30),r1
 1180  00001c40          	L85_LF2:
 1181  00001c40          	L80_LF2:
 1182  00001c40  8fc10008	lw	r1,8(r30)
 1183  00001c44  70220000	slei	r2,r1,#0
 1184  00001c48  1440001c	bnez	r2,L87_LF2
 1185  00001c4c  54000000	nop; delay slot nop
 1186  00001c50  8fc10008	lw	r1,8(r30)
 1187  00001c54  6c220010	sgti	r2,r1,#16
 1188  00001c58  1440000c	bnez	r2,L87_LF2
 1189  00001c5c  54000000	nop; delay slot nop
 1190  00001c60  08000010	j	L86_LF2
 1191  00001c64  54000000	nop; delay slot nop
 1192  00001c68          	L87_LF2:
 1193  00001c68  8fc1fff4	lw	r1,-12(r30)
 1194  00001c6c  08000188	j	L72_LF2
 1195  00001c70  54000000	nop; delay slot nop
 1196  00001c74          	L86_LF2:
 1197  00001c74  54000000	nop
 1198  00001c78          	L88_LF2:
 1199  00001c78  8fc10000	lw	r1,(r30)
 1200  00001c7c  90220000	lbu	r2,(r1)
 1201  00001c80  6c41002f	sgtui	r1,r2,#47
 1202  00001c84  10200030	beqz	r1,L91_LF2
 1203  00001c88  54000000	nop; delay slot nop
 1204  00001c8c  8fc10000	lw	r1,(r30)
 1205  00001c90  90220000	lbu	r2,(r1)
 1206  00001c94  70410039	sleui	r1,r2,#57
 1207  00001c98  1020001c	beqz	r1,L91_LF2
 1208  00001c9c  54000000	nop; delay slot nop
 1209  00001ca0  8fc10000	lw	r1,(r30)
 1210  00001ca4  90220000	lbu	r2,(r1)
 1211  00001ca8  2041ffd0	addi	r1,r2,#-48
 1212  00001cac  afc1fff0	sw	-16(r30),r1
 1213  00001cb0  0800008c	j	L92_LF2
 1214  00001cb4  54000000	nop; delay slot nop
 1215  00001cb8          	L91_LF2:
 1216  00001cb8  8fc10000	lw	r1,(r30)
 1217  00001cbc  90220000	lbu	r2,(r1)
 1218  00001cc0  6c410060	sgtui	r1,r2,#96
 1219  00001cc4  10200030	beqz	r1,L93_LF2
 1220  00001cc8  54000000	nop; delay slot nop
 1221  00001ccc  8fc10000	lw	r1,(r30)
 1222  00001cd0  90220000	lbu	r2,(r1)
 1223  00001cd4  7041007a	sleui	r1,r2,#122
 1224  00001cd8  1020001c	beqz	r1,L93_LF2
 1225  00001cdc  54000000	nop; delay slot nop
 1226  00001ce0  8fc10000	lw	r1,(r30)
 1227  00001ce4  90220000	lbu	r2,(r1)
 1228  00001ce8  2041ffa9	addi	r1,r2,#-87
 1229  00001cec  afc1fff0	sw	-16(r30),r1
 1230  00001cf0  0800004c	j	L92_LF2
 1231  00001cf4  54000000	nop; delay slot nop
 1232  00001cf8          	L93_LF2:
 1233  00001cf8  8fc10000	lw	r1,(r30)
 1234  00001cfc  90220000	lbu	r2,(r1)
 1235  00001d00  6c410040	sgtui	r1,r2,#64
 1236  00001d04  10200030	beqz	r1,L95_LF2
 1237  00001d08  54000000	nop; delay slot nop
 1238  00001d0c  8fc10000	lw	r1,(r30)
 1239  00001d10  90220000	lbu	r2,(r1)
 1240  00001d14  7041005a	sleui	r1,r2,#90
 1241  00001d18  1020001c	beqz	r1,L95_LF2
 1242  00001d1c  54000000	nop; delay slot nop
 1243  00001d20  8fc10000	lw	r1,(r30)
 1244  00001d24  90220000	lbu	r2,(r1)
 1245  00001d28  2041ffc9	addi	r1,r2,#-55
 1246  00001d2c  afc1fff0	sw	-16(r30),r1
 1247  00001d30  0800000c	j	L92_LF2
 1248  00001d34  54000000	nop; delay slot nop
 1249  00001d38          	L95_LF2:
 1250  00001d38  200103e8	addi	r1,r0,#1000
 1251  00001d3c  afc1fff0	sw	-16(r30),r1
 1252  00001d40          	L96_LF2:
 1253  00001d40          	L94_LF2:
 1254  00001d40          	L92_LF2:
 1255  00001d40  8fc1fff0	lw	r1,-16(r30)
 1256  00001d44  8fc20008	lw	r2,8(r30)
 1257  00001d48  0022082a	slt	r1,r1,r2
 1258  00001d4c  10200040	beqz	r1,L90_LF2
 1259  00001d50  54000000	nop; delay slot nop
 1260  00001d54  8fc1fff4	lw	r1,-12(r30)
 1261  00001d58  8fc20008	lw	r2,8(r30)
 1262  00001d5c  00200035	movi2fp	f0,r1
 1263  00001d60  00400835	movi2fp	f1,r2
 1264  00001d64  0401000e	mult	f0,f0,f1
 1265  00001d68  00000834	movfp2i	r1,f0
 1266  00001d6c  afc1fff4	sw	-12(r30),r1
 1267  00001d70  8fc1fff4	lw	r1,-12(r30)
 1268  00001d74  8fc2fff0	lw	r2,-16(r30)
 1269  00001d78  00220820	add	r1,r1,r2
 1270  00001d7c  afc1fff4	sw	-12(r30),r1
 1271  00001d80  8fc20000	lw	r2,(r30)
 1272  00001d84  20410001	addi	r1,r2,#1
 1273  00001d88  00011020	add	r2,r0,r1
 1274  00001d8c  afc20000	sw	(r30),r2
 1275  00001d90          	L97_LF2:
 1276  00001d90          	L90_LF2:
 1277  00001d90  8fc1fff0	lw	r1,-16(r30)
 1278  00001d94  8fc20008	lw	r2,8(r30)
 1279  00001d98  0022082a	slt	r1,r1,r2
 1280  00001d9c  1420000c	bnez	r1,L98_LF2
 1281  00001da0  54000000	nop; delay slot nop
 1282  00001da4  0800000c	j	L89_LF2
 1283  00001da8  54000000	nop; delay slot nop
 1284  00001dac          	L98_LF2:
 1285  00001dac  0bfffec8	j	L88_LF2
 1286  00001db0  54000000	nop; delay slot nop
 1287  00001db4          	L89_LF2:
 1288  00001db4  8fc10004	lw	r1,4(r30)
 1289  00001db8  64220000	snei	r2,r1,#0
 1290  00001dbc  10400010	beqz	r2,L99_LF2
 1291  00001dc0  54000000	nop; delay slot nop
 1292  00001dc4  8fc10004	lw	r1,4(r30)
 1293  00001dc8  8fc20000	lw	r2,(r30)
 1294  00001dcc  ac220000	sw	(r1),r2
 1295  00001dd0          	L99_LF2:
 1296  00001dd0  8fc1fff4	lw	r1,-12(r30)
 1297  00001dd4  8fc2ffec	lw	r2,-20(r30)
 1298  00001dd8  00200035	movi2fp	f0,r1
 1299  00001ddc  00400835	movi2fp	f1,r2
 1300  00001de0  0401000e	mult	f0,f0,f1
 1301  00001de4  00000834	movfp2i	r1,f0
 1302  00001de8  afc1fff4	sw	-12(r30),r1
 1303  00001dec  8fc1fff4	lw	r1,-12(r30)
 1304  00001df0  08000004	j	L72_LF2
 1305  00001df4  54000000	nop; delay slot nop
 1306  00001df8          	L72_LF2:
 1307  00001df8  8fa20000	lw	r2,0(r29)
 1308  00001dfc  8fdffff8	lw	r31,-8(r30)
 1309  00001e00  001ee820	add	r29,r0,r30
 1310  00001e04  8fdefffc	lw	r30,-4(r30)
 1311  00001e08  4be00000	jr	r31
 1312  00001e0c  54000000	nop
 1313  00001e10          	.endproc _dstrtol
 1314  00001e10          	.align 2
 1315  00001e10          	.proc _bcopy
 1316  00001e10          	.global _bcopy
 1317  00001e10          	_bcopy:
 1318                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1319  00001e10  afbefffc	sw	-4(r29),r30; push fp
 1320  00001e14  001df020	add	r30,r0,r29; fp = sp
 1321  00001e18  afbffff8	sw	-8(r29),r31; push ret addr
 1322  00001e1c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1323  00001e20  afa20000	sw	0(r29),r2
 1324  00001e24  afa30004	sw	4(r29),r3
 1325  00001e28  54000000	nop
 1326  00001e2c          	L101_LF2:
 1327  00001e2c  8fc10008	lw	r1,8(r30)
 1328  00001e30  2022ffff	addi	r2,r1,#-1
 1329  00001e34  afc20008	sw	8(r30),r2
 1330  00001e38  6c210000	sgti	r1,r1,#0
 1331  00001e3c  1420000c	bnez	r1,L103_LF2
 1332  00001e40  54000000	nop; delay slot nop
 1333  00001e44  0800002c	j	L102_LF2
 1334  00001e48  54000000	nop; delay slot nop
 1335  00001e4c          	L103_LF2:
 1336  00001e4c  8fc10004	lw	r1,4(r30)
 1337  00001e50  20220001	addi	r2,r1,#1
 1338  00001e54  afc20004	sw	4(r30),r2
 1339  00001e58  8fc20000	lw	r2,(r30)
 1340  00001e5c  20430001	addi	r3,r2,#1
 1341  00001e60  afc30000	sw	(r30),r3
 1342  00001e64  80420000	lb	r2,(r2)
 1343  00001e68  a0220000	sb	(r1),r2
 1344  00001e6c  0bffffbc	j	L101_LF2
 1345  00001e70  54000000	nop; delay slot nop
 1346  00001e74          	L102_LF2:
 1347  00001e74          	L100_LF2:
 1348  00001e74  8fa20000	lw	r2,0(r29)
 1349  00001e78  8fa30004	lw	r3,4(r29)
 1350  00001e7c  8fdffff8	lw	r31,-8(r30)
 1351  00001e80  001ee820	add	r29,r0,r30
 1352  00001e84  8fdefffc	lw	r30,-4(r30)
 1353  00001e88  4be00000	jr	r31
 1354  00001e8c  54000000	nop
 1355  00001e90          	.endproc _bcopy
 1356  00001e90          	.align 2
 1357  00001e90          	.proc _bzero
 1358  00001e90          	.global _bzero
 1359  00001e90          	_bzero:
 1360                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1361  00001e90  afbefffc	sw	-4(r29),r30; push fp
 1362  00001e94  001df020	add	r30,r0,r29; fp = sp
 1363  00001e98  afbffff8	sw	-8(r29),r31; push ret addr
 1364  00001e9c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1365  00001ea0  afa20000	sw	0(r29),r2
 1366  00001ea4  54000000	nop
 1367  00001ea8          	L105_LF2:
 1368  00001ea8  8fc10004	lw	r1,4(r30)
 1369  00001eac  2022ffff	addi	r2,r1,#-1
 1370  00001eb0  afc20004	sw	4(r30),r2
 1371  00001eb4  6c210000	sgti	r1,r1,#0
 1372  00001eb8  1420000c	bnez	r1,L107_LF2
 1373  00001ebc  54000000	nop; delay slot nop
 1374  00001ec0  08000020	j	L106_LF2
 1375  00001ec4  54000000	nop; delay slot nop
 1376  00001ec8          	L107_LF2:
 1377  00001ec8  8fc10000	lw	r1,(r30)
 1378  00001ecc  20220001	addi	r2,r1,#1
 1379  00001ed0  afc20000	sw	(r30),r2
 1380  00001ed4  20020000	addi	r2,r0,(#0x0)&0xff
 1381  00001ed8  a0220000	sb	(r1),r2
 1382  00001edc  0bffffc8	j	L105_LF2
 1383  00001ee0  54000000	nop; delay slot nop
 1384  00001ee4          	L106_LF2:
 1385  00001ee4          	L104_LF2:
 1386  00001ee4  8fa20000	lw	r2,0(r29)
 1387  00001ee8  8fdffff8	lw	r31,-8(r30)
 1388  00001eec  001ee820	add	r29,r0,r30
 1389  00001ef0  8fdefffc	lw	r30,-4(r30)
 1390  00001ef4  4be00000	jr	r31
 1391  00001ef8  54000000	nop
 1392  00001efc          	.endproc _bzero
 1393  00001efc          	.align 2
 1394  00001efc          	.proc _min
 1395  00001efc          	.global _min
 1396  00001efc          	_min:
 1397                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1398  00001efc  afbefffc	sw	-4(r29),r30; push fp
 1399  00001f00  001df020	add	r30,r0,r29; fp = sp
 1400  00001f04  afbffff8	sw	-8(r29),r31; push ret addr
 1401  00001f08  2fbd0010	subui	r29,r29,#16; alloc local storage
 1402  00001f0c  afa20000	sw	0(r29),r2
 1403  00001f10  afa30004	sw	4(r29),r3
 1404  00001f14  8fc10000	lw	r1,(r30)
 1405  00001f18  8fc20004	lw	r2,4(r30)
 1406  00001f1c  0022182c	sle	r3,r1,r2
 1407  00001f20  14600008	bnez	r3,L109_LF2
 1408  00001f24  54000000	nop; delay slot nop
 1409  00001f28  8fc10004	lw	r1,4(r30)
 1410  00001f2c          	L109_LF2:
 1411  00001f2c  08000004	j	L108_LF2
 1412  00001f30  54000000	nop; delay slot nop
 1413  00001f34          	L108_LF2:
 1414  00001f34  8fa20000	lw	r2,0(r29)
 1415  00001f38  8fa30004	lw	r3,4(r29)
 1416  00001f3c  8fdffff8	lw	r31,-8(r30)
 1417  00001f40  001ee820	add	r29,r0,r30
 1418  00001f44  8fdefffc	lw	r30,-4(r30)
 1419  00001f48  4be00000	jr	r31
 1420  00001f4c  54000000	nop
 1421  00001f50          	.endproc _min
 1422  00001f50          	.align 2
 1423  00001f50          	.proc _max
 1424  00001f50          	.global _max
 1425  00001f50          	_max:
 1426                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1427  00001f50  afbefffc	sw	-4(r29),r30; push fp
 1428  00001f54  001df020	add	r30,r0,r29; fp = sp
 1429  00001f58  afbffff8	sw	-8(r29),r31; push ret addr
 1430  00001f5c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1431  00001f60  afa20000	sw	0(r29),r2
 1432  00001f64  afa30004	sw	4(r29),r3
 1433  00001f68  8fc10000	lw	r1,(r30)
 1434  00001f6c  8fc20004	lw	r2,4(r30)
 1435  00001f70  0022182d	sge	r3,r1,r2
 1436  00001f74  14600008	bnez	r3,L111_LF2
 1437  00001f78  54000000	nop; delay slot nop
 1438  00001f7c  8fc10004	lw	r1,4(r30)
 1439  00001f80          	L111_LF2:
 1440  00001f80  08000004	j	L110_LF2
 1441  00001f84  54000000	nop; delay slot nop
 1442  00001f88          	L110_LF2:
 1443  00001f88  8fa20000	lw	r2,0(r29)
 1444  00001f8c  8fa30004	lw	r3,4(r29)
 1445  00001f90  8fdffff8	lw	r31,-8(r30)
 1446  00001f94  001ee820	add	r29,r0,r30
 1447  00001f98  8fdefffc	lw	r30,-4(r30)
 1448  00001f9c  4be00000	jr	r31
 1449  00001fa0  54000000	nop
 1450  00001fa4          	.endproc _max
 1451                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1452                      ;;;
 1453                      ;;; Most of the traps are called in files from libtraps.
 1456  00001fa4          	.align 2
 1457  00001fa4          	.proc _exit
 1458  00001fa4          	.global _exit
 1459  00001fa4          	_exit:
 1460  00001fa4  44000300	trap	#0x300
 1461  00001fa8  4be00000	jr	r31
 1462  00001fac  54000000	nop
 1463  00001fb0          	.endproc _exit
 1465                      ; for the benefit of gcc.
 1466  00001fb0          	.proc ___main
 1467  00001fb0          	.global ___main
 1468  00001fb0          	___main:
 1469  00001fb0  4be00000	jr	r31
 1470  00001fb4  54000000	nop
 1471  00001fb8          	.endproc ___main
 1472  00001fb8          	.text
 1473  00001fb8          	.global _etext
 1474  00001fb8          	_etext:
 1475  00001fb8          	.align 3
 1476  00001fb8          	.data
 1477  00002000          	.global _edata
 1478  00002000          	_edata:
