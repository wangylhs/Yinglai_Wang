// Generated from Micro.g4 by ANTLR 4.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class MicroLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__30=1, T__29=2, T__28=3, T__27=4, T__26=5, T__25=6, T__24=7, T__23=8, 
		T__22=9, T__21=10, T__20=11, T__19=12, T__18=13, T__17=14, T__16=15, T__15=16, 
		T__14=17, T__13=18, T__12=19, T__11=20, T__10=21, T__9=22, T__8=23, T__7=24, 
		T__6=25, T__5=26, T__4=27, T__3=28, T__2=29, T__1=30, T__0=31, INTLITERAL=32, 
		FLOATLITERAL=33, STRINGLITERAL=34, COMMENT=35, KEYWORD=36, OPERATOR=37, 
		SPACE=38, IDENTIFIER=39;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"','", "'*'", "'-'", "'PROGRAM'", "'('", "'<'", "'READ'", "'END'", "'!='", 
		"'<='", "'ELSE'", "'ENDIF'", "'VOID'", "'STRING'", "'IF'", "'WRITE'", 
		"')'", "'+'", "'WHILE'", "'='", "';'", "'FUNCTION'", "'>'", "'FLOAT'", 
		"':='", "'RETURN'", "'/'", "'BEGIN'", "'>='", "'INT'", "'ENDWHILE'", "INTLITERAL", 
		"FLOATLITERAL", "STRINGLITERAL", "COMMENT", "KEYWORD", "OPERATOR", "SPACE", 
		"IDENTIFIER"
	};
	public static final String[] ruleNames = {
		"T__30", "T__29", "T__28", "T__27", "T__26", "T__25", "T__24", "T__23", 
		"T__22", "T__21", "T__20", "T__19", "T__18", "T__17", "T__16", "T__15", 
		"T__14", "T__13", "T__12", "T__11", "T__10", "T__9", "T__8", "T__7", "T__6", 
		"T__5", "T__4", "T__3", "T__2", "T__1", "T__0", "INTLITERAL", "FLOATLITERAL", 
		"STRINGLITERAL", "COMMENT", "KEYWORD", "OPERATOR", "SPACE", "IDENTIFIER"
	};


	public MicroLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Micro.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 34: COMMENT_action((RuleContext)_localctx, actionIndex); break;

		case 37: SPACE_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: skip();  break;
		}
	}
	private void SPACE_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1: skip();  break;
		}
	}

	public static final String _serializedATN =
		"\3\uacf5\uee8c\u4f5d\u8b0d\u4a45\u78bd\u1b2f\u3378\2)\u0172\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\3\2\3\2\3\3\3\3\3\4"+
		"\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\b\3\b\3"+
		"\b\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\r"+
		"\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17"+
		"\3\17\3\17\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\23"+
		"\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\26\3\26\3\27\3\27\3\27"+
		"\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\31"+
		"\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\35\3\35"+
		"\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3"+
		" \3 \3 \3 \3 \3!\6!\u00d5\n!\r!\16!\u00d6\3\"\7\"\u00da\n\"\f\"\16\"\u00dd"+
		"\13\"\3\"\3\"\6\"\u00e1\n\"\r\"\16\"\u00e2\3#\3#\7#\u00e7\n#\f#\16#\u00ea"+
		"\13#\3#\3#\3$\3$\3$\7$\u00f1\n$\f$\16$\u00f4\13$\3$\3$\3$\3$\3%\3%\3%"+
		"\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%"+
		"\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%"+
		"\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%"+
		"\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\5%\u0157"+
		"\n%\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\5&\u0163\n&\3\'\6\'\u0166\n\'\r\'\16"+
		"\'\u0167\3\'\3\'\3(\3(\7(\u016e\n(\f(\16(\u0171\13(\4\u00e8\u00f2)\3\3"+
		"\1\5\4\1\7\5\1\t\6\1\13\7\1\r\b\1\17\t\1\21\n\1\23\13\1\25\f\1\27\r\1"+
		"\31\16\1\33\17\1\35\20\1\37\21\1!\22\1#\23\1%\24\1\'\25\1)\26\1+\27\1"+
		"-\30\1/\31\1\61\32\1\63\33\1\65\34\1\67\35\19\36\1;\37\1= \1?!\1A\"\1"+
		"C#\1E$\1G%\2I&\1K\'\1M(\3O)\1\3\2\t\3\2\62;\3\2//\6\2,-//\61\61??\6\2"+
		"*+..=>@@\5\2\13\f\17\17\"\"\4\2C\\c|\5\2\62;C\\c|\u018e\2\3\3\2\2\2\2"+
		"\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2"+
		"\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2"+
		"\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2"+
		"\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2"+
		"\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2"+
		"\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2"+
		"K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\3Q\3\2\2\2\5S\3\2\2\2\7U\3\2\2\2\tW\3"+
		"\2\2\2\13_\3\2\2\2\ra\3\2\2\2\17c\3\2\2\2\21h\3\2\2\2\23l\3\2\2\2\25o"+
		"\3\2\2\2\27r\3\2\2\2\31w\3\2\2\2\33}\3\2\2\2\35\u0082\3\2\2\2\37\u0089"+
		"\3\2\2\2!\u008c\3\2\2\2#\u0092\3\2\2\2%\u0094\3\2\2\2\'\u0096\3\2\2\2"+
		")\u009c\3\2\2\2+\u009e\3\2\2\2-\u00a0\3\2\2\2/\u00a9\3\2\2\2\61\u00ab"+
		"\3\2\2\2\63\u00b1\3\2\2\2\65\u00b4\3\2\2\2\67\u00bb\3\2\2\29\u00bd\3\2"+
		"\2\2;\u00c3\3\2\2\2=\u00c6\3\2\2\2?\u00ca\3\2\2\2A\u00d4\3\2\2\2C\u00db"+
		"\3\2\2\2E\u00e4\3\2\2\2G\u00ed\3\2\2\2I\u0156\3\2\2\2K\u0162\3\2\2\2M"+
		"\u0165\3\2\2\2O\u016b\3\2\2\2QR\7.\2\2R\4\3\2\2\2ST\7,\2\2T\6\3\2\2\2"+
		"UV\7/\2\2V\b\3\2\2\2WX\7R\2\2XY\7T\2\2YZ\7Q\2\2Z[\7I\2\2[\\\7T\2\2\\]"+
		"\7C\2\2]^\7O\2\2^\n\3\2\2\2_`\7*\2\2`\f\3\2\2\2ab\7>\2\2b\16\3\2\2\2c"+
		"d\7T\2\2de\7G\2\2ef\7C\2\2fg\7F\2\2g\20\3\2\2\2hi\7G\2\2ij\7P\2\2jk\7"+
		"F\2\2k\22\3\2\2\2lm\7#\2\2mn\7?\2\2n\24\3\2\2\2op\7>\2\2pq\7?\2\2q\26"+
		"\3\2\2\2rs\7G\2\2st\7N\2\2tu\7U\2\2uv\7G\2\2v\30\3\2\2\2wx\7G\2\2xy\7"+
		"P\2\2yz\7F\2\2z{\7K\2\2{|\7H\2\2|\32\3\2\2\2}~\7X\2\2~\177\7Q\2\2\177"+
		"\u0080\7K\2\2\u0080\u0081\7F\2\2\u0081\34\3\2\2\2\u0082\u0083\7U\2\2\u0083"+
		"\u0084\7V\2\2\u0084\u0085\7T\2\2\u0085\u0086\7K\2\2\u0086\u0087\7P\2\2"+
		"\u0087\u0088\7I\2\2\u0088\36\3\2\2\2\u0089\u008a\7K\2\2\u008a\u008b\7"+
		"H\2\2\u008b \3\2\2\2\u008c\u008d\7Y\2\2\u008d\u008e\7T\2\2\u008e\u008f"+
		"\7K\2\2\u008f\u0090\7V\2\2\u0090\u0091\7G\2\2\u0091\"\3\2\2\2\u0092\u0093"+
		"\7+\2\2\u0093$\3\2\2\2\u0094\u0095\7-\2\2\u0095&\3\2\2\2\u0096\u0097\7"+
		"Y\2\2\u0097\u0098\7J\2\2\u0098\u0099\7K\2\2\u0099\u009a\7N\2\2\u009a\u009b"+
		"\7G\2\2\u009b(\3\2\2\2\u009c\u009d\7?\2\2\u009d*\3\2\2\2\u009e\u009f\7"+
		"=\2\2\u009f,\3\2\2\2\u00a0\u00a1\7H\2\2\u00a1\u00a2\7W\2\2\u00a2\u00a3"+
		"\7P\2\2\u00a3\u00a4\7E\2\2\u00a4\u00a5\7V\2\2\u00a5\u00a6\7K\2\2\u00a6"+
		"\u00a7\7Q\2\2\u00a7\u00a8\7P\2\2\u00a8.\3\2\2\2\u00a9\u00aa\7@\2\2\u00aa"+
		"\60\3\2\2\2\u00ab\u00ac\7H\2\2\u00ac\u00ad\7N\2\2\u00ad\u00ae\7Q\2\2\u00ae"+
		"\u00af\7C\2\2\u00af\u00b0\7V\2\2\u00b0\62\3\2\2\2\u00b1\u00b2\7<\2\2\u00b2"+
		"\u00b3\7?\2\2\u00b3\64\3\2\2\2\u00b4\u00b5\7T\2\2\u00b5\u00b6\7G\2\2\u00b6"+
		"\u00b7\7V\2\2\u00b7\u00b8\7W\2\2\u00b8\u00b9\7T\2\2\u00b9\u00ba\7P\2\2"+
		"\u00ba\66\3\2\2\2\u00bb\u00bc\7\61\2\2\u00bc8\3\2\2\2\u00bd\u00be\7D\2"+
		"\2\u00be\u00bf\7G\2\2\u00bf\u00c0\7I\2\2\u00c0\u00c1\7K\2\2\u00c1\u00c2"+
		"\7P\2\2\u00c2:\3\2\2\2\u00c3\u00c4\7@\2\2\u00c4\u00c5\7?\2\2\u00c5<\3"+
		"\2\2\2\u00c6\u00c7\7K\2\2\u00c7\u00c8\7P\2\2\u00c8\u00c9\7V\2\2\u00c9"+
		">\3\2\2\2\u00ca\u00cb\7G\2\2\u00cb\u00cc\7P\2\2\u00cc\u00cd\7F\2\2\u00cd"+
		"\u00ce\7Y\2\2\u00ce\u00cf\7J\2\2\u00cf\u00d0\7K\2\2\u00d0\u00d1\7N\2\2"+
		"\u00d1\u00d2\7G\2\2\u00d2@\3\2\2\2\u00d3\u00d5\t\2\2\2\u00d4\u00d3\3\2"+
		"\2\2\u00d5\u00d6\3\2\2\2\u00d6\u00d4\3\2\2\2\u00d6\u00d7\3\2\2\2\u00d7"+
		"B\3\2\2\2\u00d8\u00da\t\2\2\2\u00d9\u00d8\3\2\2\2\u00da\u00dd\3\2\2\2"+
		"\u00db\u00d9\3\2\2\2\u00db\u00dc\3\2\2\2\u00dc\u00de\3\2\2\2\u00dd\u00db"+
		"\3\2\2\2\u00de\u00e0\7\60\2\2\u00df\u00e1\t\2\2\2\u00e0\u00df\3\2\2\2"+
		"\u00e1\u00e2\3\2\2\2\u00e2\u00e0\3\2\2\2\u00e2\u00e3\3\2\2\2\u00e3D\3"+
		"\2\2\2\u00e4\u00e8\7$\2\2\u00e5\u00e7\13\2\2\2\u00e6\u00e5\3\2\2\2\u00e7"+
		"\u00ea\3\2\2\2\u00e8\u00e9\3\2\2\2\u00e8\u00e6\3\2\2\2\u00e9\u00eb\3\2"+
		"\2\2\u00ea\u00e8\3\2\2\2\u00eb\u00ec\7$\2\2\u00ecF\3\2\2\2\u00ed\u00ee"+
		"\t\3\2\2\u00ee\u00f2\t\3\2\2\u00ef\u00f1\13\2\2\2\u00f0\u00ef\3\2\2\2"+
		"\u00f1\u00f4\3\2\2\2\u00f2\u00f3\3\2\2\2\u00f2\u00f0\3\2\2\2\u00f3\u00f5"+
		"\3\2\2\2\u00f4\u00f2\3\2\2\2\u00f5\u00f6\7\f\2\2\u00f6\u00f7\3\2\2\2\u00f7"+
		"\u00f8\b$\2\2\u00f8H\3\2\2\2\u00f9\u00fa\7R\2\2\u00fa\u00fb\7T\2\2\u00fb"+
		"\u00fc\7Q\2\2\u00fc\u00fd\7I\2\2\u00fd\u00fe\7T\2\2\u00fe\u00ff\7C\2\2"+
		"\u00ff\u0157\7O\2\2\u0100\u0101\7D\2\2\u0101\u0102\7G\2\2\u0102\u0103"+
		"\7I\2\2\u0103\u0104\7K\2\2\u0104\u0157\7P\2\2\u0105\u0106\7G\2\2\u0106"+
		"\u0107\7P\2\2\u0107\u0157\7F\2\2\u0108\u0109\7H\2\2\u0109\u010a\7W\2\2"+
		"\u010a\u010b\7P\2\2\u010b\u010c\7E\2\2\u010c\u010d\7V\2\2\u010d\u010e"+
		"\7K\2\2\u010e\u010f\7Q\2\2\u010f\u0157\7P\2\2\u0110\u0111\7T\2\2\u0111"+
		"\u0112\7G\2\2\u0112\u0113\7C\2\2\u0113\u0157\7F\2\2\u0114\u0115\7Y\2\2"+
		"\u0115\u0116\7T\2\2\u0116\u0117\7K\2\2\u0117\u0118\7V\2\2\u0118\u0157"+
		"\7G\2\2\u0119\u011a\7K\2\2\u011a\u0157\7H\2\2\u011b\u011c\7G\2\2\u011c"+
		"\u011d\7N\2\2\u011d\u011e\7U\2\2\u011e\u0157\7G\2\2\u011f\u0120\7G\2\2"+
		"\u0120\u0121\7P\2\2\u0121\u0122\7F\2\2\u0122\u0123\7K\2\2\u0123\u0157"+
		"\7H\2\2\u0124\u0125\7Y\2\2\u0125\u0126\7J\2\2\u0126\u0127\7K\2\2\u0127"+
		"\u0128\7N\2\2\u0128\u0157\7G\2\2\u0129\u012a\7G\2\2\u012a\u012b\7P\2\2"+
		"\u012b\u012c\7F\2\2\u012c\u012d\7Y\2\2\u012d\u012e\7J\2\2\u012e\u012f"+
		"\7K\2\2\u012f\u0130\7N\2\2\u0130\u0157\7G\2\2\u0131\u0132\7E\2\2\u0132"+
		"\u0133\7Q\2\2\u0133\u0134\7P\2\2\u0134\u0135\7V\2\2\u0135\u0136\7K\2\2"+
		"\u0136\u0137\7P\2\2\u0137\u0138\7W\2\2\u0138\u0157\7G\2\2\u0139\u013a"+
		"\7D\2\2\u013a\u013b\7T\2\2\u013b\u013c\7G\2\2\u013c\u013d\7C\2\2\u013d"+
		"\u0157\7M\2\2\u013e\u013f\7T\2\2\u013f\u0140\7G\2\2\u0140\u0141\7V\2\2"+
		"\u0141\u0142\7W\2\2\u0142\u0143\7T\2\2\u0143\u0157\7P\2\2\u0144\u0145"+
		"\7K\2\2\u0145\u0146\7P\2\2\u0146\u0157\7V\2\2\u0147\u0148\7X\2\2\u0148"+
		"\u0149\7Q\2\2\u0149\u014a\7K\2\2\u014a\u0157\7F\2\2\u014b\u014c\7U\2\2"+
		"\u014c\u014d\7V\2\2\u014d\u014e\7T\2\2\u014e\u014f\7K\2\2\u014f\u0150"+
		"\7P\2\2\u0150\u0157\7I\2\2\u0151\u0152\7H\2\2\u0152\u0153\7N\2\2\u0153"+
		"\u0154\7Q\2\2\u0154\u0155\7C\2\2\u0155\u0157\7V\2\2\u0156\u00f9\3\2\2"+
		"\2\u0156\u0100\3\2\2\2\u0156\u0105\3\2\2\2\u0156\u0108\3\2\2\2\u0156\u0110"+
		"\3\2\2\2\u0156\u0114\3\2\2\2\u0156\u0119\3\2\2\2\u0156\u011b\3\2\2\2\u0156"+
		"\u011f\3\2\2\2\u0156\u0124\3\2\2\2\u0156\u0129\3\2\2\2\u0156\u0131\3\2"+
		"\2\2\u0156\u0139\3\2\2\2\u0156\u013e\3\2\2\2\u0156\u0144\3\2\2\2\u0156"+
		"\u0147\3\2\2\2\u0156\u014b\3\2\2\2\u0156\u0151\3\2\2\2\u0157J\3\2\2\2"+
		"\u0158\u0159\7<\2\2\u0159\u0163\7?\2\2\u015a\u0163\t\4\2\2\u015b\u015c"+
		"\7#\2\2\u015c\u0163\7?\2\2\u015d\u0163\t\5\2\2\u015e\u015f\7>\2\2\u015f"+
		"\u0163\7?\2\2\u0160\u0161\7@\2\2\u0161\u0163\7?\2\2\u0162\u0158\3\2\2"+
		"\2\u0162\u015a\3\2\2\2\u0162\u015b\3\2\2\2\u0162\u015d\3\2\2\2\u0162\u015e"+
		"\3\2\2\2\u0162\u0160\3\2\2\2\u0163L\3\2\2\2\u0164\u0166\t\6\2\2\u0165"+
		"\u0164\3\2\2\2\u0166\u0167\3\2\2\2\u0167\u0165\3\2\2\2\u0167\u0168\3\2"+
		"\2\2\u0168\u0169\3\2\2\2\u0169\u016a\b\'\3\2\u016aN\3\2\2\2\u016b\u016f"+
		"\t\7\2\2\u016c\u016e\t\b\2\2\u016d\u016c\3\2\2\2\u016e\u0171\3\2\2\2\u016f"+
		"\u016d\3\2\2\2\u016f\u0170\3\2\2\2\u0170P\3\2\2\2\u0171\u016f\3\2\2\2"+
		"\f\2\u00d6\u00db\u00e2\u00e8\u00f2\u0156\u0162\u0167\u016f";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}