;;;usm.nw:459
(class FinancialHistory Object
    (cashOnHand incomes outgoes)
    (method setInitialBalance: (amount) ; private
        (set cashOnHand amount)
        (set incomes      (new Dictionary))
        (set outgoes (new Dictionary))
        self)
    (method deposit:from: (amount source)
        (at:put: incomes source (+ (totalDepositedFrom: self source) amount))
        (set cashOnHand (+ cashOnHand amount)))
    (method withdraw:for: (amount reason)
        (at:put: outgoes reason (+ (totalWithdrawnFor: self reason) amount))
        (set cashOnHand (- cashOnHand amount)))
    (method cashOnHand () cashOnHand)
    (method totalDepositedFrom: (source)
        (ifTrue:ifFalse: (includesKey: incomes source)
            [(at: incomes source)]
            [0]))
    (method totalWithdrawnFor: (reason)
        (ifTrue:ifFalse: (includesKey: outgoes reason)
            [(at: outgoes reason)]
            [0]))
    (class-method initialBalance: (amount)
        (setInitialBalance: (new self) amount))
)
;;;usm.nw:811
(class DeductibleHistory FinancialHistory
    (deductible)
    (class-method initialBalance: (amount)
        (initDeductibleHistory (initialBalance: super amount)))
    (method initDeductibleHistory ()
        (set deductible 0)
        self)
    (method spend:deduct: (amount reason)
        (withdraw:for: self amount reason)
        (set deductible (+ deductible amount)))
    (method withdraw:for:deduct: (amount reason deduction)
        (withdraw:for: self amount reason)
        (set deductible (+ deductible deduction)))
    (method totalDeductions () deductible))
